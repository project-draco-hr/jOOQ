{
  jOOQAbstractTest.reset=false;
  Field<?> nullField=null;
switch (dialect().family()) {
case ORACLE:
case POSTGRES:
    nullField=cast(null,TAuthor_ADDRESS());
  break;
default :
nullField=castNull(String.class);
break;
}
Insert<A> i=create().insertInto(TAuthor()).select(select(val(1000),val("Lukas")).select(val("Eder"),val(new Date(363589200000L)),castNull(Integer.class),nullField));
assertEquals(1,i.execute());
A author1=create().fetchOne(TAuthor(),TAuthor_FIRST_NAME().equal("Lukas"));
assertEquals(1000,(int)author1.getValue(TAuthor_ID()));
assertEquals("Lukas",author1.getValue(TAuthor_FIRST_NAME()));
assertEquals("Eder",author1.getValue(TAuthor_LAST_NAME()));
assertEquals(null,author1.getValue(TAuthor_YEAR_OF_BIRTH()));
i=create().insertInto(TAuthor(),TAuthor_ID(),TAuthor_LAST_NAME()).select(select(val(1001),val("Hesse")));
assertEquals(1,i.execute());
A author2=create().fetchOne(TAuthor(),TAuthor_LAST_NAME().equal("Hesse"));
assertEquals(1001,(int)author2.getValue(TAuthor_ID()));
assertEquals(null,author2.getValue(TAuthor_FIRST_NAME()));
assertEquals("Hesse",author2.getValue(TAuthor_LAST_NAME()));
assertEquals(null,author2.getValue(TAuthor_YEAR_OF_BIRTH()));
}
