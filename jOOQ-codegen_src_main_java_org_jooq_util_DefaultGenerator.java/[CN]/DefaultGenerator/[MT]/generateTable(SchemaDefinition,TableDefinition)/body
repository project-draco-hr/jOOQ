{
  UniqueKeyDefinition mainKey=table.getMainUniqueKey();
  log.info("Generating table",strategy.getFileName(table) + " [input=" + table.getInputName()+ ", output="+ table.getOutputName()+ ", pk="+ (mainKey != null ? mainKey.getName() : "N/A")+ "]");
  GenerationWriter out=new GenerationWriter(strategy.getFile(table));
  printHeader(out,table);
  printClassJavadoc(out,table);
  Class<?> baseClass;
  if (generateRelations() && mainKey != null) {
    baseClass=UpdatableTableImpl.class;
  }
 else {
    baseClass=TableImpl.class;
  }
  out.print("public class ");
  out.print(strategy.getJavaClassName(table));
  out.print(" extends ");
  out.print(baseClass);
  out.print("<");
  out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
  out.print(">");
  printImplements(out,table,Mode.DEFAULT);
  out.println(" {");
  out.printSerial();
  printSingletonInstance(table,out);
  printRecordTypeMethod(table,out);
  for (  ColumnDefinition column : table.getColumns()) {
    printTableColumn(out,column,table);
  }
  if (generateInstanceFields()) {
    out.println();
    out.print("\tpublic ");
  }
 else {
    printJavadocNoFurtherInstancesAllowed(out);
    out.print("\tprivate ");
  }
  out.println(strategy.getJavaClassName(table) + "() {");
  if (!schema.isDefaultSchema()) {
    out.println("\t\tsuper(\"" + table.getOutputName() + "\", "+ strategy.getFullJavaIdentifier(schema)+ ");");
  }
 else {
    out.println("\t\tsuper(\"" + table.getOutputName() + "\");");
  }
  out.println("\t}");
  if (generateInstanceFields()) {
    out.println();
    out.print("\tpublic ");
    out.print(strategy.getJavaClassName(table));
    out.print("(");
    out.print(String.class);
    out.println(" alias) {");
    out.print("\t\tsuper(alias, ");
    if (schema.isDefaultSchema()) {
      out.print("null");
    }
 else {
      out.print(strategy.getFullJavaIdentifier(schema));
    }
    out.print(", ");
    out.print(strategy.getFullJavaIdentifier(table));
    out.println(");");
    out.println("\t}");
  }
  if (generateRelations()) {
    IdentityDefinition identity=table.getIdentity();
    if (identity != null) {
      out.println();
      out.println("\t@Override");
      out.print("\tpublic ");
      out.print(Identity.class);
      out.print("<");
      out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
      out.print(", ");
      out.print(getJavaType(identity.getColumn().getType()));
      out.println("> getIdentity() {");
      out.print("\t\treturn ");
      out.print(strategy.getFullJavaIdentifier(identity));
      out.println(";");
      out.println("\t}");
    }
    if (mainKey != null) {
      out.println();
      out.println("\t@Override");
      out.print("\tpublic ");
      out.print(UniqueKey.class);
      out.print("<");
      out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
      out.println("> getMainKey() {");
      out.print("\t\treturn ");
      out.print(strategy.getFullJavaIdentifier(mainKey));
      out.println(";");
      out.println("\t}");
    }
    List<UniqueKeyDefinition> uniqueKeys=table.getUniqueKeys();
    if (uniqueKeys.size() > 0) {
      out.println();
      out.println("\t@Override");
      out.println("\t@SuppressWarnings(\"unchecked\")");
      out.print("\tpublic ");
      out.print(List.class);
      out.print("<");
      out.print(UniqueKey.class);
      out.print("<");
      out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
      out.println(">> getKeys() {");
      out.print("\t\treturn ");
      out.print(Arrays.class);
      out.print(".<");
      out.print(UniqueKey.class);
      out.print("<");
      out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
      out.print(">>asList(");
      String separator="";
      for (      UniqueKeyDefinition uniqueKey : uniqueKeys) {
        out.print(separator);
        out.print(strategy.getFullJavaIdentifier(uniqueKey));
        separator=", ";
      }
      out.println(");");
      out.println("\t}");
    }
    List<ForeignKeyDefinition> foreignKeys=table.getForeignKeys();
    if (foreignKeys.size() > 0) {
      out.println();
      out.println("\t@Override");
      out.println("\t@SuppressWarnings(\"unchecked\")");
      out.print("\tpublic ");
      out.print(List.class);
      out.print("<");
      out.print(ForeignKey.class);
      out.print("<");
      out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
      out.println(", ?>> getReferences() {");
      out.print("\t\treturn ");
      out.print(Arrays.class);
      out.print(".<");
      out.print(ForeignKey.class);
      out.print("<");
      out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
      out.print(", ?>>asList(");
      String separator="";
      for (      ForeignKeyDefinition foreignKey : foreignKeys) {
        out.print(separator);
        out.print(strategy.getFullJavaIdentifier(foreignKey));
        separator=", ";
      }
      out.println(");");
      out.println("\t}");
    }
  }
  if (baseClass == UpdatableTableImpl.class) {
    patternLoop:     for (    String pattern : database.getRecordVersionFields()) {
      for (      ColumnDefinition column : table.getColumns()) {
        if ((column.getName().matches(pattern.trim()) || column.getQualifiedName().matches(pattern.trim()))) {
          out.println();
          out.println("\t@Override");
          out.print("\tpublic ");
          out.print(TableField.class);
          out.print("<");
          out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
          out.print(", ");
          out.print(getJavaType(column.getType()));
          out.println("> getRecordVersion() {");
          out.print("\t\treturn ");
          out.print(strategy.getFullJavaIdentifier(column));
          out.println(";");
          out.println("\t}");
          break patternLoop;
        }
      }
    }
    timestampLoop:     for (    String pattern : database.getRecordTimestampFields()) {
      for (      ColumnDefinition column : table.getColumns()) {
        if ((column.getName().matches(pattern.trim()) || column.getQualifiedName().matches(pattern.trim()))) {
          out.println();
          out.println("\t@Override");
          out.print("\tpublic ");
          out.print(TableField.class);
          out.print("<");
          out.print(strategy.getFullJavaClassName(table,Mode.RECORD));
          out.print(", ");
          out.print(getJavaType(column.getType()));
          out.println("> getRecordTimestamp() {");
          out.print("\t\treturn ");
          out.print(strategy.getFullJavaIdentifier(column));
          out.println(";");
          out.println("\t}");
          break timestampLoop;
        }
      }
    }
  }
  if (generateInstanceFields()) {
    out.println();
    out.println("\t@Override");
    out.print("\tpublic ");
    out.print(strategy.getFullJavaClassName(table));
    out.print(" as(");
    out.print(String.class);
    out.println(" alias) {");
    out.print("\t\treturn new ");
    out.print(strategy.getFullJavaClassName(table));
    out.println("(alias);");
    out.println("\t}");
  }
  out.printStaticInitialisationStatementsPlaceholder();
  out.println("}");
  out.close();
}
