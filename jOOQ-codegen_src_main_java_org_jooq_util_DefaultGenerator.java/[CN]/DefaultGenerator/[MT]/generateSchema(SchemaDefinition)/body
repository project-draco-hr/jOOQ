{
  log.info("Generating schema",strategy.getFileName(schema));
  log.info("----------------------------------------------------------");
  outS=new GenerationWriter(strategy.getFile(schema));
  printHeader(outS,schema);
  printClassJavadoc(outS,schema);
  outS.print("public class ");
  outS.print(strategy.getJavaClassName(schema));
  outS.print(" extends ");
  outS.print(SchemaImpl.class);
  printImplements(outS,schema,Mode.DEFAULT);
  outS.println(" {");
  outS.printSerial();
  outS.println();
  outS.println("\t/**");
  outS.println("\t * The singleton instance of " + schema.getQualifiedOutputName());
  outS.println("\t */");
  outS.println("\tpublic static final " + strategy.getJavaClassName(schema) + " "+ strategy.getJavaIdentifier(schema)+ " = new "+ strategy.getJavaClassName(schema)+ "();");
  outS.println();
  printNoFurtherInstancesAllowedJavadoc(outS);
  outS.println("\tprivate " + strategy.getJavaClassName(schema) + "() {");
  outS.println("\t\tsuper(\"" + schema.getOutputName() + "\");");
  outS.println("\t}");
  outS.printInitialisationStatementsPlaceholder();
}
