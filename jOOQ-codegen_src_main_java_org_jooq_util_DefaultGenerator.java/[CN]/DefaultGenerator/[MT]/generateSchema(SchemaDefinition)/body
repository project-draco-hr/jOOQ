{
  log.info("Generating schema",getStrategy().getFileName(schema));
  log.info("----------------------------------------------------------");
  final String schemaName=schema.getQualifiedOutputName();
  final String schemaId=getStrategy().getJavaIdentifier(schema);
  final String className=getStrategy().getJavaClassName(schema);
  final List<String> interfaces=getStrategy().getJavaClassImplements(schema,Mode.DEFAULT);
  outS=new JavaWriter(getStrategy().getFile(schema));
  printPackage(outS,schema);
  printClassJavadoc(outS,schema);
  outS.println("public class %s extends %s[[before= implements ][%s]] {",className,SchemaImpl.class,interfaces);
  outS.printSerial();
  outS.tab(1).javadoc("The singleton instance of <code>%s</code>",schemaName);
  outS.tab(1).println("public static final %s %s = new %s();",className,schemaId,className);
  outS.tab(1).javadoc(NO_FURTHER_INSTANCES_ALLOWED);
  outS.tab(1).println("private %s() {",className);
  outS.tab(2).println("super(\"%s\");",schema.getOutputName());
  outS.tab(1).println("}");
  outS.printInitialisationStatementsPlaceholder();
}
