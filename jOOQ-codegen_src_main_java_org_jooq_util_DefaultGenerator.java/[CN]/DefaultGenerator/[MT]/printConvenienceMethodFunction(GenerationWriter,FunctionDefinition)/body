{
  if (function.getInParameters().size() > 254) {
    log.warn("Too many parameters","Function " + function + " has more than 254 in parameters. Skipping generation of convenience method.");
    return;
  }
  out.println();
  out.println("\t/**");
  out.println("\t * Invoke " + strategy.getJavaIdentifierUC(function));
  out.println("\t *");
  for (  ParameterDefinition parameter : function.getInParameters()) {
    out.println("\t * @param " + strategy.getJavaClassNameLC(parameter));
  }
  out.println("\t */");
  out.print("\tpublic static ");
  out.print(getJavaType(function.getReturnType()));
  out.print(" ");
  out.print(strategy.getJavaClassNameLC(function));
  out.print("(");
  out.print(Configuration.class);
  out.print(" configuration");
  for (  ParameterDefinition parameter : function.getInParameters()) {
    out.print(", ");
    printNumberType(out,parameter.getType());
    out.print(" ");
    out.print(strategy.getJavaClassNameLC(parameter));
  }
  out.print(") throws ");
  out.print(SQLException.class);
  out.println(" {");
  out.print("\t\t");
  out.print(strategy.getFullJavaClassName(function));
  out.print(" f = new ");
  out.print(strategy.getFullJavaClassName(function));
  out.println("();");
  for (  ParameterDefinition parameter : function.getInParameters()) {
    out.println("\t\tf.set" + strategy.getJavaClassName(parameter) + "("+ strategy.getJavaClassNameLC(parameter)+ ");");
  }
  out.println();
  out.println("\t\tf.execute(configuration);");
  out.println("\t\treturn f.getReturnValue();");
  out.println("\t}");
}
