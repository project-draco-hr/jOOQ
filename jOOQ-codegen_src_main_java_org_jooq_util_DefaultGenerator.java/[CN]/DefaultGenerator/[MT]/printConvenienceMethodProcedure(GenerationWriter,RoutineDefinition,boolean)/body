{
  if (procedure.getInParameters().size() > 254) {
    log.warn("Too many parameters","Procedure " + procedure + " has more than 254 in parameters. Skipping generation of convenience method.");
    return;
  }
  out.println();
  out.println("\t/**");
  out.println("\t * Invoke " + strategy.getJavaIdentifierUC(procedure));
  out.println("\t *");
  for (  ParameterDefinition parameter : procedure.getAllParameters()) {
    out.print("\t * @param " + strategy.getJavaMemberName(parameter) + " ");
    if (procedure.getInParameters().contains(parameter)) {
      if (procedure.getOutParameters().contains(parameter)) {
        out.println("IN OUT parameter");
      }
 else {
        out.println("IN parameter");
      }
    }
 else {
      out.println("OUT parameter");
    }
  }
  printThrowsDataAccessException(out);
  out.println("\t */");
  out.print("\tpublic ");
  if (!instance) {
    out.print("static ");
  }
  if (procedure.getOutParameters().size() == 0) {
    out.print("void ");
  }
 else   if (procedure.getOutParameters().size() == 1) {
    out.print(getJavaType(procedure.getOutParameters().get(0).getType()));
    out.print(" ");
  }
 else {
    out.print(strategy.getFullJavaClassName(procedure) + " ");
  }
  out.print(strategy.getJavaMethodName(procedure));
  out.print("(");
  String glue="";
  if (!instance) {
    out.print(Configuration.class);
    out.print(" configuration");
    glue=", ";
  }
  for (  ParameterDefinition parameter : procedure.getInParameters()) {
    if (instance && parameter.equals(procedure.getInParameters().get(0))) {
      continue;
    }
    out.print(glue);
    printNumberType(out,parameter.getType());
    out.print(" ");
    out.print(strategy.getJavaMemberName(parameter));
    glue=", ";
  }
  out.println(") {");
  out.print("\t\t");
  out.print(strategy.getFullJavaClassName(procedure));
  out.print(" p = new ");
  out.print(strategy.getFullJavaClassName(procedure));
  out.println("();");
  for (  ParameterDefinition parameter : procedure.getInParameters()) {
    out.print("\t\tp.");
    out.print(strategy.getJavaSetterName(parameter));
    out.print("(");
    if (instance && parameter.equals(procedure.getInParameters().get(0))) {
      out.print("this");
    }
 else {
      out.print(strategy.getJavaMemberName(parameter));
    }
    out.println(");");
  }
  out.println();
  out.print("\t\tp.execute(");
  if (instance) {
    out.print("getConfiguration()");
  }
 else {
    out.print("configuration");
  }
  out.println(");");
  if (procedure.getOutParameters().size() > 0) {
    if (instance) {
      out.print("\t\tfrom(p.");
      out.print(strategy.getJavaGetterName(procedure.getOutParameters().get(0)));
      out.println("());");
    }
    if (procedure.getOutParameters().size() == 1) {
      out.print("\t\treturn p.");
      out.print(strategy.getJavaGetterName(procedure.getOutParameters().get(0)));
      out.println("();");
    }
 else     if (procedure.getOutParameters().size() > 1) {
      out.println("\t\treturn p;");
    }
  }
  out.println("\t}");
}
