{
  if (outS != null) {
    outS.println();
    printOverride(outS);
    outS.print("\tpublic final ");
    outS.print(List.class);
    outS.print("<");
    outS.print(type);
    if (isGeneric) {
      outS.print("<?>");
    }
    outS.print("> get");
    outS.print(type.getSimpleName());
    outS.println("s() {");
    outS.print("\t\treturn ");
    outS.print(Arrays.class);
    outS.print(".<");
    outS.print(type);
    if (isGeneric) {
      outS.print("<?>");
    }
    outS.print(">asList(");
    if (definitions.size() > 1) {
      outS.print("\n\t\t\t");
    }
    for (int i=0; i < definitions.size(); i++) {
      Definition def=definitions.get(i);
      if (i > 0) {
        outS.print(",\n\t\t\t");
      }
      printSingletonReference(outS,def);
    }
    outS.println(");");
    outS.println("\t}");
  }
}
