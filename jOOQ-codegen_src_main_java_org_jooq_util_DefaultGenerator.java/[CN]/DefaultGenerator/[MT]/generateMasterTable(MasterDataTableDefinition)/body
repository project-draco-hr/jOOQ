{
  log.info("Generating table",strategy.getFileName(table));
  GenerationWriter out=new GenerationWriter(strategy.getFile(table));
  printHeader(out,table);
  printClassJavadoc(out,table);
  ColumnDefinition pk=table.getPrimaryKeyColumn();
  ColumnDefinition l=table.getLiteralColumn();
  ColumnDefinition d=table.getDescriptionColumn();
  Result<Record> data=table.getData();
  out.print("public enum ");
  out.print(strategy.getJavaClassName(table));
  printImplements(out,table,Mode.ENUM,MasterDataType.class.getName() + "<" + getJavaType(pk.getType())+ ">");
  out.println(" {");
  Set<ColumnDefinition> columns=new LinkedHashSet<ColumnDefinition>(Arrays.asList(pk,l,d));
  for (  Record record : data) {
    String literal=record.getValueAsString(l.getName());
    String description=record.getValueAsString(d.getName());
    if (!StringUtils.isEmpty(description)) {
      out.println();
      out.println("\t/**");
      out.println("\t * " + description);
      out.println("\t */");
    }
    out.print("\t");
    out.print(GenerationUtil.convertToJavaIdentifier(literal));
    out.print("(");
    String separator="";
    for (    ColumnDefinition column : columns) {
      out.print(separator);
      out.printNewJavaObject(getJavaType(column.getType()),record.getValue(column.getName()));
      separator=", ";
    }
    out.println("),");
  }
  out.println("\t;");
  out.println();
  for (  ColumnDefinition column : columns) {
    out.print("\tprivate final ");
    out.print(getJavaType(column.getType()));
    out.print(" ");
    out.println(strategy.getJavaMemberName(column) + ";");
  }
  out.println();
  out.print("\tprivate " + strategy.getJavaClassName(table) + "(");
  String separator="";
  for (  ColumnDefinition column : columns) {
    out.print(separator);
    out.print(getJavaType(column.getType()));
    out.print(" ");
    out.print(strategy.getJavaMemberName(column));
    separator=", ";
  }
  out.println(") {");
  for (  ColumnDefinition column : columns) {
    out.print("\t\tthis.");
    out.print(strategy.getJavaMemberName(column));
    out.print(" = ");
    out.print(strategy.getJavaMemberName(column));
    out.println(";");
  }
  out.println("\t}");
  out.println();
  printOverride(out);
  out.print("\tpublic ");
  out.print(getJavaType(pk.getType()));
  out.println(" getPrimaryKey() {");
  out.println("\t\treturn " + strategy.getJavaMemberName(pk) + ";");
  out.println("\t}");
  for (  ColumnDefinition column : columns) {
    printFieldJavaDoc(out,column);
    out.print("\tpublic final ");
    out.print(getJavaType(column.getType()));
    out.print(" ");
    out.print(strategy.getJavaGetterName(column,Mode.DEFAULT));
    out.println("() {");
    out.print("\t\treturn ");
    out.print(strategy.getJavaMemberName(column));
    out.println(";");
    out.println("\t}");
  }
  out.println("}");
  out.close();
}
