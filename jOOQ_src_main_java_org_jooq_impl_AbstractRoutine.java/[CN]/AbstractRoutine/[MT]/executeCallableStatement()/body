{
  ExecuteContext ctx=new DefaultExecuteContext(configuration,this);
  ExecuteListener listener=new ExecuteListeners(ctx);
  try {
    Connection connection=ctx.connection();
    listener.renderStart(ctx);
    ctx.sql(create(configuration).render(this));
    listener.renderEnd(ctx);
    listener.prepareStart(ctx);
    ctx.statement(connection.prepareCall(ctx.sql()));
    listener.prepareEnd(ctx);
    listener.bindStart(ctx);
    create(configuration).bind(this,ctx.statement());
    registerOutParameters(configuration,(CallableStatement)ctx.statement());
    listener.bindEnd(ctx);
    boolean autoCommit=connection.getAutoCommit();
    if (autoCommit && configuration.getDialect() == SQLDialect.POSTGRES) {
      connection.setAutoCommit(false);
    }
    listener.executeStart(ctx);
    ctx.statement().execute();
    listener.executeEnd(ctx);
    if (autoCommit && configuration.getDialect() == SQLDialect.POSTGRES) {
      connection.setAutoCommit(autoCommit);
    }
    fetchOutParameters(ctx);
    return 0;
  }
 catch (  SQLException e) {
    ctx.sqlException(e);
    listener.exception(ctx);
    throw ctx.exception();
  }
 finally {
    Utils.safeClose(listener,ctx);
  }
}
