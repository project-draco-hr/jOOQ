{
switch (configuration.getDialect()) {
case ASE:
    Field<Double> days=function("datediff",SQLDataType.DOUBLE,literal("day"),timestamp2,timestamp1);
  Field<Double> milli=function("datediff",SQLDataType.DOUBLE,literal("ms"),timestamp2.add(days),timestamp1);
return (Field)days.add(milli.div(literal(new DayToSecond(1).getTotalMilli())));
case CUBRID:
return (Field)timestamp1.sub(timestamp2).div(literal(new DayToSecond(1).getTotalMilli()));
case DB2:
return (Field)function("days",SQLDataType.INTEGER,timestamp1).sub(function("days",SQLDataType.INTEGER,timestamp2)).add(function("midnight_seconds",SQLDataType.INTEGER,timestamp1).sub(function("midnight_seconds",SQLDataType.INTEGER,timestamp2)).div(literal(new DayToSecond(1).getTotalSeconds())));
case DERBY:
return (Field)new FnPrefixFunction<Integer>("timestampdiff",SQLDataType.INTEGER,field("SQL_TSI_SECOND"),timestamp2,timestamp1).div(literal(new DayToSecond(1).getTotalSeconds()));
case H2:
case HSQLDB:
return function("datediff",getDataType(),literal("'ms'"),timestamp2,timestamp1).div(literal(new DayToSecond(1).getTotalMilli()));
case MYSQL:
return function("timestampdiff",getDataType(),literal("microsecond"),timestamp2,timestamp1).div(literal(new DayToSecond(1).getTotalMicro()));
case SQLSERVER:
case SYBASE:
return function("datediff",getDataType(),literal("ms"),timestamp2,timestamp1).div(literal(new DayToSecond(1).getTotalMilli()));
case ORACLE:
case POSTGRES:
return timestamp1.sub(timestamp2).cast(DayToSecond.class);
}
return null;
}
