{
  SQLDialect dialect=context.getDialect();
  if (context.inline()) {
    if (val == null) {
      context.sql("null");
    }
 else     if (type == Boolean.class) {
      if (asList(ASE,DB2,ORACLE,SQLSERVER,SQLITE,SYBASE).contains(dialect)) {
        context.sql(((Boolean)val) ? "1" : "0");
      }
 else {
        context.sql(val.toString());
      }
    }
 else     if (type == byte[].class) {
      byte[] binary=(byte[])val;
      if (dialect == H2) {
        context.sql("X'").sql(StringUtils.convertBytesToHex(binary)).sql("'");
      }
 else       if (Util.getStatementType(context.getSettings()) == STATEMENT) {
        throw new DataAccessException("Cannot inline binary data in dialect " + dialect + ". Use StatementType.PREPARED_STATEMENT instead");
      }
 else {
        context.sql("'").sql(Arrays.toString(binary).replace("'","''")).sql("'");
      }
    }
 else     if (Number.class.isAssignableFrom(type)) {
      context.sql(val.toString());
    }
 else     if (type.isArray()) {
      if (dialect == H2) {
        context.sql(Arrays.toString((Object[])val).replaceAll("\\[([^]]*)\\]","($1)"));
      }
 else {
        context.sql("ARRAY").sql(Arrays.toString((Object[])val));
      }
    }
 else     if (ArrayRecord.class.isAssignableFrom(type)) {
      context.sql(val.toString());
    }
 else     if (EnumType.class.isAssignableFrom(type)) {
      toSQL(context,((EnumType)val).getLiteral());
    }
 else     if (MasterDataType.class.isAssignableFrom(type)) {
      toSQL(context,((MasterDataType<?>)val).getPrimaryKey());
    }
 else     if (UDTRecord.class.isAssignableFrom(type)) {
      context.sql("[UDT]");
    }
 else {
      context.sql("'").sql(val.toString().replace("'","''")).sql("'");
    }
  }
 else   if (dialect == SQLDialect.POSTGRES) {
    if (type.isArray() && byte[].class != type) {
      context.sql(getBindVariable(context));
      context.sql("::");
      context.sql(FieldTypeHelper.getDataType(dialect,type).getCastTypeName(context));
    }
 else     if (EnumType.class.isAssignableFrom(type)) {
      context.sql(getBindVariable(context));
      if (!StringUtils.isBlank(((EnumType)val).getName())) {
        context.sql("::");
        context.literal(((EnumType)val).getName());
      }
    }
 else {
      context.sql(getBindVariable(context));
    }
  }
 else {
    context.sql(getBindVariable(context));
  }
}
