{
  SQLDialect dialect=context.getDialect();
  Converter<?,?> converter=DataTypes.converter(type);
  if (converter != null) {
    val=((Converter)converter).to(val);
    type=converter.fromType();
  }
  if (isInline(context)) {
    if (val == null) {
      context.keyword("null");
    }
 else     if (type == Boolean.class) {
      if (asList(ASE,DB2,ORACLE,SQLSERVER,SQLITE,SYBASE).contains(dialect)) {
        context.sql(((Boolean)val) ? "1" : "0");
      }
 else {
        context.keyword(val.toString());
      }
    }
 else     if (type == byte[].class) {
      byte[] binary=(byte[])val;
      if (asList(ASE,SQLSERVER,SYBASE).contains(dialect)) {
        context.sql("0x").sql(Util.convertBytesToHex(binary));
      }
 else       if (dialect == DB2) {
        context.keyword("blob").sql("(X'").sql(Util.convertBytesToHex(binary)).sql("')");
      }
 else       if (asList(DERBY,H2,HSQLDB,INGRES,MYSQL,SQLITE).contains(dialect)) {
        context.sql("X'").sql(Util.convertBytesToHex(binary)).sql("'");
      }
 else       if (asList(ORACLE).contains(dialect)) {
        context.keyword("hextoraw('").sql(Util.convertBytesToHex(binary)).sql("')");
      }
 else       if (dialect == POSTGRES) {
        context.sql("E'").sql(Util.convertBytesToPostgresOctal(binary)).keyword("'::bytea");
      }
 else {
        context.sql("X'").sql(Util.convertBytesToHex(binary)).sql("'");
      }
    }
 else     if (Interval.class.isAssignableFrom(type)) {
      context.sql("'").sql(val.toString()).sql("'");
    }
 else     if (Number.class.isAssignableFrom(type)) {
      context.sql(val.toString());
    }
 else     if (type == Date.class) {
      if (asList(ASE,SQLITE,SQLSERVER,SYBASE).contains(dialect)) {
        context.sql("'").sql(val.toString()).sql("'");
      }
 else       if (dialect == DERBY) {
        context.keyword("date('").sql(val.toString()).sql("')");
      }
 else {
        context.keyword("date '").sql(val.toString()).sql("'");
      }
    }
 else     if (type == Timestamp.class) {
      if (asList(ASE,SQLITE,SQLSERVER,SYBASE).contains(dialect)) {
        context.sql("'").sql(val.toString()).sql("'");
      }
 else       if (dialect == DERBY) {
        context.keyword("timestamp('").sql(val.toString()).sql("')");
      }
 else       if (dialect == CUBRID) {
        context.keyword("datetime '").sql(val.toString()).sql("'");
      }
 else {
        context.keyword("timestamp '").sql(val.toString()).sql("'");
      }
    }
 else     if (type == Time.class) {
      if (asList(ASE,SQLITE,SQLSERVER,SYBASE).contains(dialect)) {
        context.sql("'").sql(val.toString()).sql("'");
      }
 else       if (dialect == DERBY) {
        context.keyword("time('").sql(val.toString()).sql("')");
      }
 else       if (dialect == ORACLE) {
        context.keyword("timestamp '1970-01-01 ").sql(val.toString()).sql("'");
      }
 else {
        context.keyword("time '").sql(val.toString()).sql("'");
      }
    }
 else     if (type.isArray()) {
      if (dialect == H2) {
        context.sql(Arrays.toString((Object[])val).replaceAll("\\[([^]]*)\\]","($1)"));
      }
 else {
        context.keyword("ARRAY").sql(Arrays.toString((Object[])val));
      }
    }
 else     if (ArrayRecord.class.isAssignableFrom(type)) {
      context.sql(val.toString());
    }
 else     if (EnumType.class.isAssignableFrom(type)) {
      toSQL(context,((EnumType)val).getLiteral());
    }
 else     if (MasterDataType.class.isAssignableFrom(type)) {
      toSQL(context,((MasterDataType<?>)val).getPrimaryKey());
    }
 else     if (UDTRecord.class.isAssignableFrom(type)) {
      context.sql("[UDT]");
    }
 else {
      context.sql("'").sql(val.toString().replace("'","''")).sql("'");
    }
  }
 else   if (dialect == SQLDialect.POSTGRES) {
    if (type.isArray() && byte[].class != type) {
      context.sql(getBindVariable(context));
      context.sql("::");
      context.keyword(FieldTypeHelper.getDataType(dialect,type).getCastTypeName(context));
    }
 else     if (EnumType.class.isAssignableFrom(type)) {
      context.sql(getBindVariable(context));
      String name=((EnumType)type.getEnumConstants()[0]).getName();
      if (!StringUtils.isBlank(name)) {
        context.sql("::");
        context.literal(name);
      }
    }
 else {
      context.sql(getBindVariable(context));
    }
  }
 else {
    context.sql(getBindVariable(context));
  }
}
