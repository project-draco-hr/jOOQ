{
  if (skip) {
    getLog().info("Skipping jOOQ code generation");
    return;
  }
  ClassLoader oldCL=Thread.currentThread().getContextClassLoader();
  try {
    Thread.currentThread().setContextClassLoader(getClassLoader());
    String dir=generator.getTarget().getDirectory();
    if (!new File(dir).isAbsolute()) {
      generator.getTarget().setDirectory(project.getBasedir() + File.separator + dir);
    }
    Configuration configuration=new Configuration();
    configuration.setLogging(logging);
    configuration.setJdbc(jdbc);
    configuration.setGenerator(generator);
    StringWriter writer=new StringWriter();
    JAXB.marshal(configuration,writer);
    getLog().debug("Using this configuration:\n" + writer.toString());
    GenerationTool.generate(configuration);
  }
 catch (  Exception ex) {
    throw new MojoExecutionException("Error running jOOQ code generation tool",ex);
  }
 finally {
    Thread.currentThread().setContextClassLoader(oldCL);
  }
  project.addCompileSourceRoot(generator.getTarget().getDirectory());
}
