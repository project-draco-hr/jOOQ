{
  for (  Record record : create().select(Parameters.ORDINAL_POSITION,Parameters.PARAMETER_NAME,Parameters.PARAMETER_MODE,Parameters.DATA_TYPE,Parameters.CHARACTER_MAXIMUM_LENGTH,Parameters.NUMERIC_PRECISION,Parameters.NUMERIC_SCALE).from(PARAMETERS).where(Parameters.SPECIFIC_SCHEMA.eq(getSchema().getInputName())).and(Parameters.SPECIFIC_NAME.eq(getInputName())).and(Parameters.ROUTINE_TYPE.eq(procType.name())).orderBy(Parameters.ORDINAL_POSITION.asc()).fetch()) {
    String inOut=record.getValue(Parameters.PARAMETER_MODE);
    DataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),getSchema(),record.getValue(Parameters.DATA_TYPE),record.getValue(Parameters.CHARACTER_MAXIMUM_LENGTH),record.getValue(Parameters.NUMERIC_PRECISION),record.getValue(Parameters.NUMERIC_SCALE),null,null);
    if (inOut == null) {
      addParameter(InOutDefinition.RETURN,new DefaultParameterDefinition(this,"RETURN_VALUE",-1,type));
    }
 else {
      ParameterDefinition parameter=new DefaultParameterDefinition(this,record.getValue(Parameters.PARAMETER_NAME).replaceAll("@",""),record.getValue(Parameters.ORDINAL_POSITION,int.class),type);
      addParameter(InOutDefinition.getFromString(inOut),parameter);
    }
  }
}
