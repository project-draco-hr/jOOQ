{
switch (getDialect()) {
case DERBY:
{
      Field<BigInteger> field=field("identity_val_local()",BigInteger.class);
      return select(field).fetchOne(field);
    }
case H2:
case HSQLDB:
{
    Field<BigInteger> field=field("identity()",BigInteger.class);
    return select(field).fetchOne(field);
  }
case INGRES:
{
  Field<BigInteger> field=field("last_identity()",BigInteger.class);
  return select(field).fetchOne(field);
}
case CUBRID:
case MYSQL:
{
Field<BigInteger> field=field("last_insert_id()",BigInteger.class);
return select(field).fetchOne(field);
}
case SQLITE:
{
Field<BigInteger> field=field("last_insert_rowid()",BigInteger.class);
return select(field).fetchOne(field);
}
case ASE:
case SQLSERVER:
case SYBASE:
{
Field<BigInteger> field=field("@@identity",BigInteger.class);
return select(field).fetchOne(field);
}
default :
throw new SQLDialectNotSupportedException("identity functionality not supported by " + getDialect());
}
}
