{
  boolean anyResults=false;
  int i=0;
  int rows=(ctx.resultSet() == null) ? ctx.statement().getUpdateCount() : 0;
  for (i=0; i < maxConsumedResults; i++) {
    if (ctx.resultSet() != null) {
      anyResults=true;
      Field<?>[] fields=new MetaDataFieldProvider(ctx.configuration(),ctx.resultSet().getMetaData()).getFields();
      Cursor<Record> c=new CursorImpl<Record>(ctx,listener,fields,intern != null ? intern.internIndexes(fields) : null,true,false);
      results.resultsOrRows().add(new ResultsImpl.ResultOrRowsImpl(c.fetch()));
    }
 else {
      if (rows != -1)       results.resultsOrRows().add(new ResultsImpl.ResultOrRowsImpl(rows));
 else       break;
    }
    if (ctx.statement().getMoreResults())     ctx.resultSet(ctx.statement().getResultSet());
 else     if ((rows=ctx.statement().getUpdateCount()) != -1)     ctx.resultSet(null);
 else     break;
  }
  if (i == maxConsumedResults)   log.warn("Maximum consumed results reached: " + maxConsumedResults + ". This is probably a bug. Please report to https://github.com/jOOQ/jOOQ/issues/new");
  if (anyResults && ctx.family() != CUBRID)   ctx.statement().getMoreResults(Statement.CLOSE_ALL_RESULTS);
}
