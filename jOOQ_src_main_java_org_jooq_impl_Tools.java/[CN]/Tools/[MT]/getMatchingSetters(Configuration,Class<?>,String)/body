{
  return Cache.run(configuration,new CachedOperation<List<Method>>(){
    @Override public List<Method> call(){
      List<Method> result=new ArrayList<Method>();
      String camelCase=StringUtils.toCamelCase(name);
      String camelCaseLC=StringUtils.toLC(camelCase);
      for (      Method method : getInstanceMethods(type)) {
        Class<?>[] parameterTypes=method.getParameterTypes();
        if (parameterTypes.length == 1) {
          if (name.equals(method.getName())) {
            result.add(accessible(method));
          }
 else           if (camelCaseLC.equals(method.getName())) {
            result.add(accessible(method));
          }
 else           if (("set" + name).equals(method.getName())) {
            result.add(accessible(method));
          }
 else           if (("set" + camelCase).equals(method.getName())) {
            result.add(accessible(method));
          }
        }
      }
      return result;
    }
  }
,DATA_REFLECTION_CACHE_GET_MATCHING_SETTERS,type,name);
}
