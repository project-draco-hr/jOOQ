{
  socket=new Socket(ip,port);
  Thread thread=new Thread("SQL Remote Debugger Client on port " + port){
    @Override public void run(){
      DebuggerRegisterListener debuggerRegisterListener=null;
      try {
        final ObjectOutputStream out=new ObjectOutputStream(new BufferedOutputStream(socket.getOutputStream()));
        debuggerRegisterListener=new DebuggerRegisterListener(){
          @Override public void notifySqlQueryDebuggerListenerListModified(){
            try {
              boolean isLogging=!DebuggerRegister.getSqlQueryDebuggerList().isEmpty();
              out.writeObject(new ServerLoggingActivationMessage(isLogging));
              out.flush();
            }
 catch (            IOException e) {
              e.printStackTrace();
            }
          }
        }
;
        DebuggerRegister.addSqlQueryDebuggerRegisterListener(debuggerRegisterListener);
        ObjectInputStream in=new ObjectInputStream(new BufferedInputStream(socket.getInputStream()));
        for (Message o; (o=(Message)in.readObject()) != null; ) {
          if (o instanceof ClientDebugQueriesMessage) {
            DebuggerData sqlQueryDebuggerData=((ClientDebugQueriesMessage)o).getSqlQueryDebuggerData();
            for (            Debugger debugger : DebuggerRegister.getSqlQueryDebuggerList()) {
              debugger.debugQueries(sqlQueryDebuggerData);
            }
          }
 else           if (o instanceof ClientDebugResultSetMessage) {
            ClientDebugResultSetMessage m=(ClientDebugResultSetMessage)o;
            int sqlQueryDebuggerDataID=m.getSqlQueryDebuggerDataID();
            DebuggerResultSetData clientDebugResultSetData=m.getSqlQueryDebuggerResultSetData();
            for (            Debugger debugger : DebuggerRegister.getSqlQueryDebuggerList()) {
              debugger.debugResultSet(sqlQueryDebuggerDataID,clientDebugResultSetData);
            }
          }
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
 finally {
        if (debuggerRegisterListener != null) {
          DebuggerRegister.removeSqlQueryDebuggerRegisterListener(debuggerRegisterListener);
        }
      }
    }
  }
;
  thread.setDaemon(true);
  thread.start();
}
