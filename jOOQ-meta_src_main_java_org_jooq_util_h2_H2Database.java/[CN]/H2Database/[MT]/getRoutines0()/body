{
  List<RoutineDefinition> result=new ArrayList<RoutineDefinition>();
  for (  Record record : create().select(FunctionAliases.ALIAS_SCHEMA,FunctionAliases.ALIAS_NAME,FunctionAliases.REMARKS,FunctionAliases.DATA_TYPE,FunctionAliases.RETURNS_RESULT,TypeInfo.TYPE_NAME,TypeInfo.PRECISION,TypeInfo.MAXIMUM_SCALE).from(FUNCTION_ALIASES).leftOuterJoin(TYPE_INFO).on(FunctionAliases.DATA_TYPE.equal(TypeInfo.DATA_TYPE)).and(TypeInfo.POS.equal(0)).where(FunctionAliases.ALIAS_SCHEMA.in(getInputSchemata())).and(FunctionAliases.RETURNS_RESULT.in((short)1,(short)2)).orderBy(FunctionAliases.ALIAS_NAME).fetch()) {
    SchemaDefinition schema=getSchema(record.getValue(FunctionAliases.ALIAS_SCHEMA));
    String name=record.getValue(FunctionAliases.ALIAS_NAME);
    String comment=record.getValue(FunctionAliases.REMARKS);
    String typeName=record.getValue(TypeInfo.TYPE_NAME);
    Integer precision=record.getValue(TypeInfo.PRECISION);
    Short scale=record.getValue(TypeInfo.MAXIMUM_SCALE);
    result.add(new H2RoutineDefinition(schema,name,comment,typeName,precision,scale));
  }
  return result;
}
