{
  InputStream isXML=Transform.class.getResourceAsStream(file("manual.xml"));
  InputStream isXSL=Transform.class.getResourceAsStream("html-pages.xsl");
  StreamSource xsl=new StreamSource(isXSL);
  TransformerFactory factory=TransformerFactory.newInstance();
  Transformer transformer=factory.newTransformer(xsl);
  Match manual=$(isXML);
  replaceVariables(manual);
  List<String> ids=manual.find("section").ids();
  HashSet<String> uniqueIds=new HashSet<String>(ids);
  if (ids.size() != uniqueIds.size()) {
    for (    String id : uniqueIds) {
      ids.remove(id);
    }
    throw new Exception("Duplicate section ids found! " + ids);
  }
  int blanks=0, completed=0;
  for (  Match section : manual.find("section").each()) {
    Match sections=section.add(section.parents("section")).reverse();
    String path=path(StringUtils.join(sections.ids(),"/"));
    String relativePath=relative(path);
    String root=root();
    File dir=new File(path);
    dir.mkdirs();
    PrintStream stream=System.out;
    boolean blank=StringUtils.isBlank(section.find("content").text());
    if (blank) {
      blanks++;
      stream=System.err;
    }
 else {
      completed++;
    }
    stream.print("[");
    stream.print(blank ? " " : "x");
    stream.println("] Transforming section " + path);
    File file=new File(dir,"index.php");
    file.delete();
    FileOutputStream out=new FileOutputStream(file);
    Source source=new DOMSource(manual.document());
    Result target=new StreamResult(out);
    transformer.setParameter("sectionID",section.id());
    transformer.setParameter("relativePath",relativePath);
    transformer.setParameter("root",root);
    transformer.transform(source,target);
    out.close();
  }
  System.out.println("    Completed sections : " + completed + " / "+ (blanks + completed)+ " ("+ (100 * completed / (blanks + completed))+ "%)");
}
