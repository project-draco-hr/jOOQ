{
  jOOQAbstractTest.reset=false;
  Executor create=create();
  create.getExecuteListeners().add(new BatchMultipleListener());
  create.setData("Foo","Bar");
  create.setData("Bar","Baz");
  int[] result=create.batch(create().insertInto(TAuthor()).set(TAuthor_ID(),8).set(TAuthor_LAST_NAME(),"Gamma"),create().insertInto(TAuthor()).set(TAuthor_ID(),9).set(TAuthor_LAST_NAME(),"Helm"),create().insertInto(TBook()).set(TBook_ID(),6).set(TBook_AUTHOR_ID(),8).set(TBook_PUBLISHED_IN(),1994).set(TBook_LANGUAGE_ID(),1).set(TBook_CONTENT_TEXT(),"Design Patterns are awesome").set(TBook_TITLE(),"Design Patterns"),create().insertInto(TAuthor()).set(TAuthor_ID(),10).set(TAuthor_LAST_NAME(),"Johnson")).execute();
  assertEquals(4,result.length);
  assertEquals(5,create().fetch(TBook()).size());
  assertEquals(1,create().fetch(TBook(),TBook_AUTHOR_ID().equal(8)).size());
  assertEquals(1,BatchMultipleListener.start);
  assertEquals(asList(2,4,6,8),BatchMultipleListener.renderStart);
  assertEquals(asList(3,5,7,9),BatchMultipleListener.renderEnd);
  assertEquals(asList(10,12,14,16),BatchMultipleListener.prepareStart);
  assertEquals(asList(11,13,15,17),BatchMultipleListener.prepareEnd);
  assertEquals(18,BatchMultipleListener.executeStart);
  assertEquals(19,BatchMultipleListener.executeEnd);
  assertEquals(20,BatchMultipleListener.end);
}
