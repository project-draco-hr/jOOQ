{
  if (values != null && values.length > 0) {
    if (into.getIdentity() != null) {
      Field<Number> field=(Field<Number>)into.getIdentity().getField();
      Number[] ids=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        ids[i]=field.getDataType().convert(values[i]);
      }
      if (returning.size() == 1 && returning.get(0).equals(field)) {
        for (        Number id : ids) {
          R typed=Utils.newRecord(into,configuration);
          ((AbstractRecord)typed).setValue(field,new Value<Number>(id));
          getReturnedRecords().add(typed);
        }
      }
 else {
        returned=create(configuration).select(returning).from(into).where(field.in(ids)).fetchInto(into);
      }
    }
 else {
      final Field<Object> idField=field(null);
      final ResultImpl<R> result=new ResultImpl<R>(configuration,idField);
      for (      final Object value : values) {
        final Record record=Utils.newRecord(RecordImpl.class,new Field[]{idField});
        record.setValue(idField,value);
        result.addRecord((R)record);
      }
      returned=result;
    }
  }
}
