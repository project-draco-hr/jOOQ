{
  AbstractRecord source=AbstractRecord.this;
  try {
    if (target instanceof AbstractRecord) {
      AbstractRecord t=(AbstractRecord)target;
      for (int targetIndex=0; targetIndex < (targetFields != null ? targetFields.length : t.size()); targetIndex++) {
        Field<?> targetField=(targetFields != null ? targetFields[targetIndex] : t.field(targetIndex));
        int sourceIndex=fields.indexOf(targetField);
        if (sourceIndex >= 0) {
          DataType<?> targetType=targetField.getDataType();
          t.values[targetIndex]=targetType.convert(values[sourceIndex]);
          t.originals[targetIndex]=targetType.convert(originals[sourceIndex]);
          t.changed.set(targetIndex,changed.get(sourceIndex));
        }
      }
    }
 else {
      for (      Field<?> targetField : target.fields()) {
        Field<?> sourceField=field(targetField);
        if (sourceField != null) {
          Tools.setValue(target,targetField,source,sourceField);
        }
      }
    }
    return target;
  }
 catch (  Exception e) {
    throw new MappingException("An error ocurred when mapping record to " + target,e);
  }
}
