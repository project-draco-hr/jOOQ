{
  if (source == null)   return;
  if (source instanceof Map) {
    fromMap((Map<String,?>)source,f);
  }
 else   if (source instanceof Object[]) {
    fromArray((Object[])source,f);
  }
 else {
    Class<?> type=source.getClass();
    try {
      boolean useAnnotations=hasColumnAnnotations(configuration(),type);
      for (      Field<?> field : f) {
        List<java.lang.reflect.Field> members;
        Method method;
        if (useAnnotations) {
          members=getAnnotatedMembers(configuration(),type,field.getName());
          method=getAnnotatedGetter(configuration(),type,field.getName());
        }
 else {
          members=getMatchingMembers(configuration(),type,field.getName());
          method=getMatchingGetter(configuration(),type,field.getName());
        }
        if (method != null) {
          Utils.setValue(this,field,method.invoke(source));
        }
 else         if (members.size() > 0) {
          from(source,members.get(0),field);
        }
      }
    }
 catch (    Exception e) {
      throw new MappingException("An error ocurred when mapping record from " + type,e);
    }
  }
}
