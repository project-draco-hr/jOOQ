{
  try {
    T result=type.newInstance();
    for (    Field<?> field : getFields()) {
      List<java.lang.reflect.Field> members;
      List<java.lang.reflect.Method> methods;
      if (JooqUtil.isJPAAvailable() && JooqUtil.hasColumnAnnotations(type)) {
        members=JooqUtil.getAnnotatedMembers(type,field.getName());
        methods=JooqUtil.getAnnotatedMethods(type,field.getName());
      }
 else {
        members=JooqUtil.getMatchingMembers(type,field.getName());
        methods=JooqUtil.getMatchingMethods(type,field.getName());
      }
      for (      java.lang.reflect.Field member : members) {
        copyInto(result,member,field);
      }
      for (      java.lang.reflect.Method method : methods) {
        copyInto(result,method,field);
      }
    }
    return result;
  }
 catch (  Exception e) {
    throw new IllegalStateException("An error ocurred when mapping record to " + type,e);
  }
}
