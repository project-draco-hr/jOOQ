{
  try {
    T result=type.newInstance();
    boolean useAnnotations=isJPAAvailable() && hasColumnAnnotations(type);
    for (    Field<?> field : getFields()) {
      List<java.lang.reflect.Field> members;
      List<java.lang.reflect.Method> methods;
      if (useAnnotations) {
        members=getAnnotatedMembers(type,field.getName());
        methods=getAnnotatedSetters(type,field.getName());
      }
 else {
        members=getMatchingMembers(type,field.getName());
        methods=getMatchingSetters(type,field.getName());
      }
      for (      java.lang.reflect.Field member : members) {
        if ((member.getModifiers() & Modifier.FINAL) == 0) {
          into(result,member,field);
        }
      }
      for (      java.lang.reflect.Method method : methods) {
        into(result,method,field);
      }
    }
    return result;
  }
 catch (  Exception e) {
    throw new MappingException("An error ocurred when mapping record to " + type,e);
  }
}
