{
  try {
    E result;
    if (Modifier.isAbstract(type.getModifiers())) {
      result=Reflect.on(HashMap.class).create().as(type);
    }
 else {
      result=accessible(type.getDeclaredConstructor()).newInstance();
    }
    return intoMutablePOJO(type,result);
  }
 catch (  NoSuchMethodException e) {
    return intoImmutablePOJO(type);
  }
}
