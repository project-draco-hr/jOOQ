{
  Connection connection=configuration.getConnection();
  if (configuration.getDialect() == SQLDialect.ASE) {
    return connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
  }
 else   if (returning.isEmpty()) {
    return super.prepare(configuration,sql);
  }
 else {
switch (configuration.getDialect()) {
case POSTGRES:
case SQLITE:
case SYBASE:
      return super.prepare(configuration,sql);
case ASE:
case DERBY:
case H2:
case INGRES:
case MYSQL:
case SQLSERVER:
    return connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
default :
{
    List<String> names=new ArrayList<String>();
    for (    Field<?> field : returning) {
      names.add(field.getName());
    }
    return connection.prepareStatement(sql,names.toArray(new String[names.size()]));
  }
}
}
}
