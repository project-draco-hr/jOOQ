{
  if (returning.isEmpty()) {
    return super.prepare(configuration,sql);
  }
 else {
    Connection connection=configuration.getConnection();
switch (configuration.getDialect()) {
case INGRES:
case SYBASE:
case SQLITE:
{
        return super.prepare(configuration,sql);
      }
case POSTGRES:
    return super.prepare(configuration,sql);
case DERBY:
case H2:
case MYSQL:
  return connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
case SQLSERVER:
return connection.prepareStatement(sql,new String[]{"id_generated"});
default :
{
List<String> names=new ArrayList<String>();
for (Field<?> field : returning) {
  names.add(field.getName());
}
return connection.prepareStatement(sql,names.toArray(new String[names.size()]));
}
}
}
}
