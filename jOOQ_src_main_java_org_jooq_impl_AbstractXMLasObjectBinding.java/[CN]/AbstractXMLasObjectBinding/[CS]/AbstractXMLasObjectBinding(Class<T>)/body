{
  final XmlRootElement root=type.getAnnotation(XmlRootElement.class);
  final JAXBContext ctx;
  try {
    ctx=JAXBContext.newInstance(type);
  }
 catch (  JAXBException e) {
    throw new DataBindingException(e);
  }
  this.converter=new Converter<Object,T>(){
    /** 
 * Generated UID
 */
    private static final long serialVersionUID=-2153155338260706262L;
    @Override public T from(    Object t){
      if (t == null)       return null;
      return JAXB.unmarshal(new StringReader("" + t),type);
    }
    @Override public Object to(    T u){
      if (u == null)       return null;
      try {
        StringWriter s=new StringWriter();
        Object o=u;
        if (root == null) {
          o=new JAXBElement<T>(new QName(decapitalize(type.getSimpleName())),type,u);
        }
        Marshaller m=ctx.createMarshaller();
        m.setProperty(Marshaller.JAXB_FRAGMENT,true);
        m.marshal(o,s);
        return s.toString();
      }
 catch (      JAXBException e) {
        throw new DataBindingException(e);
      }
    }
    @Override public Class<Object> fromType(){
      return Object.class;
    }
    @Override public Class<T> toType(){
      return type;
    }
  }
;
}
