{
  T result=null;
  DefaultTransactionContext ctx=new DefaultTransactionContext(configuration.derive());
  TransactionProvider provider=configuration.derive().transactionProvider();
  try {
    ctx.transaction=provider.begin(ctx);
    result=transactional.run(configuration.derive());
    provider.commit(ctx);
  }
 catch (  Exception cause) {
    ctx.cause=cause;
    provider.rollback(ctx);
    if (cause instanceof RuntimeException) {
      throw (RuntimeException)cause;
    }
 else {
      throw new DataAccessException("Rollback caused",cause);
    }
  }
  return result;
}
