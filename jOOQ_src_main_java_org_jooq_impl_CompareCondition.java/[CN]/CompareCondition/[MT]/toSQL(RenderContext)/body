{
  SQLDialect family=context.configuration().dialect().family();
  Field<?> lhs=field1;
  Field<?> rhs=field2;
  Comparator op=comparator;
  if ((op == LIKE || op == NOT_LIKE) && field1.getType() != String.class && asList(DERBY,POSTGRES).contains(family)) {
    lhs=lhs.cast(String.class);
  }
 else   if ((op == LIKE_IGNORE_CASE || op == NOT_LIKE_IGNORE_CASE) && POSTGRES != family) {
    lhs=lhs.lower();
    rhs=rhs.lower();
    op=(op == LIKE_IGNORE_CASE ? LIKE : NOT_LIKE);
  }
  context.visit(lhs).sql(" ");
  boolean castRhs=false;
  context.keyword(op.toSQL()).sql(" ");
  if (castRhs)   context.keyword("cast").sql("(");
  context.visit(rhs);
  if (castRhs)   context.sql(" ").keyword("as").sql(" ").keyword("varchar").sql("(4000))");
  if (escape != null) {
    context.sql(" ").keyword("escape").sql(" '").sql(escape).sql("'");
  }
}
