{
  SQLDialect dialect=context.configuration().dialect();
  Field<?> lhs=field1;
  Field<?> rhs=field2;
  Comparator op=comparator;
  if ((op == LIKE || op == NOT_LIKE) && field1.getType() != String.class && asList(ASE,DERBY,POSTGRES).contains(dialect)) {
    lhs=lhs.cast(String.class);
  }
 else   if ((op == LIKE_IGNORE_CASE || op == NOT_LIKE_IGNORE_CASE) && POSTGRES != dialect) {
    lhs=lhs.lower();
    rhs=rhs.lower();
    op=(op == LIKE_IGNORE_CASE ? LIKE : NOT_LIKE);
  }
  context.visit(lhs).sql(" ");
  boolean castRhs=(dialect == DB2 && rhs instanceof Concat);
  context.keyword(op.toSQL()).sql(" ").keyword(castRhs ? "cast(" : "").visit(rhs).keyword(castRhs ? " as varchar(4000))" : "");
  if (escape != null) {
    context.keyword(" escape '").sql(escape).sql("'");
  }
}
