{
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  copyLarge(in,out);
  String xml=out.toString();
  xml=xml.replaceAll("<(\\w+:)?configuration xmlns(:\\w+)?=\"http://www.jooq.org/xsd/jooq-codegen-\\d+\\.\\d+\\.\\d+.xsd\">","<$1configuration xmlns$2=\"" + Constants.NS_CODEGEN + "\">");
  xml=xml.replace("<configuration>","<configuration xmlns=\"" + Constants.NS_CODEGEN + "\">");
  try {
    SchemaFactory sf=SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
    javax.xml.validation.Schema schema=sf.newSchema(GenerationTool.class.getResource("/xsd/" + Constants.XSD_CODEGEN));
    JAXBContext ctx=JAXBContext.newInstance(Configuration.class);
    Unmarshaller unmarshaller=ctx.createUnmarshaller();
    unmarshaller.setSchema(schema);
    unmarshaller.setEventHandler(new ValidationEventHandler(){
      @Override public boolean handleEvent(      ValidationEvent event){
        log.warn("Unmarshal warning",event.getMessage());
        return true;
      }
    }
);
    return (Configuration)unmarshaller.unmarshal(new StringReader(xml));
  }
 catch (  Exception e) {
    throw new GeneratorException("Error while reading XML configuration",e);
  }
}
