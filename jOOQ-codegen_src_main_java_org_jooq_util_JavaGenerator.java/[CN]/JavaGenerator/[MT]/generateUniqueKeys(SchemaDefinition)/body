{
  log.info("Generating UniqueKeys");
  if (database.getUniqueKeys(schema).size() == 0) {
    return;
  }
  JavaWriter out=new JavaWriter(new File(getStrategy().getFile(schema).getParentFile(),"UniqueKeys.java"));
  printPackage(out,schema);
  printClassJavadoc(out,"A class modelling unique keys of tables of the <code>" + schema.getOutputName() + "</code> schema");
  out.println("public class UniqueKeys {");
  for (  TableDefinition table : database.getTables(schema)) {
    final List<UniqueKeyDefinition> uniqueKeys=table.getUniqueKeys();
    try {
      if (uniqueKeys.size() > 0) {
        out.println();
        out.tab(1).println("public static class %s extends %s {",getStrategy().getJavaClassName(table),AbstractKeys.class);
        for (        UniqueKeyDefinition uniqueKey : uniqueKeys) {
          out.tab(2).println("public static final %s<%s> %s = createUniqueKey(%s, [[%s]]);",UniqueKey.class,getStrategy().getFullJavaClassName(uniqueKey.getTable(),Mode.RECORD),getStrategy().getJavaIdentifier(uniqueKey),getStrategy().getFullJavaIdentifier(uniqueKey.getTable()),getStrategy().getFullJavaIdentifiers(uniqueKey.getKeyColumns()));
        }
        out.tab(1).println("}");
      }
    }
 catch (    Exception e) {
      log.error("Error while generating unique key " + table,e);
    }
  }
  out.println("}");
  out.close();
  watch.splitInfo("UniqueKeys generated");
}
