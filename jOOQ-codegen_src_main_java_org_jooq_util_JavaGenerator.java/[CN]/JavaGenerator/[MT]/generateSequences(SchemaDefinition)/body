{
  log.info("Generating sequences");
  JavaWriter out=newJavaWriter(new File(getStrategy().getFile(schema).getParentFile(),"Sequences.java"));
  printPackage(out,schema);
  printClassJavadoc(out,"Convenience access to all sequences in " + schema.getOutputName());
  printClassAnnotations(out,schema);
  out.println("public class Sequences {");
  for (  SequenceDefinition sequence : database.getSequences(schema)) {
    final String seqType=getJavaType(sequence.getType());
    final String seqId=getStrategy().getJavaIdentifier(sequence);
    final String seqName=sequence.getOutputName();
    final String schemaId=getStrategy().getFullJavaIdentifier(schema);
    final String typeRef=getJavaTypeReference(sequence.getDatabase(),sequence.getType());
    out.tab(1).javadoc("The sequence <code>%s</code>",sequence.getQualifiedOutputName());
    out.tab(1).println("public static final %s<%s> %s = new %s<%s>(\"%s\", %s, %s);",Sequence.class,seqType,seqId,SequenceImpl.class,seqType,seqName,schemaId,typeRef);
  }
  out.println("}");
  out.close();
  watch.splitInfo("Sequences generated");
}
