{
  log.info("Generating POJO",getStrategy().getFileName(tableOrUDT,Mode.POJO));
  final String className=getStrategy().getJavaClassName(tableOrUDT,Mode.POJO);
  final String superName=getStrategy().getJavaClassExtends(tableOrUDT,Mode.POJO);
  final List<String> interfaces=getStrategy().getJavaClassImplements(tableOrUDT,Mode.POJO);
  if (generateInterfaces()) {
    interfaces.add(getStrategy().getFullJavaClassName(tableOrUDT,Mode.INTERFACE));
  }
  JavaWriter out=new JavaWriter(getStrategy().getFile(tableOrUDT,Mode.POJO));
  printPackage(out,tableOrUDT,Mode.POJO);
  if (tableOrUDT instanceof TableDefinition)   generatePojoClassJavadoc((TableDefinition)tableOrUDT,out);
 else   generateUDTPojoClassJavadoc((UDTDefinition)tableOrUDT,out);
  printClassAnnotations(out,tableOrUDT.getSchema());
  if (tableOrUDT instanceof TableDefinition)   printTableJPAAnnotation(out,(TableDefinition)tableOrUDT);
  out.println("public class %s[[before= extends ][%s]][[before= implements ][%s]] {",className,list(superName),interfaces);
  out.printSerial();
  out.println();
  int maxLength=0;
  for (  TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
    maxLength=Math.max(maxLength,getJavaType(column.getType(),Mode.POJO).length());
  }
  for (  TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
    out.tab(1).println("private %s%s %s;",generateImmutablePojos() ? "final " : "",StringUtils.rightPad(getJavaType(column.getType(),Mode.POJO),maxLength),getStrategy().getJavaMemberName(column,Mode.POJO));
  }
  if (!generateImmutablePojos()) {
    out.println();
    out.tab(1).print("public %s() {}",className);
    out.println();
  }
  if (getTypedElements(tableOrUDT).size() > 0 && getTypedElements(tableOrUDT).size() < 256) {
    out.println();
    out.tab(1).print("public %s(",className);
    String separator1="";
    for (    TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
      out.println(separator1);
      out.tab(2).print("%s %s",StringUtils.rightPad(getJavaType(column.getType(),Mode.POJO),maxLength),getStrategy().getJavaMemberName(column,Mode.POJO));
      separator1=",";
    }
    out.println();
    out.tab(1).println(") {");
    for (    TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
      final String columnMember=getStrategy().getJavaMemberName(column,Mode.POJO);
      out.tab(2).println("this.%s = %s;",columnMember,columnMember);
    }
    out.tab(1).println("}");
  }
  for (  TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
    final String columnType=getJavaType(column.getType(),Mode.POJO);
    final String columnTypeInterface=getJavaType(column.getType(),Mode.INTERFACE);
    final String columnSetterReturnType=fluentSetters() ? className : "void";
    final String columnSetter=getStrategy().getJavaSetterName(column,Mode.POJO);
    final String columnGetter=getStrategy().getJavaGetterName(column,Mode.POJO);
    final String columnMember=getStrategy().getJavaMemberName(column,Mode.POJO);
    final boolean isUDT=column.getType().isUDT();
    out.println();
    if (column instanceof ColumnDefinition)     printColumnJPAAnnotation(out,(ColumnDefinition)column);
    printValidationAnnotation(out,column);
    out.tab(1).overrideIf(generateInterfaces());
    out.tab(1).println("public %s %s() {",columnType,columnGetter);
    out.tab(2).println("return this.%s;",columnMember);
    out.tab(1).println("}");
    if (!generateImmutablePojos()) {
      out.println();
      out.tab(1).overrideIf(generateInterfaces() && !isUDT);
      out.tab(1).println("public %s %s(%s %s) {",columnSetterReturnType,columnSetter,columnType,columnMember);
      out.tab(2).println("this.%s = %s;",columnMember,columnMember);
      if (fluentSetters())       out.tab(2).println("return this;");
      out.tab(1).println("}");
      if (generateInterfaces() && isUDT) {
        out.println();
        out.tab(1).override();
        out.tab(1).println("public %s %s(%s %s) {",columnSetterReturnType,columnSetter,columnTypeInterface,columnMember);
        out.tab(2).println("if (%s == null)",columnMember);
        out.tab(3).println("this.%s = null;",columnMember);
        out.tab(2).println("else");
        out.tab(3).println("this.%s = %s.into(new %s());",columnMember,columnMember,columnType);
        if (fluentSetters())         out.tab(2).println("return this;");
        out.tab(1).println("}");
      }
    }
  }
  if (generatePojosEqualsAndHashCode()) {
    out.println();
    out.tab(1).println("@Override");
    out.tab(1).println("public boolean equals(Object obj) {");
    out.tab(2).println("if (this == obj)");
    out.tab(3).println("return true;");
    out.tab(2).println("if (obj == null)");
    out.tab(3).println("return false;");
    out.tab(2).println("if (getClass() != obj.getClass())");
    out.tab(3).println("return false;");
    out.tab(2).println("final %s other = (%s) obj;",className,className);
    for (    TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
      final String columnMember=getStrategy().getJavaMemberName(column,Mode.POJO);
      out.tab(2).println("if (%s == null) {",columnMember);
      out.tab(3).println("if (other.%s != null)",columnMember);
      out.tab(4).println("return false;");
      out.tab(2).println("}");
      if (getJavaType(column.getType()).endsWith("[]")) {
        out.tab(2).println("else if (!java.util.Arrays.equals(%s, other.%s))",columnMember,columnMember);
      }
 else {
        out.tab(2).println("else if (!%s.equals(other.%s))",columnMember,columnMember);
      }
      out.tab(3).println("return false;");
    }
    out.tab(2).println("return true;");
    out.tab(1).println("}");
  }
  if (generatePojosEqualsAndHashCode()) {
    out.println();
    out.tab(1).println("@Override");
    out.tab(1).println("public int hashCode() {");
    out.tab(2).println("final int prime = 31;");
    out.tab(2).println("int result = 1;");
    for (    TypedElementDefinition<?> column : getTypedElements(tableOrUDT)) {
      final String columnMember=getStrategy().getJavaMemberName(column,Mode.POJO);
      if (getJavaType(column.getType()).endsWith("[]")) {
        out.tab(2).println("result = prime * result + ((%s == null) ? 0 : java.util.Arrays.hashCode(%s));",columnMember,columnMember);
      }
 else {
        out.tab(2).println("result = prime * result + ((%s == null) ? 0 : %s.hashCode());",columnMember,columnMember);
      }
    }
    out.tab(2).println("return result;");
    out.tab(1).println("}");
  }
  if (generateInterfaces() && !generateImmutablePojos()) {
    printFromAndInto(out,tableOrUDT);
  }
  if (tableOrUDT instanceof TableDefinition)   generatePojoClassFooter((TableDefinition)tableOrUDT,out);
 else   generateUDTPojoClassFooter((UDTDefinition)tableOrUDT,out);
  out.println("}");
  out.close();
}
