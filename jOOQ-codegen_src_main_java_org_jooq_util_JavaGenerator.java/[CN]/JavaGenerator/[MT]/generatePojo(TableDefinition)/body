{
  log.info("Generating table POJO",getStrategy().getFileName(table,Mode.POJO));
  final String className=getStrategy().getJavaClassName(table,Mode.POJO);
  final String superName=getStrategy().getJavaClassExtends(table,Mode.POJO);
  final List<String> interfaces=getStrategy().getJavaClassImplements(table,Mode.POJO);
  if (generateInterfaces()) {
    interfaces.add(getStrategy().getFullJavaClassName(table,Mode.INTERFACE));
  }
  JavaWriter out=new JavaWriter(getStrategy().getFile(table,Mode.POJO));
  printPackage(out,table,Mode.POJO);
  printClassJavadoc(out,table);
  printTableJPAAnnotation(out,table);
  out.println("public class %s[[before= extends ][%s]][[before= implements ][%s]] {",className,list(superName),interfaces);
  out.printSerial();
  out.println();
  int maxLength=0;
  for (  ColumnDefinition column : table.getColumns()) {
    maxLength=Math.max(maxLength,getJavaType(column.getType()).length());
  }
  for (  ColumnDefinition column : table.getColumns()) {
    printColumnValidationAnnotation(out,column);
    out.tab(1).println("private %s%s %s;",generateImmutablePojos() ? "final " : "",StringUtils.rightPad(getJavaType(column.getType()),maxLength),getStrategy().getJavaMemberName(column,Mode.POJO));
  }
  if (generateImmutablePojos()) {
    out.println();
    out.tab(1).print("public %s(",className);
    String separator1="";
    for (    ColumnDefinition column : table.getColumns()) {
      out.println(separator1);
      out.tab(2).print("%s %s",StringUtils.rightPad(getJavaType(column.getType()),maxLength),getStrategy().getJavaMemberName(column,Mode.POJO));
      separator1=",";
    }
    out.println();
    out.tab(1).println(") {");
    for (    ColumnDefinition column : table.getColumns()) {
      final String columnMember=getStrategy().getJavaMemberName(column,Mode.POJO);
      out.tab(2).println("this.%s = %s;",columnMember,columnMember);
    }
    out.tab(1).println("}");
  }
  for (  ColumnDefinition column : table.getColumns()) {
    final String columnType=getJavaType(column.getType());
    final String columnGetter=getStrategy().getJavaGetterName(column,Mode.POJO);
    final String columnSetter=getStrategy().getJavaSetterName(column,Mode.POJO);
    final String columnMember=getStrategy().getJavaMemberName(column,Mode.POJO);
    out.println();
    printColumnJPAAnnotation(out,column);
    out.tab(1).overrideIf(generateInterfaces());
    out.tab(1).println("public %s %s() {",columnType,columnGetter);
    out.tab(2).println("return this.%s;",columnMember);
    out.tab(1).println("}");
    if (!generateImmutablePojos()) {
      out.println();
      out.tab(1).overrideIf(generateInterfaces());
      out.tab(1).println("public void %s(%s %s) {",columnSetter,columnType,columnMember);
      out.tab(2).println("this.%s = %s;",columnMember,columnMember);
      out.tab(1).println("}");
    }
  }
  out.println("}");
  out.close();
}
