{
  final int block=identityCounter / INITIALISER_SIZE;
  if (identityCounter % INITIALISER_SIZE == 0) {
    if (identityCounter > 0) {
      out.tab(1).println("}");
    }
    out.println();
    if (scala)     out.tab(1).println("private object Identities%s extends %s {",block,AbstractKeys.class);
 else     out.tab(1).println("private static class Identities%s extends %s {",block,AbstractKeys.class);
  }
  if (scala)   out.tab(2).println("val %s: %s[%s, %s] = %s.createIdentity(%s, %s)",getStrategy().getJavaIdentifier(identity),Identity.class,out.ref(getStrategy().getFullJavaClassName(identity.getTable(),Mode.RECORD)),out.ref(getJavaType(identity.getColumn().getType())),AbstractKeys.class,out.ref(getStrategy().getFullJavaIdentifier(identity.getColumn().getContainer()),2),out.ref(getStrategy().getFullJavaIdentifier(identity.getColumn()),colRefSegments(identity.getColumn())));
 else   out.tab(2).println("public static %s<%s, %s> %s = createIdentity(%s, %s);",Identity.class,out.ref(getStrategy().getFullJavaClassName(identity.getTable(),Mode.RECORD)),out.ref(getJavaType(identity.getColumn().getType())),getStrategy().getJavaIdentifier(identity),out.ref(getStrategy().getFullJavaIdentifier(identity.getColumn().getContainer()),2),out.ref(getStrategy().getFullJavaIdentifier(identity.getColumn()),colRefSegments(identity.getColumn())));
}
