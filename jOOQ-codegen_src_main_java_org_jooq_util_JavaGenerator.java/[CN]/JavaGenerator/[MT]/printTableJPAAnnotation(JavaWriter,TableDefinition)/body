{
  SchemaDefinition schema=table.getSchema();
  if (generateJPAAnnotations()) {
    out.println("@%s",out.ref("javax.persistence.Entity"));
    out.print("@%s(name = \"",out.ref("javax.persistence.Table"));
    out.print(table.getName().replace("\"","\\\""));
    out.print("\"");
    if (!schema.isDefaultSchema()) {
      out.print(", schema = \"");
      out.print(schema.getOutputName().replace("\"","\\\""));
      out.print("\"");
    }
    StringBuilder sb=new StringBuilder();
    String glue1="\n";
    for (    UniqueKeyDefinition uk : table.getUniqueKeys()) {
      if (uk.getKeyColumns().size() > 1) {
        sb.append(glue1);
        sb.append("\t").append(scala ? "new " : "@").append(out.ref("javax.persistence.UniqueConstraint")).append("(columnNames = ").append(scala ? "Array(" : "{");
        String glue2="";
        for (        ColumnDefinition column : uk.getKeyColumns()) {
          sb.append(glue2);
          sb.append("\"");
          sb.append(column.getName().replace("\"","\\\""));
          sb.append("\"");
          glue2=", ";
        }
        sb.append(scala ? ")" : "}").append(")");
        glue1=",\n";
      }
    }
    if (sb.length() > 0) {
      out.print(", uniqueConstraints = ").print(scala ? "Array(" : "{");
      out.println(sb.toString());
      out.print(scala ? ")" : "}");
    }
    out.println(")");
  }
}
