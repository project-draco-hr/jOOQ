{
  super(as,(DataType)SQLDataType.RECORD,"",new DefaultBinding<Object,REC>(new Converter<Object,REC>(){
    @Override public REC from(    final Object t){
      return (REC)(t == null ? null : DefaultBinding.pgNewRecord(Record.class,row.fields(),t));
    }
    @Override public Object to(    REC u){
      throw new UnsupportedOperationException("Converting from nested records to bind values is not yet supported");
    }
    @Override public Class<Object> fromType(){
      return Object.class;
    }
    @Override public Class<REC> toType(){
      return (Class<REC>)RecordImpl.class;
    }
  }
));
  this.row=row;
  this.emulatedFields=new Field[row.fields().length];
  for (int i=0; i < emulatedFields.length; i++)   emulatedFields[i]=row.field(i).as(as + "." + row.field(i).getName());
}
