{
  if (obj instanceof Store) {
    final Store<?> that=(Store<?>)obj;
    if (size() == that.size()) {
      for (int i=0; i < size(); i++) {
        final Object thisValue=getValue(i);
        final Object thatValue=that.getValue(i);
        if (thisValue == null || thatValue == null) {
          return thisValue == thatValue;
        }
 else         if (thisValue.getClass().isArray() && thatValue.getClass().isArray()) {
          if (thisValue.getClass() == byte[].class && thatValue.getClass() == byte[].class) {
            return Arrays.equals((byte[])thisValue,(byte[])thatValue);
          }
 else           if (!thisValue.getClass().getComponentType().isPrimitive() && !thatValue.getClass().getComponentType().isPrimitive()) {
            return Arrays.equals((Object[])thisValue,(Object[])thatValue);
          }
 else {
            return false;
          }
        }
 else         if (!thisValue.equals(thatValue)) {
          return false;
        }
      }
      return true;
    }
  }
  return false;
}
