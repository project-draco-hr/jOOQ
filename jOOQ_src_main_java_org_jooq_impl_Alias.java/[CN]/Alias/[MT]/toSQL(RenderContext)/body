{
  if (context.declareFields() || context.declareTables()) {
    SQLDialect dialect=context.getDialect();
    boolean simulateDerivedColumnList=false;
    if (fieldAliases != null && asList(CUBRID,FIREBIRD,SQLSERVER,SYBASE).contains(dialect) && wrapped instanceof TableImpl) {
      @SuppressWarnings("unchecked") Select<Record> select=select(list(field("*"))).from(((Table<?>)wrapped).as(alias));
      context.sql("(").formatIndentStart().formatNewLine().sql(select).formatIndentEnd().formatNewLine().sql(")");
    }
 else     if (fieldAliases != null && asList(H2,MYSQL,ORACLE,SQLITE).contains(dialect)) {
      simulateDerivedColumnList=true;
      SelectFieldList fields=new SelectFieldList();
      for (      String fieldAlias : fieldAliases) {
        fields.add(field("null").as(fieldAlias));
      }
      Select<Record> select=select(fields).where(falseCondition()).unionAll(select(field("*")).from(((Table<?>)wrapped).as(alias)));
      context.sql("(").formatIndentStart().formatNewLine().sql(select).formatIndentEnd().formatNewLine().sql(")");
    }
 else {
      toSQLWrapped(context);
    }
    toSQLAs(context);
    context.sql(" ");
    context.literal(alias);
    if (fieldAliases != null && !simulateDerivedColumnList) {
      toSQLDerivedColumnList(context);
    }
 else {
switch (dialect) {
case HSQLDB:
case POSTGRES:
{
          Object o=wrapped;
          if (context.declareTables() && o instanceof ArrayTable) {
            ArrayTable table=(ArrayTable)o;
            context.sql("(");
            Utils.fieldNames(context,table.fields());
            context.sql(")");
          }
          break;
        }
    }
  }
}
 else {
  context.literal(alias);
}
}
