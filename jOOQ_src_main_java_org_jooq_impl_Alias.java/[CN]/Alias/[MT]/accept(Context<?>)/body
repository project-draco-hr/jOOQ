{
  if (context.declareFields() || context.declareTables()) {
    SQLDialect family=context.family();
    boolean emulatedDerivedColumnList=false;
    if (fieldAliases != null && asList(CUBRID,FIREBIRD).contains(family) && (wrapped instanceof TableImpl || wrapped instanceof CommonTableExpressionImpl)) {
      @SuppressWarnings("unchecked") Select<Record> select=select(list(field("*"))).from(((Table<?>)wrapped).as(alias));
      context.sql('(').formatIndentStart().formatNewLine().visit(select).formatIndentEnd().formatNewLine().sql(')');
    }
 else     if (fieldAliases != null && asList(H2,MARIADB,MYSQL,SQLITE).contains(family)) {
      emulatedDerivedColumnList=true;
      SelectFieldList fields=new SelectFieldList();
      for (      String fieldAlias : fieldAliases) {
switch (family) {
default :
{
            fields.add(field("null").as(fieldAlias));
            break;
          }
      }
    }
    Select<Record> select=select(fields).where(falseCondition()).unionAll(wrapped instanceof Select ? (Select<?>)wrapped : wrapped instanceof DerivedTable ? ((DerivedTable<?>)wrapped).query() : select(field("*")).from(((Table<?>)wrapped).as(alias)));
    context.sql('(').formatIndentStart().formatNewLine().visit(select).formatIndentEnd().formatNewLine().sql(')');
  }
 else {
    toSQLWrapped(context);
  }
  toSQLAs(context);
  context.sql(' ');
  context.literal(alias);
  if (fieldAliases != null && !emulatedDerivedColumnList) {
    toSQLDerivedColumnList(context);
  }
 else {
switch (family) {
case HSQLDB:
case POSTGRES:
{
        Object o=wrapped;
        if (context.declareTables() && o instanceof ArrayTable) {
          ArrayTable table=(ArrayTable)o;
          context.sql('(');
          Utils.fieldNames(context,table.fields());
          context.sql(')');
        }
        break;
      }
  }
}
}
 else {
context.literal(alias);
}
}
