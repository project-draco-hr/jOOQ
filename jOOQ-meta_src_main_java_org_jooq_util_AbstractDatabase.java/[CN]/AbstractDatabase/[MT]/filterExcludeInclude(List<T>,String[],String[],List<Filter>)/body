{
  List<T> result=new ArrayList<T>();
  definitionsLoop:   for (  T definition : definitions) {
    if (e != null) {
      for (      String exclude : e) {
        Pattern p=pattern(exclude);
        if (exclude != null && (p.matcher(definition.getName()).matches() || p.matcher(definition.getQualifiedName()).matches())) {
          if (log.isDebugEnabled())           log.debug("Exclude","Excluding " + definition.getQualifiedName() + " because of pattern "+ exclude);
          continue definitionsLoop;
        }
      }
    }
    if (i != null) {
      for (      String include : i) {
        Pattern p=pattern(include);
        if (include != null && (p.matcher(definition.getName()).matches() || p.matcher(definition.getQualifiedName()).matches())) {
          for (          Filter filter : f) {
            if (filter.exclude(definition)) {
              if (log.isDebugEnabled())               log.debug("Exclude","Excluding " + definition.getQualifiedName() + " because of filter "+ filter);
              continue definitionsLoop;
            }
          }
          result.add(definition);
          if (log.isDebugEnabled())           log.debug("Include","Including " + definition.getQualifiedName() + " because of pattern "+ include);
          continue definitionsLoop;
        }
      }
    }
  }
  return result;
}
