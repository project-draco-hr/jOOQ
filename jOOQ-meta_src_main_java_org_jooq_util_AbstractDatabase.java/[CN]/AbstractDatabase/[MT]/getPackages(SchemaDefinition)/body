{
  if (packages == null) {
    packages=new ArrayList<PackageDefinition>();
    try {
      List<PackageDefinition> p=getPackages0();
      packages=filterExcludeInclude(p);
      log.info("Packages fetched",fetchedSize(p,packages));
    }
 catch (    Exception e) {
      log.error("Error while fetching packages",e);
    }
  }
  if (packagesBySchema == null) {
    packagesBySchema=new LinkedHashMap<SchemaDefinition,List<PackageDefinition>>();
  }
  return filterSchema(packages,schema,packagesBySchema);
}
