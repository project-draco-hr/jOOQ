{
  Result<Record> result=create().select().from(selectOne(),select(val(2)),select(val(2)),select(val(2)),select(val(3).add(4)),select(val(3).add(4)),select(trim(" test ")),select(trim(" test "))).fetch();
  assertEquals(1,result.size());
  assertEquals(Integer.valueOf(1),result.getValue(0,0));
  assertEquals(Integer.valueOf(2),result.getValue(0,1));
  assertEquals(Integer.valueOf(2),result.getValue(0,val(2)));
  assertEquals(Integer.valueOf(2),result.getValue(0,3));
  assertEquals(Integer.valueOf(7),result.getValue(0,val(3).add(4)));
  assertEquals(Integer.valueOf(7),result.getValue(0,5));
  assertEquals("test",result.getValue(0,trim(" test ")));
  assertEquals("test",result.getValue(0,7));
  result=create().select(create().selectOne().asField(),create().select(val(2)).asField(),create().select(val(2)).asField(),create().select(val(2)).asField(),create().select(val(3).add(4)).asField(),create().select(val(3).add(4)).asField(),create().select(trim(" test ")).asField(),create().select(trim(" test ")).asField()).fetch();
  assertEquals(1,result.size());
  assertEquals(1,result.getValue(0,0));
  assertEquals(2,result.getValue(0,1));
  assertEquals(2,result.getValue(0,2));
  assertEquals(2,result.getValue(0,3));
  assertEquals(7,result.getValue(0,4));
  assertEquals(7,result.getValue(0,5));
  assertEquals("test",result.getValue(0,6));
  assertEquals("test",result.getValue(0,7));
}
