{
  assertEquals(emptyList(),create().select().from(table(new UNumberArrayRecord(create(),(Integer[])null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(new UNumberArrayRecord(create()))).fetch(0));
  assertEquals(asList(1),create().select().from(table(new UNumberArrayRecord(create(),1))).fetch(0));
  assertEquals(asList(1,2),create().select().from(table(new UNumberArrayRecord(create(),1,2))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(new UNumberTableRecord(create(),(Integer[])null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(new UNumberTableRecord(create()))).fetch(0));
  assertEquals(asList(1),create().select().from(table(new UNumberTableRecord(create(),1))).fetch(0));
  assertEquals(asList(1,2),create().select().from(table(new UNumberTableRecord(create(),1,2))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fArrays1((UNumberArrayRecord)null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fArrays1(new UNumberArrayRecord(create(),(Integer[])null)))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fArrays1(new UNumberArrayRecord(create())))).fetch(0));
  assertEquals(asList(1),create().select().from(table(fArrays1(fArrays1(new UNumberArrayRecord(create(),1))))).fetch(0));
  assertEquals(asList(1,2),create().select().from(table(fArrays1(fArrays1(new UNumberArrayRecord(create(),1,2))))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fTables1((UNumberTableRecord)null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fTables1(new UNumberTableRecord(create(),(Integer[])null)))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fTables1(new UNumberTableRecord(create())))).fetch(0));
  assertEquals(asList(1),create().select().from(table(fTables1(fTables1(new UNumberTableRecord(create(),1))))).fetch(0));
  assertEquals(asList(1,2),create().select().from(table(fTables1(fTables1(new UNumberTableRecord(create(),1,2))))).fetch(0));
  assertNull(fArrays1(create(),null));
  assertEquals(emptyList(),fArrays1(create(),new UNumberArrayRecord(create(),(Integer[])null)).getList());
  assertEquals(emptyList(),fArrays1(create(),new UNumberArrayRecord(create())).getList());
  assertEquals(asList(1),fArrays1(create(),fArrays1(create(),new UNumberArrayRecord(create(),1))).getList());
  assertEquals(asList(1,2),fArrays1(create(),fArrays1(create(),new UNumberArrayRecord(create(),1,2))).getList());
  assertNull(fTables1(create(),null));
  assertEquals(emptyList(),fTables1(create(),new UNumberTableRecord(create(),(Integer[])null)).getList());
  assertEquals(emptyList(),fTables1(create(),new UNumberTableRecord(create())).getList());
  assertEquals(asList(1),fTables1(create(),fTables1(create(),new UNumberTableRecord(create(),1))).getList());
  assertEquals(asList(1,2),fTables1(create(),fTables1(create(),new UNumberTableRecord(create(),1,2))).getList());
  assertNull(pArrays1(create(),null));
  assertEquals(emptyList(),pArrays1(create(),new UNumberArrayRecord(create(),(Integer[])null)).getList());
  assertEquals(emptyList(),pArrays1(create(),new UNumberArrayRecord(create())).getList());
  assertEquals(asList(1),pArrays1(create(),pArrays1(create(),new UNumberArrayRecord(create(),1))).getList());
  assertEquals(asList(1,2),pArrays1(create(),pArrays1(create(),new UNumberArrayRecord(create(),1,2))).getList());
  assertNull(pTables1(create(),null));
  assertEquals(emptyList(),pTables1(create(),new UNumberTableRecord(create(),(Integer[])null)).getList());
  assertEquals(emptyList(),pTables1(create(),new UNumberTableRecord(create())).getList());
  assertEquals(asList(1),pTables1(create(),pTables1(create(),new UNumberTableRecord(create(),1))).getList());
  assertEquals(asList(1,2),pTables1(create(),pTables1(create(),new UNumberTableRecord(create(),1,2))).getList());
  UBookTypeRecord r1=new UBookTypeRecord();
  UBookTypeRecord r2=new UBookTypeRecord();
  r1.setId(1);
  r1.setTitle(BOOK_TITLES.get(0));
  r2.setId(2);
  r2.setTitle(BOOK_TITLES.get(1));
  assertEquals(emptyList(),create().select().from(table(new UBookArrayRecord(create(),(UBookTypeRecord[])null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(new UBookArrayRecord(create()))).fetch(0));
  assertEquals(asList(1),create().select().from(table(new UBookArrayRecord(create(),r1))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,1),create().select().from(table(new UBookArrayRecord(create(),r1))).fetch(1));
  assertEquals(asList(1,2),create().select().from(table(new UBookArrayRecord(create(),r1,r2))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,2),create().select().from(table(new UBookArrayRecord(create(),r1,r2))).fetch(1));
  assertEquals(emptyList(),create().select().from(table(new UBookTableRecord(create(),(UBookTypeRecord[])null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(new UBookTableRecord(create()))).fetch(0));
  assertEquals(asList(1),create().select().from(table(new UBookTableRecord(create(),r1))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,1),create().select().from(table(new UBookTableRecord(create(),r1))).fetch(1));
  assertEquals(asList(1,2),create().select().from(table(new UBookTableRecord(create(),r1,r2))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,2),create().select().from(table(new UBookTableRecord(create(),r1,r2))).fetch(1));
  assertEquals(emptyList(),create().select().from(table(fArrays4((UBookArrayRecord)null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fArrays4(new UBookArrayRecord(create(),(UBookTypeRecord[])null)))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fArrays4(new UBookArrayRecord(create())))).fetch(0));
  assertEquals(asList(1),create().select().from(table(fArrays4(new UBookArrayRecord(create(),r1)))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,1),create().select().from(table(fArrays4(new UBookArrayRecord(create(),r1)))).fetch(1));
  assertEquals(asList(1,2),create().select().from(table(fArrays4(fArrays4(new UBookArrayRecord(create(),r1,r2))))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,2),create().select().from(table(fArrays4(fArrays4(new UBookArrayRecord(create(),r1,r2))))).fetch(1));
  assertEquals(emptyList(),create().select().from(table(fTables4((UBookTableRecord)null))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fTables4(new UBookTableRecord(create(),(UBookTypeRecord[])null)))).fetch(0));
  assertEquals(emptyList(),create().select().from(table(fTables4(new UBookTableRecord(create())))).fetch(0));
  assertEquals(asList(1),create().select().from(table(fTables4(new UBookTableRecord(create(),r1)))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,1),create().select().from(table(fTables4(new UBookTableRecord(create(),r1)))).fetch(1));
  assertEquals(asList(1,2),create().select().from(table(fTables4(fTables4(new UBookTableRecord(create(),r1,r2))))).fetch(0));
  assertEquals(BOOK_TITLES.subList(0,2),create().select().from(table(fTables4(fTables4(new UBookTableRecord(create(),r1,r2))))).fetch(1));
  assertNull(fArrays4(create(),null));
  assertEquals(emptyList(),fArrays4(create(),new UBookArrayRecord(create(),(UBookTypeRecord[])null)).getList());
  assertEquals(emptyList(),fArrays4(create(),new UBookArrayRecord(create())).getList());
  assertEquals(asList(r1),fArrays4(create(),fArrays4(create(),new UBookArrayRecord(create(),r1))).getList());
  assertEquals(asList(r1,r2),fArrays4(create(),fArrays4(create(),new UBookArrayRecord(create(),r1,r2))).getList());
  assertNull(fTables4(create(),null));
  assertEquals(emptyList(),fTables4(create(),new UBookTableRecord(create(),(UBookTypeRecord[])null)).getList());
  assertEquals(emptyList(),fTables4(create(),new UBookTableRecord(create())).getList());
  assertEquals(asList(r1),fTables4(create(),fTables4(create(),new UBookTableRecord(create(),r1))).getList());
  assertEquals(asList(r1,r2),fTables4(create(),fTables4(create(),new UBookTableRecord(create(),r1,r2))).getList());
}
