{
  List<Integer> result1=create().select(secondMax(TBook_ID())).from(TBook()).groupBy(TBook_AUTHOR_ID()).orderBy(TBook_AUTHOR_ID().asc()).fetch(0,Integer.class);
  assertEquals(asList(1,3),result1);
  List<Integer> result2=create().select(secondMax(TBook_ID()).over().partitionByOne()).from(TBook()).orderBy(TBook_AUTHOR_ID().asc()).fetch(0,Integer.class);
  assertEquals(asList(3,3,3,3),result2);
  DSLContext create=DSL.using(getConnectionMultiSchema(),SQLDialect.ORACLE);
  List<Integer> result3=create.select(secondMax(TBook_ID())).from(TBook()).groupBy(TBook_AUTHOR_ID()).orderBy(TBook_AUTHOR_ID().asc()).fetch(0,Integer.class);
  assertEquals(asList(1,3),result3);
}
