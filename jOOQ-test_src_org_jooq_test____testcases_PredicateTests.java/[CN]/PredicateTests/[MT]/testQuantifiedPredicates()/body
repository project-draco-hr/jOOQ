{
switch (getDialect()) {
case SQLITE:
case INGRES:
    log.info("SKIPPING","= { ALL | ANY | SOME } tests");
  break;
default :
{
  assertEquals(Arrays.asList(1),create().select().from(TBook()).where(TBook_ID().equal(all(create().selectOne()))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(),create().select().from(TBook()).where(TBook_ID().equal(all(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,2))))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(1),create().select().from(TBook()).where(TBook_ID().equal(any(create().selectOne()))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(1,2),create().select().from(TBook()).where(TBook_ID().equal(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,2))))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(1),create().select(TBook_ID()).from(TBook()).where(TBook_ID().equal(all(1))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(),create().select(TBook_ID()).from(TBook()).where(TBook_ID().equal(all(1,2))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(1),create().select(TBook_ID()).from(TBook()).where(TBook_ID().equal(any(1))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(1,2),create().select(TBook_ID()).from(TBook()).where(TBook_ID().equal(any(1,2))).orderBy(TBook_ID()).fetch(TBook_ID()));
  assertEquals(Arrays.asList(3),create().select().from(TBook()).where(TBook_ID().equal(create().select(val(3)))).and(TBook_ID().equal(all(create().select(val(3))))).and(TBook_ID().equal(all(3,3))).and(TBook_ID().equal(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(3,4))))).and(TBook_ID().equal(any(3,4))).and(TBook_ID().notEqual(create().select(val(1)))).and(TBook_ID().notEqual(all(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,4))))).and(TBook_ID().notEqual(all(1,4,4))).and(TBook_ID().notEqual(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,4))))).and(TBook_ID().notEqual(any(1,4,4))).and(TBook_ID().greaterOrEqual(create().select(val(1)))).and(TBook_ID().greaterOrEqual(all(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,2))))).and(TBook_ID().greaterOrEqual(all(1,2))).and(TBook_ID().greaterOrEqual(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,4))))).and(TBook_ID().greaterOrEqual(any(1,4))).and(TBook_ID().greaterThan(create().select(val(1)))).and(TBook_ID().greaterThan(all(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,2))))).and(TBook_ID().greaterThan(all(1,2))).and(TBook_ID().greaterThan(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,4))))).and(TBook_ID().greaterThan(any(1,4))).and(TBook_ID().lessOrEqual(create().select(val(3)))).and(TBook_ID().lessOrEqual(all(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(3,4))))).and(TBook_ID().lessOrEqual(all(3,4))).and(TBook_ID().lessOrEqual(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,4))))).and(TBook_ID().lessOrEqual(any(1,4))).and(TBook_ID().lessThan(create().select(val(4)))).and(TBook_ID().lessThan(all(create().select(val(4))))).and(TBook_ID().lessThan(all(4,5))).and(TBook_ID().lessThan(any(create().select(TBook_ID()).from(TBook()).where(TBook_ID().in(1,4))))).and(TBook_ID().lessThan(any(1,4))).fetch(TBook_ID()));
  break;
}
}
}
