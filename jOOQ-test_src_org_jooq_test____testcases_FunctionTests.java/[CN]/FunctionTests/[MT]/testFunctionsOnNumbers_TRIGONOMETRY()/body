{
switch (dialect()) {
case SQLITE:
    log.info("SKIPPING","Tests for trigonometric functions");
  break;
default :
{
  Field<BigDecimal> m1=sqrt(2);
  Field<BigDecimal> m2=round(sqrt(4));
  Field<BigDecimal> m3=exp(2);
  Field<BigDecimal> m4=round(exp(0));
  Field<BigDecimal> m5=exp(-2);
  Field<BigDecimal> m6=ln(2);
  Field<BigDecimal> m7=round(log(16,4));
  Field<BigDecimal> m8=round(power(2,4));
  Field<BigDecimal> m9=round(power(sqrt(power(sqrt(2),2)),2));
  Record record=create().select(m1,m2,m3,m4,m5,m6,m7,m8,m9).fetchOne();
  assertNotNull(record);
  assertEquals("1.414",record.getValue(m1,String.class).substring(0,5));
  assertEquals("2",record.getValue(m2,String.class).substring(0,1));
  assertEquals("7.389",record.getValue(m3,String.class).substring(0,5));
  assertEquals("1",record.getValue(m4,String.class).substring(0,1));
  assertEquals("0.135",record.getValue(m5,String.class).substring(0,5));
  assertEquals("0.693",record.getValue(m6,String.class).substring(0,5));
  assertEquals("2",record.getValue(m7,String.class).substring(0,1));
  assertEquals("16",record.getValue(m8,String.class).substring(0,2));
  assertEquals("2",record.getValue(m9,String.class).substring(0,1));
  Field<BigDecimal> t1=sin(Math.PI / 6 + 0.00001);
  Field<BigDecimal> t2=cos(Math.PI / 6);
  Field<BigDecimal> t3=tan(Math.PI / 6);
  Field<BigDecimal> t4=cot(Math.PI / 6);
  Field<BigDecimal> t6=rad(deg(1.1));
  Field<BigDecimal> t7=asin(Math.PI / 6);
  Field<BigDecimal> t8=acos(Math.PI / 6);
  Field<BigDecimal> t9=atan(Math.PI / 6);
  Field<BigDecimal> ta=round(deg(atan2(1,1)));
  Field<BigDecimal> tb=sinh(1.0).div(cosh(1.0)).mul(tanh(1.0)).mul(power(coth(1.0),2).add(0.1));
  record=create().select(t1,t2,t3,t4,t6,t7,t8,t9,ta,tb).fetchOne();
  assertNotNull(record);
  assertEquals("0.5",record.getValue(t1,String.class).substring(0,3));
  assertEquals("0.866",record.getValue(t2,String.class).substring(0,5));
  assertEquals("0.577",record.getValue(t3,String.class).substring(0,5));
  assertEquals("1.732",record.getValue(t4,String.class).substring(0,5));
  assertEquals("1",record.getValue(t6,String.class).substring(0,1));
  assertEquals("0.551",record.getValue(t7,String.class).substring(0,5));
  assertEquals("1.019",record.getValue(t8,String.class).substring(0,5));
  assertEquals("0.482",record.getValue(t9,String.class).substring(0,5));
  assertEquals("45",record.getValue(ta,String.class).substring(0,2));
  assertEquals("1",record.getValue(tb,String.class).substring(0,1));
  break;
}
}
}
