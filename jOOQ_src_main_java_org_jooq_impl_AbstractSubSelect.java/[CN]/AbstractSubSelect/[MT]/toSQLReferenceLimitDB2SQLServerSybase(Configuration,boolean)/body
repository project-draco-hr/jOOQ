{
  StringBuilder sb=new StringBuilder();
  String enclosed=toSQLReference0(configuration,inlineParameters);
  String subqueryName="limit_" + Math.abs(enclosed.hashCode());
  String rownumName="rownum_" + Math.abs(enclosed.hashCode());
  sb.append("select * from (select ");
  sb.append(subqueryName);
  sb.append(".*, row_number() over (order by ");
  if (getOrderBy().isEmpty()) {
    sb.append(getSelect().get(0).getName());
  }
 else {
    String separator="";
    for (    SortField<?> field : getOrderBy()) {
      sb.append(separator);
      sb.append(field.getName());
      sb.append(" ");
      sb.append(field.getOrder().toSQL());
      separator=", ";
    }
  }
  sb.append(") as ");
  sb.append(rownumName);
  sb.append(" from (");
  sb.append(enclosed);
  sb.append(") as ");
  sb.append(subqueryName);
  sb.append(") as outer_");
  sb.append(subqueryName);
  sb.append(" where ");
  sb.append(rownumName);
  sb.append(" >= ");
  if (inlineParameters) {
    sb.append(getLimit().getLowerRownum());
  }
 else {
    sb.append("?");
  }
  sb.append(" and ");
  sb.append(rownumName);
  sb.append(" < ");
  if (inlineParameters) {
    sb.append(getLimit().getUpperRownum());
  }
 else {
    sb.append("?");
  }
  return sb.toString();
}
