{
  if (asList(CUBRID,DERBY).contains(configuration.family())) {
    return (comparator == IS_DISTINCT_FROM) ? (QueryPartInternal)notExists(select(lhs).intersect(select(rhs))) : (QueryPartInternal)exists(select(lhs).intersect(select(rhs)));
  }
 else   if (asList().contains(configuration.family())) {
    if (caseExpression == null) {
      if (comparator == Comparator.IS_DISTINCT_FROM) {
        caseExpression=(QueryPartInternal)decode().when(lhs.isNull().and(rhs.isNull()),zero()).when(lhs.isNull().and(rhs.isNotNull()),one()).when(lhs.isNotNull().and(rhs.isNull()),one()).when(lhs.equal(rhs),zero()).otherwise(one()).equal(one());
      }
 else {
        caseExpression=(QueryPartInternal)decode().when(lhs.isNull().and(rhs.isNull()),one()).when(lhs.isNull().and(rhs.isNotNull()),zero()).when(lhs.isNotNull().and(rhs.isNull()),zero()).when(lhs.equal(rhs),one()).otherwise(zero()).equal(one());
      }
    }
    return caseExpression;
  }
 else   if (asList(MARIADB,MYSQL).contains(configuration.family())) {
    if (mySQLCondition == null)     mySQLCondition=(QueryPartInternal)((comparator == IS_DISTINCT_FROM) ? condition("{not}({0} <=> {1})",lhs,rhs) : condition("{0} <=> {1}",lhs,rhs));
    return mySQLCondition;
  }
 else   if (SQLITE == configuration.family()) {
    if (sqliteCondition == null)     sqliteCondition=(QueryPartInternal)((comparator == IS_DISTINCT_FROM) ? condition("{0} {is not} {1}",lhs,rhs) : condition("{0} {is} {1}",lhs,rhs));
    return sqliteCondition;
  }
 else {
    if (compareCondition == null)     compareCondition=new CompareCondition(lhs,rhs,comparator);
    return compareCondition;
  }
}
