{
  super(new BorderLayout());
  this.databaseDescriptor=databaseDescriptor;
  this.isDBEditable=!databaseDescriptor.isReadOnly();
  setOpaque(false);
  JPanel northPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,5,2));
  northPanel.setOpaque(false);
  startButton=new JButton("Run");
  startButton.setOpaque(false);
  startButton.setToolTipText("Run the (selected) text (F5)");
  startButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      evaluateInternal();
    }
  }
);
  northPanel.add(startButton);
  stopButton=new JButton("Stop");
  stopButton.setVisible(false);
  stopButton.setOpaque(false);
  stopButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      evaluationThread=null;
      closeConnection();
    }
  }
);
  northPanel.add(stopButton);
  northPanel.add(new JLabel("No display when rows >"));
  NumberFormat numberFormat=NumberFormat.getIntegerInstance();
  displayedRowCountField=new JFormattedTextField(numberFormat);
  displayedRowCountField.setHorizontalAlignment(JFormattedTextField.RIGHT);
  displayedRowCountField.setValue(100000);
  displayedRowCountField.setColumns(7);
  northPanel.add(displayedRowCountField);
  JCheckBox limitCheckBox=new JCheckBox("Parse 10000 rows max",isUsingMaxRowCount);
  limitCheckBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      isUsingMaxRowCount=e.getStateChange() == ItemEvent.SELECTED;
    }
  }
);
  limitCheckBox.setOpaque(false);
  northPanel.add(limitCheckBox);
  add(northPanel,BorderLayout.NORTH);
  editorTextArea=new SqlTextArea();
  editorTextArea.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      boolean isControlDown=e.isControlDown();
switch (e.getKeyCode()) {
case KeyEvent.VK_SPACE:
        if (isControlDown) {
          showCompletion();
        }
      break;
case KeyEvent.VK_F5:
    if (startButton.isEnabled()) {
      evaluateInternal();
    }
  break;
case KeyEvent.VK_ESCAPE:
new Thread("SQLConsole - Interruption"){
  @Override public void run(){
    if (evaluationThread != null) {
      evaluationThread=null;
      closeConnection();
    }
  }
}
.start();
break;
}
}
}
);
RTextScrollPane editorTextAreaScrollPane=new RTextScrollPane(editorTextArea);
JSplitPane verticalSplitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,true,editorTextAreaScrollPane,southPanel);
add(verticalSplitPane,BorderLayout.CENTER);
verticalSplitPane.setDividerLocation(150);
}
