{
  DataTypeDefinition result=definedType;
  Database db=container.getDatabase();
  if (db.dateAsTimestamp()) {
    DataType<?> dataType=null;
    try {
      dataType=DefaultDataType.getDataType(db.getDialect(),result.getType(),0,0);
    }
 catch (    SQLDialectNotSupportedException ignore) {
    }
    if (dataType != null) {
      if (dataType.getSQLType() == Types.DATE) {
        DataType<?> forcedDataType=DefaultDataType.getDataType(db.getDialect(),SQLDataType.TIMESTAMP.getTypeName(),0,0);
        result=new DefaultDataTypeDefinition(db,child.getSchema(),forcedDataType.getTypeName());
      }
    }
  }
  ForcedType forcedType=db.getConfiguredForcedType(child,definedType);
  if (forcedType != null) {
    String type=forcedType.getName();
    String converter=null;
    CustomType customType=customType(db,forcedType.getName());
    if (customType != null) {
      type=(!StringUtils.isBlank(customType.getType())) ? customType.getType() : customType.getName();
      converter=customType.getConverter();
    }
    log.info("Forcing type",child + " into " + type+ (converter != null ? " using converter " + converter : ""));
    DataType<?> forcedDataType=null;
    String t=result.getType();
    int l=result.getLength();
    int p=result.getPrecision();
    int s=result.getScale();
    boolean n=result.isNullable();
    boolean d=result.isDefaulted();
    try {
      forcedDataType=DefaultDataType.getDataType(db.getDialect(),type,p,s);
    }
 catch (    SQLDialectNotSupportedException ignore) {
    }
    if (forcedDataType != null) {
      result=new DefaultDataTypeDefinition(db,child.getSchema(),type,l,p,s,n,d,null,converter);
    }
 else {
      result=new DefaultDataTypeDefinition(db,child.getSchema(),t,l,p,s,n,d,type,converter);
    }
  }
  return result;
}
