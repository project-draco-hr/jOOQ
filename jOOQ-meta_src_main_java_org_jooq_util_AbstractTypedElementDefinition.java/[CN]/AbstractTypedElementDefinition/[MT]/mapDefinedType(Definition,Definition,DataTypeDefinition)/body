{
  DataTypeDefinition result=definedType;
  Database db=container.getDatabase();
  if (db.dateAsTimestamp()) {
    DataType<?> dataType=null;
    try {
      dataType=DefaultDataType.getDataType(db.getDialect(),result.getType(),0,0);
    }
 catch (    SQLDialectNotSupportedException ignore) {
    }
    if (dataType != null) {
      if (dataType.getSQLType() == Types.DATE) {
        DataType<?> forcedDataType=DefaultDataType.getDataType(db.getDialect(),SQLDataType.TIMESTAMP.getTypeName(),0,0);
        result=new DefaultDataTypeDefinition(db,child.getSchema(),forcedDataType.getTypeName(),0,0,0);
      }
    }
  }
  ForcedType forcedType=db.getConfiguredForcedType(child);
  if (forcedType != null) {
    log.debug("Forcing type",child + " into " + forcedType.getName());
    DataType<?> forcedDataType=null;
    String t=result.getType();
    int l=result.getLength();
    int p=result.getPrecision();
    int s=result.getScale();
    try {
      forcedDataType=DefaultDataType.getDataType(db.getDialect(),forcedType.getName(),p,s);
    }
 catch (    SQLDialectNotSupportedException ignore) {
    }
    if (forcedDataType != null) {
      result=new DefaultDataTypeDefinition(db,child.getSchema(),forcedType.getName(),l,p,s);
    }
 else {
      result=new DefaultDataTypeDefinition(db,child.getSchema(),t,l,p,s,forcedType.getName());
    }
  }
  return result;
}
