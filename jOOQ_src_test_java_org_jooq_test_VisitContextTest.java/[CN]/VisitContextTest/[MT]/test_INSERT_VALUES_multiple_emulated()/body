{
  ctx.configuration().set(FIREBIRD);
  assertEvents(asList(asList(INSERT),asList(INSERT,INSERT_INSERT_INTO),asList(INSERT,INSERT_INSERT_INTO,TABLE),asList(INSERT,INSERT_INSERT_INTO,TABLE,TABLE_REFERENCE),asList(INSERT,INSERT_INSERT_INTO,FIELD),asList(INSERT,INSERT_INSERT_INTO,FIELD,FIELD_REFERENCE),asList(INSERT,INSERT_INSERT_INTO,FIELD),asList(INSERT,INSERT_INSERT_INTO,FIELD,FIELD_REFERENCE),asList(INSERT,INSERT_INSERT_INTO,FIELD),asList(INSERT,INSERT_INSERT_INTO,FIELD,FIELD_REFERENCE),asList(INSERT,INSERT_SELECT),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD,FIELD_VALUE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD,FIELD_VALUE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD,FIELD_VALUE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_FROM),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_FROM,TABLE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_WHERE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_START_WITH),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_CONNECT_BY),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_GROUP_BY),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_HAVING),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_ORDER_BY),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD,FIELD_VALUE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD,FIELD_VALUE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_SELECT,FIELD,FIELD_VALUE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_FROM),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_FROM,TABLE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_WHERE),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_START_WITH),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_CONNECT_BY),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_GROUP_BY),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_HAVING),asList(INSERT,INSERT_SELECT,SELECT_UNION_ALL,SELECT,SELECT_ORDER_BY),asList(INSERT,INSERT_ON_DUPLICATE_KEY_UPDATE),asList(INSERT,INSERT_RETURNING)),ctx.insertInto(TABLE1).values(1,"value",null).values(2,"value",null));
}
