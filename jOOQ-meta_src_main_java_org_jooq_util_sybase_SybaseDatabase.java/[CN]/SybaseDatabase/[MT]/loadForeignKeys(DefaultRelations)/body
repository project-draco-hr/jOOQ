{
  Table<SysidxRecord> fkIndex=SYSIDX.as("fkIndex");
  Table<SysidxRecord> ukIndex=SYSIDX.as("ukIndex");
  Table<SystableRecord> fkTable=SYSTABLE.as("fkTable");
  Table<SystableRecord> ukTable=SYSTABLE.as("ukTable");
  for (  Record record : create().select(concat(fkTable.getField(Systable.TABLE_NAME),val("_"),fkIndex.getField(Sysidx.INDEX_NAME)).as("fkIndexName"),fkTable.getField(Systable.TABLE_NAME),Systabcol.COLUMN_NAME,concat(ukTable.getField(Systable.TABLE_NAME),val("_"),ukIndex.getField(Sysidx.INDEX_NAME)).as("ukIndexName")).from(SYSFKEY).join(fkIndex).on(Sysfkey.FOREIGN_INDEX_ID.equal(fkIndex.getField(Sysidx.INDEX_ID))).and(Sysfkey.FOREIGN_TABLE_ID.equal(fkIndex.getField(Sysidx.TABLE_ID))).join(SYSIDXCOL).on(fkIndex.getField(Sysidx.INDEX_ID).equal(Sysidxcol.INDEX_ID)).and(fkIndex.getField(Sysidx.TABLE_ID).equal(Sysidxcol.TABLE_ID)).join(fkTable).on(Sysfkey.FOREIGN_TABLE_ID.equal(fkTable.getField(Systable.TABLE_ID))).join(SYSTABCOL).on(Sysidxcol.TABLE_ID.equal(Systabcol.TABLE_ID)).and(Sysidxcol.COLUMN_ID.equal(Systabcol.COLUMN_ID)).join(ukIndex).on(Sysfkey.PRIMARY_INDEX_ID.equal(ukIndex.getField(Sysidx.INDEX_ID))).and(Sysfkey.PRIMARY_TABLE_ID.equal(ukIndex.getField(Sysidx.TABLE_ID))).join(ukTable).on(Sysfkey.PRIMARY_TABLE_ID.equal(ukTable.getField(Systable.TABLE_ID))).orderBy(fkTable.getField(Systable.TABLE_NAME).asc(),fkIndex.getField(Sysidx.INDEX_NAME).asc(),Sysidxcol.SEQUENCE.asc()).fetch()) {
    String foreignKey=record.getValueAsString("fkIndexName");
    String foreignKeyTableName=record.getValue(Systable.TABLE_NAME);
    String foreignKeyColumn=record.getValue(Systabcol.COLUMN_NAME);
    String referencedKey=record.getValueAsString("ukIndexName");
    TableDefinition foreignKeyTable=getTable(foreignKeyTableName);
    if (foreignKeyTable != null) {
      ColumnDefinition referencingColumn=foreignKeyTable.getColumn(foreignKeyColumn);
      relations.addForeignKey(foreignKey,referencedKey,referencingColumn);
    }
  }
}
