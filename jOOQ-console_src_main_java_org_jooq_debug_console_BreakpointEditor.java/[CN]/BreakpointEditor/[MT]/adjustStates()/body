{
  boolean isActive=true;
  queryTextMatcherCheckBox.setEnabled(isActive);
  queryTypeCheckBox.setEnabled(isActive);
  threadNameTextMatcherCheckBox.setEnabled(isActive);
  queryTextMatcherPane.setLocked(!isActive || !queryTextMatcherCheckBox.isSelected());
  queryTypeSelectCheckBox.setEnabled(isActive && queryTypeCheckBox.isSelected());
  queryTypeUpdateCheckBox.setEnabled(isActive && queryTypeCheckBox.isSelected());
  queryTypeInsertCheckBox.setEnabled(isActive && queryTypeCheckBox.isSelected());
  queryTypeDeleteCheckBox.setEnabled(isActive && queryTypeCheckBox.isSelected());
  queryTypeOtherCheckBox.setEnabled(isActive && queryTypeCheckBox.isSelected());
  threadNameTextMatcherPane.setLocked(!isActive || !threadNameTextMatcherCheckBox.isSelected());
  hitCountCheckBox.setEnabled(isActive);
  hitCountField.setEnabled(isActive && hitCountCheckBox.isSelected());
  breakpointTypeCombobox.setEnabled(isActive && (queryTextMatcherCheckBox.isSelected() || queryTypeCheckBox.isSelected() || threadNameTextMatcherCheckBox.isSelected()|| hitCountCheckBox.isSelected()));
  processorPane.setVisible(isActive && breakpointTypeCombobox.getSelectedItem() == PROCESS);
  beforeCheckbox.setEnabled(isActive);
  beforePane.setLocked(!isActive || !beforeCheckbox.isSelected());
  executeTypeComboBox.setEnabled(isActive);
  replacePane.setLocked(!isActive || executeTypeComboBox.getSelectedIndex() != 1);
  afterCheckbox.setEnabled(isActive);
  afterPane.setLocked(!isActive || !afterCheckbox.isSelected());
}
