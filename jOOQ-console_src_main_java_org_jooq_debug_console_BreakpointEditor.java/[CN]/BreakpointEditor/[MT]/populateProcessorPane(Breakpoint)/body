{
  int y=0;
  QueryProcessor beforeExecutionProcessor=breakpoint.getBeforeExecutionProcessor();
  beforeExecutionCheckBox=new JCheckBox("Execute before: ");
  beforeExecutionCheckBox.setOpaque(false);
  beforeExecutionCheckBox.setSelected(beforeExecutionProcessor != null);
  beforeExecutionCheckBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      adjustStates();
    }
  }
);
  processorPane.add(beforeExecutionCheckBox,new GridBagConstraints(0,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(2,0,0,0),0,0));
  beforeExecutionProcessorPane=new QueryProcessorPane(beforeExecutionProcessor);
  processorPane.add(beforeExecutionProcessorPane,new GridBagConstraints(1,y,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(2,5,0,0),0,0));
  y++;
  QueryProcessor replacementExecutionProcessor=breakpoint.getReplacementExecutionProcessor();
  executeTypeComboBox=new JComboBox(new String[]{"Execute","Replace with"});
  if (replacementExecutionProcessor != null) {
    executeTypeComboBox.setSelectedIndex(1);
  }
 else {
    executeTypeComboBox.setSelectedIndex(0);
  }
  processorPane.add(executeTypeComboBox,new GridBagConstraints(0,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  replacementExecutionProcessorPane=new QueryProcessorPane(breakpoint.getReplacementExecutionProcessor());
  processorPane.add(replacementExecutionProcessorPane,new GridBagConstraints(1,y,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,0),0,0));
  executeTypeComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      adjustStates();
    }
  }
);
  y++;
  QueryProcessor afterExecutionProcessor=breakpoint.getAfterExecutionProcessor();
  afterExecutionCheckBox=new JCheckBox("Execute after: ");
  afterExecutionCheckBox.setOpaque(false);
  afterExecutionCheckBox.setSelected(afterExecutionProcessor != null);
  afterExecutionCheckBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      adjustStates();
    }
  }
);
  processorPane.add(afterExecutionCheckBox,new GridBagConstraints(0,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(2,0,0,0),0,0));
  afterExecutionProcessorPane=new QueryProcessorPane(afterExecutionProcessor);
  processorPane.add(afterExecutionProcessorPane,new GridBagConstraints(1,y,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(2,5,0,0),0,0));
}
