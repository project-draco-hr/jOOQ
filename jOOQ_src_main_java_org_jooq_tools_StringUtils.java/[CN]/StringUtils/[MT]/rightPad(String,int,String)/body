{
  if (str == null) {
    return null;
  }
  if (isEmpty(padStr)) {
    padStr=" ";
  }
  int padLen=padStr.length();
  int strLen=str.length();
  int pads=size - strLen;
  if (pads <= 0) {
    return str;
  }
  if (padLen == 1 && pads <= PAD_LIMIT) {
    return rightPad(str,size,padStr.charAt(0));
  }
  if (pads == padLen) {
    return str.concat(padStr);
  }
 else   if (pads < padLen) {
    return str.concat(padStr.substring(0,pads));
  }
 else {
    char[] padding=new char[pads];
    char[] padChars=padStr.toCharArray();
    for (int i=0; i < pads; i++) {
      padding[i]=padChars[i % padLen];
    }
    return str.concat(new String(padding));
  }
}
