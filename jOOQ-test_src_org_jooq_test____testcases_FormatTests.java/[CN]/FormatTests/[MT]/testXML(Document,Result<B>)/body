{
  XPathFactory xpfactory=XPathFactory.newInstance();
  XPath xp=xpfactory.newXPath();
  Row row=TBook().fieldsRow();
  assertEquals("1",xp.evaluate("count(/result)",doc));
  assertEquals("1",xp.evaluate("count(/result/fields)",doc));
  assertEquals("" + row.getDegree(),xp.evaluate("count(/result/fields/field)",doc));
  for (int i=0; i < row.getDegree(); i++) {
    assertEquals(row.field(i).getName(),xp.evaluate("/result/fields/field[" + (i + 1) + "]/@name",doc));
    assertEquals(row.field(i).getDataType().getTypeName().toUpperCase(),xp.evaluate("/result/fields/field[" + (i + 1) + "]/@type",doc));
  }
  assertEquals("1",xp.evaluate("count(/result/records)",doc));
  assertEquals("4",xp.evaluate("count(/result/records/record)",doc));
  assertEquals("" + 4 * row.getDegree(),xp.evaluate("count(/result/records/record/value)",doc));
  for (int j=0; j < books.size(); j++) {
    for (int i=0; i < row.getDegree(); i++) {
      assertEquals(row.field(i).getName(),xp.evaluate("/result/records/record[" + (j + 1) + "]/value["+ (i + 1)+ "]/@field",doc));
      assertEquals(books.get(j).getValue(i,String.class,""),xp.evaluate("/result/records/record[" + (j + 1) + "]/value["+ (i + 1)+ "]/text()",doc));
    }
  }
}
