{
  return Cache.run(configuration,new CachedOperation<List<java.lang.reflect.Field>>(){
    @Override public List<java.lang.reflect.Field> call(){
      List<java.lang.reflect.Field> result=new ArrayList<java.lang.reflect.Field>();
      for (      java.lang.reflect.Field member : getInstanceMembers(type)) {
        Column column=member.getAnnotation(Column.class);
        if (column != null) {
          if (namesMatch(name,column.name())) {
            result.add(accessible(member));
          }
        }
 else {
          Id id=member.getAnnotation(Id.class);
          if (id != null) {
            if (namesMatch(name,member.getName())) {
              result.add(accessible(member));
            }
          }
        }
      }
      return result;
    }
  }
,DATA_REFLECTION_CACHE_GET_ANNOTATED_MEMBERS,type,name);
}
