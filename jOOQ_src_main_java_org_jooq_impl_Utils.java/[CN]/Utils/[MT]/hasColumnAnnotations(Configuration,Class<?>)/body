{
  return Cache.run(configuration,new CachedOperation<Boolean>(){
    @Override public Boolean call(){
      boolean result=false;
      try {
        if (!isJPAAvailable())         return result=false;
        if (type.getAnnotation(Entity.class) != null)         return result=true;
        if (type.getAnnotation(javax.persistence.Table.class) != null)         return result=true;
        for (        java.lang.reflect.Field member : getInstanceMembers(type)) {
          if (member.getAnnotation(Column.class) != null)           return result=true;
          if (member.getAnnotation(Id.class) != null)           return result=true;
        }
        for (        Method method : getInstanceMethods(type))         if (method.getAnnotation(Column.class) != null)         return result=true;
        return result=false;
      }
  finally {
        if (result && TRUE.equals(configuration.settings().isMapJPAAnnotations()))         log.info("DEPRECATION","Mapping by JPA annotations has been deprecated in jOOQ 3.7 and will be removed in jOOQ 4.0");
      }
    }
  }
,DATA_REFLECTION_CACHE_HAS_COLUMN_ANNOTATIONS,type);
}
