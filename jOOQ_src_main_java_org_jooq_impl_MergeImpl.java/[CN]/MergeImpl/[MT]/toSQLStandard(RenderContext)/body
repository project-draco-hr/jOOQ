{
  context.keyword("merge into").sql(" ").declareTables(true).visit(table).formatSeparator().keyword("using").sql(" ").formatIndentStart().formatNewLine().sql(Utils.wrapInParentheses(context.render(using))).formatIndentEnd().declareTables(false);
switch (context.configuration().dialect().family()) {
case SQLSERVER:
case SYBASE:
{
      if (using instanceof Select) {
        int hash=Utils.hash(using);
        context.sql(" ").keyword("as").sql(" ").sql("dummy_").sql(hash).sql("(");
        String separator="";
        for (        Field<?> field : ((Select<?>)using).fields()) {
          String name=StringUtils.isBlank(field.getName()) ? "dummy_" + hash + "_"+ Utils.hash(field) : field.getName();
          context.sql(separator).literal(name);
          separator=", ";
        }
        context.sql(")");
      }
      break;
    }
}
context.formatSeparator().keyword("on").sql(" ").sql(Utils.wrapInParentheses(context.render(on)));
if (matchedUpdate != null) {
  context.formatSeparator().keyword("when matched then update set").sql(" ").visit(matchedUpdate);
}
if (matchedWhere != null) {
  context.formatSeparator().keyword("where").sql(" ").visit(matchedWhere);
}
if (matchedDeleteWhere != null) {
  context.formatSeparator().keyword("delete where").sql(" ").visit(matchedDeleteWhere);
}
if (notMatchedInsert != null) {
  context.formatSeparator().keyword("when not matched then insert").sql(" ").visit(notMatchedInsert);
}
if (notMatchedWhere != null) {
  context.formatSeparator().keyword("where").sql(" ").visit(notMatchedWhere);
}
switch (context.configuration().dialect().family()) {
case SQLSERVER:
  context.sql(";");
break;
}
}
