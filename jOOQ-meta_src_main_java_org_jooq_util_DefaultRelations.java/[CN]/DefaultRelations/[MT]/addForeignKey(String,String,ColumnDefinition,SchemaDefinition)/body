{
  if (foreignKeyColumn == null) {
    log.info("Ignoring foreign key",foreignKeyColumn + "(column unavailable)");
    return;
  }
  if (uniqueKeySchema == null) {
    log.info("Ignoring foreign key",foreignKeyName + " (" + foreignKeyColumn+ ") referencing "+ uniqueKeyName+ " references a schema out of scope for jooq-meta: "+ uniqueKeySchema);
    return;
  }
  log.info("Adding foreign key",foreignKeyName + " (" + foreignKeyColumn+ ") referencing "+ uniqueKeyName);
  ForeignKeyDefinition foreignKey=foreignKeys.get(key(foreignKeyColumn,foreignKeyName));
  if (foreignKey == null) {
    UniqueKeyDefinition uniqueKey=uniqueKeys.get(key(uniqueKeySchema,uniqueKeyName));
    if (uniqueKey != null) {
      foreignKey=new DefaultForeignKeyDefinition(foreignKeyColumn.getSchema(),foreignKeyName,foreignKeyColumn.getContainer(),uniqueKey);
      foreignKeys.put(key(foreignKeyColumn,foreignKeyName),foreignKey);
      uniqueKey.getForeignKeys().add(foreignKey);
    }
  }
  if (foreignKey != null) {
    foreignKey.getKeyColumns().add(foreignKeyColumn);
  }
}
