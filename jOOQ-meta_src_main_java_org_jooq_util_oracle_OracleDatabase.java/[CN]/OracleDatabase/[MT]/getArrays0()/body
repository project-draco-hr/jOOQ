{
  List<ArrayDefinition> arrays=new ArrayList<ArrayDefinition>();
  for (  Record record : create().select(ALL_COLL_TYPES.OWNER,ALL_COLL_TYPES.TYPE_NAME,ALL_COLL_TYPES.ELEM_TYPE_NAME,ALL_COLL_TYPES.LENGTH,ALL_COLL_TYPES.PRECISION,ALL_COLL_TYPES.SCALE).from(ALL_COLL_TYPES).where(ALL_COLL_TYPES.OWNER.upper().in(getInputSchemata())).and(ALL_COLL_TYPES.COLL_TYPE.in("VARYING ARRAY","TABLE")).orderBy(ALL_COLL_TYPES.OWNER,ALL_COLL_TYPES.TYPE_NAME).fetch()) {
    SchemaDefinition schema=getSchema(record.getValue(ALL_COLL_TYPES.OWNER));
    String name=record.getValue(ALL_COLL_TYPES.TYPE_NAME);
    String dataType=record.getValue(ALL_COLL_TYPES.ELEM_TYPE_NAME);
    int length=record.getValue(ALL_COLL_TYPES.LENGTH,BigDecimal.ZERO).intValue();
    int precision=record.getValue(ALL_COLL_TYPES.PRECISION,BigDecimal.ZERO).intValue();
    int scale=record.getValue(ALL_COLL_TYPES.SCALE,BigDecimal.ZERO).intValue();
    DefaultDataTypeDefinition type=new DefaultDataTypeDefinition(this,schema,dataType,length,precision,scale,null,null);
    DefaultArrayDefinition array=new DefaultArrayDefinition(schema,name,type);
    arrays.add(array);
  }
  return arrays;
}
