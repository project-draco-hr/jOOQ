{
  for (  Record record : create().select(ALL_CONS_COLUMNS.OWNER,ALL_CONS_COLUMNS.CONSTRAINT_NAME,ALL_CONS_COLUMNS.TABLE_NAME,ALL_CONS_COLUMNS.COLUMN_NAME,ALL_CONSTRAINTS.R_CONSTRAINT_NAME).from(ALL_CONSTRAINTS.join(ALL_CONS_COLUMNS).on(ALL_CONSTRAINTS.OWNER.equal(ALL_CONS_COLUMNS.OWNER)).and(ALL_CONSTRAINTS.TABLE_NAME.equal(ALL_CONS_COLUMNS.TABLE_NAME)).and(ALL_CONSTRAINTS.CONSTRAINT_NAME.equal(ALL_CONS_COLUMNS.CONSTRAINT_NAME))).where(ALL_CONSTRAINTS.CONSTRAINT_TYPE.equal("R")).and(ALL_CONSTRAINTS.OWNER.in(getInputSchemata())).orderBy(ALL_CONS_COLUMNS.OWNER,ALL_CONS_COLUMNS.TABLE_NAME,ALL_CONS_COLUMNS.CONSTRAINT_NAME,ALL_CONS_COLUMNS.POSITION).fetch()) {
    SchemaDefinition schema=getSchema(record.getValue(ALL_CONS_COLUMNS.OWNER));
    String foreignKeyName=record.getValue(ALL_CONS_COLUMNS.CONSTRAINT_NAME);
    String foreignKeyTableName=record.getValue(ALL_CONS_COLUMNS.TABLE_NAME);
    String foreignKeyColumnName=record.getValue(ALL_CONS_COLUMNS.COLUMN_NAME);
    String uniqueKeyName=record.getValue(ALL_CONSTRAINTS.R_CONSTRAINT_NAME);
    TableDefinition referencingTable=getTable(schema,foreignKeyTableName);
    if (referencingTable != null) {
      ColumnDefinition column=referencingTable.getColumn(foreignKeyColumnName);
      relations.addForeignKey(foreignKeyName,uniqueKeyName,column);
    }
  }
}
