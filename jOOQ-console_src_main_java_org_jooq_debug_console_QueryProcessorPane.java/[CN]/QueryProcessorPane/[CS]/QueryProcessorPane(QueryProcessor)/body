{
  super(new GridBagLayout());
  setOpaque(false);
  if (queryProcessor == null) {
    queryProcessor=new QueryProcessor(QueryProcessor.ProcessorExecutionType.STATIC,"");
  }
  processorTypeComboBox=new JComboBox(QueryProcessor.ProcessorExecutionType.values());
  processorTypeComboBox.setSelectedItem(queryProcessor.getType());
  processorTypeComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      adjustStates();
    }
  }
);
  add(processorTypeComboBox,new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));
  boolean isStatic=queryProcessor.getType() == QueryProcessor.ProcessorExecutionType.STATIC;
  processorTextField=new JTextField(isStatic ? "" : queryProcessor.getText(),14);
  add(processorTextField,new GridBagConstraints(1,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,0),0,0));
  processorStaticSQLTextArea=new SqlTextArea();
  if (isStatic) {
    processorStaticSQLTextArea.setText(queryProcessor.getText());
    processorStaticSQLTextArea.setCaretPosition(0);
  }
  processorStaticScrollPane=new RTextScrollPane(processorStaticSQLTextArea);
  processorStaticScrollPane.setPreferredSize(new Dimension(100,100));
  add(processorStaticScrollPane,new GridBagConstraints(1,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,0),0,0));
  adjustStates();
}
