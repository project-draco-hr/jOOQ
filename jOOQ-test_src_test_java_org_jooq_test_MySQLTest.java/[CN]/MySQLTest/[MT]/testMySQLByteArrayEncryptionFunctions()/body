{
  final byte[] MESSAGE=new byte[]{-74,71,-79,-124,-58};
  final byte[] SECRET=new byte[]{-122,-123,4,-12,-37};
  assertNotNull(create().select(password(MESSAGE)).fetchOne(0));
  assertNotNull(create().select(sha1(MESSAGE)).fetchOne(0));
  assertNotNull(create().select(sha2(MESSAGE,256)).fetchOne(0));
  assertArrayEquals(MESSAGE,create().select(decode(encode(MESSAGE,SECRET),val(SECRET))).fetchOne().value1());
  assertArrayEquals(MESSAGE,create().select(aesDecrypt(aesEncrypt(MESSAGE,SECRET),val(SECRET))).fetchOne().value1());
  assertArrayEquals(MESSAGE,create().select(desDecrypt(desEncrypt(MESSAGE,SECRET),val(SECRET))).fetchOne().value1());
  assertArrayEquals(MESSAGE,create().select(desDecrypt(desEncrypt(MESSAGE))).fetchOne().value1());
  assertArrayEquals(MESSAGE,create().select(uncompress(compress(MESSAGE))).fetchOne().value1());
  assertEquals(5,create().select(uncompressedLength(compress(MESSAGE))).fetchOne(0));
}
