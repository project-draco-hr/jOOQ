{
  List<Schema> result=new ArrayList<Schema>();
  if (!inverseSchemaCatalog) {
    Result<Record> schemas=meta(new MetaFunction(){
      @Override public Result<Record> run(      DatabaseMetaData meta) throws SQLException {
        return ctx.fetch(meta.getSchemas(),SQLDataType.VARCHAR);
      }
    }
);
    for (    String name : schemas.getValues(0,String.class)) {
      result.add(new MetaSchema(name,MetaCatalog.this));
    }
  }
 else {
    Result<Record> schemas=meta(new MetaFunction(){
      @Override public Result<Record> run(      DatabaseMetaData meta) throws SQLException {
        return ctx.fetch(meta.getCatalogs(),SQLDataType.VARCHAR);
      }
    }
);
    for (    String name : schemas.getValues(0,String.class)) {
      result.add(new MetaSchema(name,MetaCatalog.this));
    }
  }
  if (result.isEmpty()) {
    result.add(new MetaSchema("",MetaCatalog.this));
  }
  return result;
}
