{
switch (configuration.family()) {
case SQLITE:
switch (datePart) {
case YEAR:
      return DSL.field("{strftime}('%Y', {0})",SQLDataType.INTEGER,field);
case MONTH:
    return DSL.field("{strftime}('%m', {0})",SQLDataType.INTEGER,field);
case DAY:
  return DSL.field("{strftime}('%d', {0})",SQLDataType.INTEGER,field);
case HOUR:
return DSL.field("{strftime}('%H', {0})",SQLDataType.INTEGER,field);
case MINUTE:
return DSL.field("{strftime}('%M', {0})",SQLDataType.INTEGER,field);
case SECOND:
return DSL.field("{strftime}('%S', {0})",SQLDataType.INTEGER,field);
default :
throw new SQLDialectNotSupportedException("DatePart not supported: " + datePart);
}
case DERBY:
switch (datePart) {
case YEAR:
return function("year",SQLDataType.INTEGER,field);
case MONTH:
return function("month",SQLDataType.INTEGER,field);
case DAY:
return function("day",SQLDataType.INTEGER,field);
case HOUR:
return function("hour",SQLDataType.INTEGER,field);
case MINUTE:
return function("minute",SQLDataType.INTEGER,field);
case SECOND:
return function("second",SQLDataType.INTEGER,field);
default :
throw new SQLDialectNotSupportedException("DatePart not supported: " + datePart);
}
case MARIADB:
case MYSQL:
case POSTGRES:
case HSQLDB:
case H2:
default :
return DSL.field("{extract}({" + datePart.toSQL() + " from} {0})",SQLDataType.INTEGER,field);
}
}
