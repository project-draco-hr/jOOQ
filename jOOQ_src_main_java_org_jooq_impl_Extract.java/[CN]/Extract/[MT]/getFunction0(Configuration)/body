{
switch (configuration.getDialect()) {
case SQLITE:
switch (datePart) {
case YEAR:
      return function("strftime",SQLDataType.INTEGER,literal("'%Y'"),field);
case MONTH:
    return function("strftime",SQLDataType.INTEGER,literal("'%m'"),field);
case DAY:
  return function("strftime",SQLDataType.INTEGER,literal("'%d'"),field);
case HOUR:
return function("strftime",SQLDataType.INTEGER,literal("'%H'"),field);
case MINUTE:
return function("strftime",SQLDataType.INTEGER,literal("'%M'"),field);
case SECOND:
return function("strftime",SQLDataType.INTEGER,literal("'%S'"),field);
default :
throw new SQLDialectNotSupportedException("DatePart not supported: " + datePart);
}
case DERBY:
case DB2:
switch (datePart) {
case YEAR:
return function("year",SQLDataType.INTEGER,field);
case MONTH:
return function("month",SQLDataType.INTEGER,field);
case DAY:
return function("day",SQLDataType.INTEGER,field);
case HOUR:
return function("hour",SQLDataType.INTEGER,field);
case MINUTE:
return function("minute",SQLDataType.INTEGER,field);
case SECOND:
return function("second",SQLDataType.INTEGER,field);
default :
throw new SQLDialectNotSupportedException("DatePart not supported: " + datePart);
}
case ORACLE:
switch (datePart) {
case YEAR:
return function("to_char",SQLDataType.INTEGER,field,literal("'YYYY'"));
case MONTH:
return function("to_char",SQLDataType.INTEGER,field,literal("'MM'"));
case DAY:
return function("to_char",SQLDataType.INTEGER,field,literal("'DD'"));
case HOUR:
return function("to_char",SQLDataType.INTEGER,field,literal("'HH24'"));
case MINUTE:
return function("to_char",SQLDataType.INTEGER,field,literal("'MI'"));
case SECOND:
return function("to_char",SQLDataType.INTEGER,field,literal("'SS'"));
default :
throw new SQLDialectNotSupportedException("DatePart not supported: " + datePart);
}
case ASE:
case SQLSERVER:
case SYBASE:
switch (datePart) {
case YEAR:
return function("datepart",SQLDataType.INTEGER,field("yy"),field);
case MONTH:
return function("datepart",SQLDataType.INTEGER,field("mm"),field);
case DAY:
return function("datepart",SQLDataType.INTEGER,field("dd"),field);
case HOUR:
return function("datepart",SQLDataType.INTEGER,field("hh"),field);
case MINUTE:
return function("datepart",SQLDataType.INTEGER,field("mi"),field);
case SECOND:
return function("datepart",SQLDataType.INTEGER,field("ss"),field);
default :
throw new SQLDialectNotSupportedException("DatePart not supported: " + datePart);
}
case INGRES:
case MYSQL:
case POSTGRES:
case HSQLDB:
case H2:
default :
return field("{extract}({" + datePart.toSQL() + " from} {0})",SQLDataType.INTEGER,field);
}
}
