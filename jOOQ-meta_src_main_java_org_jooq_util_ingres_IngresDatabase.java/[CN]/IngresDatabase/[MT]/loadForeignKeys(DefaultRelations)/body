{
  Result<Record> result=create().select(IirefConstraints.REF_CONSTRAINT_NAME.trim(),IirefConstraints.UNIQUE_CONSTRAINT_NAME.trim(),IirefConstraints.REF_TABLE_NAME.trim(),IiindexColumns.COLUMN_NAME.trim()).from(IICONSTRAINTS).join(IIREF_CONSTRAINTS).on(Iiconstraints.CONSTRAINT_NAME.equal(IirefConstraints.REF_CONSTRAINT_NAME)).and(Iiconstraints.SCHEMA_NAME.equal(IirefConstraints.REF_SCHEMA_NAME)).join(IICONSTRAINT_INDEXES).on(Iiconstraints.CONSTRAINT_NAME.equal(IiconstraintIndexes.CONSTRAINT_NAME)).and(Iiconstraints.SCHEMA_NAME.equal(IiconstraintIndexes.SCHEMA_NAME)).join(IIINDEXES).on(IiconstraintIndexes.INDEX_NAME.equal(Iiindexes.INDEX_NAME)).and(IiconstraintIndexes.SCHEMA_NAME.equal(Iiindexes.INDEX_OWNER)).join(IIINDEX_COLUMNS).on(Iiindexes.INDEX_NAME.equal(IiindexColumns.INDEX_NAME)).and(Iiindexes.INDEX_OWNER.equal(IiindexColumns.INDEX_OWNER)).where(Iiconstraints.SCHEMA_NAME.equal(getSchemaName())).and(Iiconstraints.CONSTRAINT_TYPE.equal("R")).orderBy(IirefConstraints.REF_TABLE_NAME.asc(),IirefConstraints.REF_CONSTRAINT_NAME.asc(),IiindexColumns.KEY_SEQUENCE.asc()).fetch();
  for (  Record record : result) {
    String foreignKey=record.getValue(IirefConstraints.REF_CONSTRAINT_NAME.trim());
    String foreignKeyTable=record.getValue(IirefConstraints.REF_TABLE_NAME.trim());
    String foreignKeyColumn=record.getValue(IiindexColumns.COLUMN_NAME.trim());
    String uniqueKey=record.getValue(IirefConstraints.UNIQUE_CONSTRAINT_NAME.trim());
    TableDefinition referencingTable=getTable(foreignKeyTable);
    if (referencingTable != null) {
      ColumnDefinition referencingColumn=referencingTable.getColumn(foreignKeyColumn);
      relations.addForeignKey(foreignKey,uniqueKey,referencingColumn);
    }
  }
}
