{
  jOOQAbstractTest.reset=false;
  A author1=create().fetchOne(TAuthor(),TAuthor_ID().eq(1));
  author1.setValue(TAuthor_FIRST_NAME(),"A1");
  author1.setValue(TAuthor_LAST_NAME(),"B1");
  assertEquals(1,author1.store(TAuthor_FIRST_NAME()));
  assertTrue(author1.changed());
  assertFalse(author1.changed(TAuthor_ID()));
  assertFalse(author1.changed(TAuthor_FIRST_NAME()));
  assertTrue(author1.changed(TAuthor_LAST_NAME()));
  assertEquals(1,author1.store());
  assertFalse(author1.changed());
  assertFalse(author1.changed(TAuthor_ID()));
  assertFalse(author1.changed(TAuthor_FIRST_NAME()));
  assertFalse(author1.changed(TAuthor_LAST_NAME()));
  author1.setValue(TAuthor_FIRST_NAME(),"A2");
  author1.setValue(TAuthor_LAST_NAME(),"B2");
  assertEquals(1,author1.store(TAuthor_FIRST_NAME()));
  assertTrue(author1.changed());
  assertFalse(author1.changed(TAuthor_ID()));
  assertFalse(author1.changed(TAuthor_FIRST_NAME()));
  assertTrue(author1.changed(TAuthor_LAST_NAME()));
  author1.refresh();
  assertEquals(1,(int)author1.getValue(TAuthor_ID()));
  assertEquals("A2",author1.getValue(TAuthor_FIRST_NAME()));
  assertEquals("B1",author1.getValue(TAuthor_LAST_NAME()));
  A author2=newAuthor(3);
  author2.setValue(TAuthor_FIRST_NAME(),"A3");
  author2.setValue(TAuthor_LAST_NAME(),"B3");
  try {
    author2.store(TAuthor_FIRST_NAME());
    fail();
  }
 catch (  DataAccessException expected) {
    assertTrue(author2.changed());
    assertTrue(author2.changed(TAuthor_ID()));
    assertTrue(author2.changed(TAuthor_FIRST_NAME()));
    assertTrue(author2.changed(TAuthor_LAST_NAME()));
    assertNull(create().fetchOne(TAuthor(),TAuthor_ID().eq(3)));
  }
  assertEquals(1,author2.store(TAuthor_ID(),TAuthor_LAST_NAME()));
  assertTrue(author2.changed());
  assertFalse(author2.changed(TAuthor_ID()));
  assertTrue(author2.changed(TAuthor_FIRST_NAME()));
  assertFalse(author2.changed(TAuthor_LAST_NAME()));
  author2.refresh();
  assertEquals(3,(int)author2.getValue(TAuthor_ID()));
  assertNull(author2.getValue(TAuthor_FIRST_NAME()));
  assertEquals("B3",author2.getValue(TAuthor_LAST_NAME()));
}
