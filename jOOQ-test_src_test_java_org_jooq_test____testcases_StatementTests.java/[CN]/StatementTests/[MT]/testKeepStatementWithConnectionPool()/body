{
  CountingDataSource ds1=new CountingDataSource(getConnection());
  ConnectionProviderProxy p1=new ConnectionProviderProxy(new DataSourceConnectionProvider(ds1));
  Configuration c1=create().configuration().derive(p1);
  for (int i=0; i < 5; i++) {
    ResultQuery<Record1<Integer>> query=DSL.using(c1).select(TBook_ID()).from(TBook()).where(TBook_ID().eq(param("p",0)));
    assertEquals(i * 2,p1.acquire);
    assertEquals(i * 2,p1.release);
    assertEquals(i * 2,ds1.open);
    assertEquals(i * 2,ds1.close);
    query.bind("p",1);
    assertEquals(1,(int)query.fetchOne().getValue(TBook_ID()));
    assertEquals(i * 2 + 1,p1.acquire);
    assertEquals(i * 2 + 1,p1.release);
    assertEquals(i * 2 + 1,ds1.open);
    assertEquals(i * 2 + 1,ds1.close);
    query.bind("p",2);
    assertEquals(2,(int)query.fetchOne().getValue(TBook_ID()));
    assertEquals(i * 2 + 2,p1.acquire);
    assertEquals(i * 2 + 2,p1.release);
    assertEquals(i * 2 + 2,ds1.open);
    assertEquals(i * 2 + 2,ds1.close);
    query.close();
    assertEquals(i * 2 + 2,p1.acquire);
    assertEquals(i * 2 + 2,p1.release);
    assertEquals(i * 2 + 2,ds1.open);
    assertEquals(i * 2 + 2,ds1.close);
  }
  assertEquals(10,ds1.open);
  assertEquals(10,ds1.close);
  CountingDataSource ds2=new CountingDataSource(getConnection());
  ConnectionProviderProxy p2=new ConnectionProviderProxy(new DataSourceConnectionProvider(ds2));
  Configuration c2=create().configuration().derive(p2);
  for (int i=0; i < 5; i++) {
    ResultQuery<Record1<Integer>> query=DSL.using(c2).select(TBook_ID()).from(TBook()).where(TBook_ID().eq(param("p",0))).keepStatement(true);
    assertEquals(i,p2.acquire);
    assertEquals(i,p2.release);
    assertEquals(i,ds2.open);
    assertEquals(i,ds2.close);
    query.bind("p",1);
    assertEquals(1,(int)query.fetchOne().getValue(TBook_ID()));
    assertEquals(i + 1,p2.acquire);
    assertEquals(i,p2.release);
    assertEquals(i + 1,ds2.open);
    assertEquals(i,ds2.close);
    query.bind("p",2);
    assertEquals(2,(int)query.fetchOne().getValue(TBook_ID()));
    assertEquals(i + 1,p2.acquire);
    assertEquals(i,p2.release);
    assertEquals(i + 1,ds2.open);
    assertEquals(i,ds2.close);
    query.close();
    assertEquals(i + 1,p2.acquire);
    assertEquals(i + 1,p2.release);
    assertEquals(i + 1,ds2.open);
    assertEquals(i + 1,ds2.close);
  }
  assertEquals(5,ds2.open);
  assertEquals(5,ds2.close);
}
