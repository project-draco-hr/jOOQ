{
switch (getDialect()) {
case ASE:
case CUBRID:
case INGRES:
case POSTGRES:
    log.info("SKIPPING","fetchInto() tests");
  return;
}
Select<?> select=create().select(TBook_ID(),TBook_TITLE(),TAuthor_FIRST_NAME(),TAuthor_LAST_NAME(),TAuthor_DATE_OF_BIRTH()).from(TBook()).join(TAuthor()).on(TBook_AUTHOR_ID().equal(TAuthor_ID())).orderBy(TBook_ID());
List<BookWithoutAnnotations> result1=select.fetchInto(BookWithoutAnnotations.class);
List<IBookWithoutAnnotations> result2=select.fetchInto(IBookWithoutAnnotations.class);
assertEquals(4,result1.size());
assertEquals(4,result2.size());
assertEquals(1,(int)result1.get(0).id);
assertEquals(2,(int)result1.get(1).id);
assertEquals(3,(int)result1.get(2).id);
assertEquals(4,(int)result1.get(3).id);
assertEquals(1,result1.get(0).id2);
assertEquals(2,result1.get(1).id2);
assertEquals(3,result1.get(2).id2);
assertEquals(4,result1.get(3).id2);
assertEquals(1,result1.get(0).ID);
assertEquals(2,result1.get(1).ID);
assertEquals(3,result1.get(2).ID);
assertEquals(4,result1.get(3).ID);
assertEquals(1,(int)result2.get(0).getId());
assertEquals(2,(int)result2.get(1).getId());
assertEquals(3,(int)result2.get(2).getId());
assertEquals(4,(int)result2.get(3).getId());
assertEquals("1984",result1.get(0).title);
assertEquals("Animal Farm",result1.get(1).title);
assertEquals("O Alquimista",result1.get(2).title);
assertEquals("Brida",result1.get(3).title);
assertEquals("George",result1.get(0).firstName);
assertEquals("George",result1.get(1).firstName);
assertEquals("Paulo",result1.get(2).firstName);
assertEquals("Paulo",result1.get(3).firstName);
assertEquals("George",result1.get(0).firstName2);
assertEquals("George",result1.get(1).firstName2);
assertEquals("Paulo",result1.get(2).firstName2);
assertEquals("Paulo",result1.get(3).firstName2);
assertEquals("Orwell",result1.get(0).lastName);
assertEquals("Orwell",result1.get(1).lastName);
assertEquals("Coelho",result1.get(2).lastName);
assertEquals("Coelho",result1.get(3).lastName);
assertEquals("Orwell",result1.get(0).lastName2);
assertEquals("Orwell",result1.get(1).lastName2);
assertEquals("Coelho",result1.get(2).lastName2);
assertEquals("Coelho",result1.get(3).lastName2);
assertEquals("Orwell",result1.get(0).LAST_NAME);
assertEquals("Orwell",result1.get(1).LAST_NAME);
assertEquals("Coelho",result1.get(2).LAST_NAME);
assertEquals("Coelho",result1.get(3).LAST_NAME);
assertEquals("Orwell",result2.get(0).getLAST_NAME());
assertEquals("Orwell",result2.get(1).getLAST_NAME());
assertEquals("Coelho",result2.get(2).getLAST_NAME());
assertEquals("Coelho",result2.get(3).getLAST_NAME());
}
