{
  B book=create().selectFrom(TBook()).where(TBook_ID().equal(1)).fetchOne();
  Object[] bookArray=create().selectFrom(TBook()).where(TBook_ID().equal(1)).fetchOneArray();
  for (int i=0; i < TBook().getFields().size(); i++) {
    assertEquals(book.getValue(i),bookArray[i]);
  }
  Result<B> books=create().selectFrom(TBook()).orderBy(TBook_ID()).fetch();
  Object[][] booksArray=create().selectFrom(TBook()).orderBy(TBook_ID()).fetchArrays();
  for (int j=0; j < books.size(); j++) {
    for (int i=0; i < TBook().getFields().size(); i++) {
      assertEquals(books.getValue(j,i),booksArray[j][i]);
      assertEquals(books.getValue(j,i),books.intoArray()[j][i]);
      assertEquals(books.get(j).getValue(i),books.get(j).intoArray()[i]);
    }
  }
  String[] array1=create().selectFrom(TBook()).orderBy(TBook_ID()).fetchArray(TBook_TITLE());
  assertEquals(create().selectFrom(TBook()).orderBy(TBook_ID()).fetch(TBook_TITLE()),Arrays.asList(array1));
  Object[] array2=create().selectFrom(TBook()).orderBy(TBook_ID()).fetchArray(1);
  assertEquals(create().selectFrom(TBook()).orderBy(TBook_ID()).fetch(1),Arrays.asList(array2));
  assertTrue(array2 instanceof Integer[]);
  Object[] array3=create().selectFrom(TBook()).orderBy(TBook_ID()).fetchArray(TBook_ID().getName());
  assertEquals(create().selectFrom(TBook()).orderBy(TBook_ID()).fetch(TBook_ID().getName()),Arrays.asList(array3));
  assertTrue(array3 instanceof Integer[]);
}
