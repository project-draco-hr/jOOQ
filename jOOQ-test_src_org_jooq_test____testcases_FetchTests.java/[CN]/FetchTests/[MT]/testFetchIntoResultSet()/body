{
  Result<B> result=create().selectFrom(TBook()).orderBy(TBook_ID()).fetch();
  Result<Record> result1=create().fetch(result.intoResultSet());
  Result<Record> result2=create().fetch(result1.intoResultSet());
  assertEquals(result,result1);
  assertEquals(result,result2);
  ResultSet rs=result.intoResultSet();
  check0(rs);
  assertTrue(rs.next());
  check1(rs);
  assertFalse(rs.previous());
  check0(rs);
  assertFalse(rs.absolute(0));
  check0(rs);
  assertTrue(rs.relative(1));
  check1(rs);
  assertFalse(rs.relative(-1));
  check0(rs);
  assertTrue(rs.absolute(-4));
  check1(rs);
  assertFalse(rs.absolute(-5));
  check0(rs);
  assertTrue(rs.absolute(1));
  check1(rs);
  rs.beforeFirst();
  check0(rs);
  assertTrue(rs.last());
  check4(rs);
  rs.afterLast();
  check5(rs);
  assertTrue(rs.previous());
  check4(rs);
  assertFalse(rs.relative(1));
  check5(rs);
  ResultSetMetaData meta=rs.getMetaData();
  assertEquals(result.getFields().size(),meta.getColumnCount());
  assertEquals(Integer.class.getName(),meta.getColumnClassName(1));
  assertEquals(Types.INTEGER,meta.getColumnType(1));
  assertEquals("integer",meta.getColumnTypeName(1));
  assertEquals(TBook_ID().getName(),meta.getColumnLabel(1));
  assertEquals(TBook_ID().getName(),meta.getColumnName(1));
  assertEquals("",meta.getCatalogName(1));
  if (schema() != null)   assertEquals(schema().getName(),meta.getSchemaName(1));
  assertEquals(TBook().getName(),meta.getTableName(1));
}
