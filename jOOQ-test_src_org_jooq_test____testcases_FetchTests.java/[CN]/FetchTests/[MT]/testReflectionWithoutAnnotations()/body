{
switch (getDialect()) {
case ASE:
case INGRES:
case POSTGRES:
    log.info("SKIPPING","fetchInto() tests");
  return;
}
assertEquals(create().newRecord(TBook()),create().newRecord(TBook(),(Object)null));
assertEquals(create().newRecord(TBook()),create().newRecord(TBook(),new Object()));
assertEquals(create().newRecord(TBook()),create().newRecord(TBook(),new StaticWithoutAnnotations()));
create().newRecord(TBook()).into(StaticWithoutAnnotations.class);
assertEquals(13,StaticWithoutAnnotations.ID);
B book=create().newRecord(TBook());
book.setValue(TBook_ID(),new FinalWithoutAnnotations().ID);
assertEquals(book,create().newRecord(TBook(),new FinalWithoutAnnotations()));
FinalWithoutAnnotations f=create().newRecord(TBook()).into(FinalWithoutAnnotations.class);
assertEquals(f.ID,new FinalWithoutAnnotations().ID);
}
