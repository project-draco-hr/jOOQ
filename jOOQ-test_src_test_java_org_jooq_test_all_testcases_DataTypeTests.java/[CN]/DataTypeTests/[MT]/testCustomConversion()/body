{
  Converter<String,StringBuilder> converter=new Converter<String,StringBuilder>(){
    @Override public StringBuilder from(    String databaseObject){
      return new StringBuilder("prefix_" + databaseObject);
    }
    @Override public String to(    StringBuilder userObject){
      return userObject.toString().replace("prefix_","");
    }
    @Override public Class<String> fromType(){
      return String.class;
    }
    @Override public Class<StringBuilder> toType(){
      return StringBuilder.class;
    }
  }
;
  List<StringBuilder> prefixed=asList(new StringBuilder("prefix_1984"),new StringBuilder("prefix_Animal Farm"),new StringBuilder("prefix_O Alquimista"),new StringBuilder("prefix_Brida"));
  Result<Record1<String>> result=create().select(TBook_TITLE()).from(TBook()).orderBy(TBook_ID()).fetch();
  assertEquals(strings(prefixed),strings(result.getValues(TBook_TITLE(),converter)));
  assertEquals(strings(prefixed),strings(result.getValues(TBook_TITLE().getName(),converter)));
  assertEquals(strings(prefixed),strings(result.getValues(0,converter)));
  for (int i=0; i < 4; i++) {
    assertEquals(strings(prefixed.subList(i,i + 1)),strings(asList(result.get(i).getValue(TBook_TITLE(),converter))));
    assertEquals(strings(prefixed.subList(i,i + 1)),strings(asList(result.get(i).getValue(TBook_TITLE().getName(),converter))));
    assertEquals(strings(prefixed.subList(i,i + 1)),strings(asList(result.get(i).getValue(0,converter))));
  }
  assertEquals(strings(prefixed),strings(create().select(TBook_TITLE()).from(TBook()).orderBy(TBook_ID()).fetch(TBook_TITLE(),converter)));
  assertEquals(strings(prefixed),strings(create().select(TBook_TITLE()).from(TBook()).orderBy(TBook_ID()).fetch(TBook_TITLE().getName(),converter)));
  assertEquals(strings(prefixed),strings(create().select(TBook_TITLE()).from(TBook()).orderBy(TBook_ID()).fetch(0,converter)));
  for (int i=0; i < 4; i++) {
    assertEquals(strings(prefixed.subList(i,i + 1)),strings(asList(create().select(TBook_TITLE()).from(TBook()).where(TBook_ID().equal(i + 1)).fetchOne(TBook_TITLE(),converter))));
  }
  StringBuilder[] array=create().select(TBook_TITLE()).from(TBook()).orderBy(TBook_ID()).fetchArray(TBook_TITLE(),converter);
  assertEquals(strings(prefixed),strings(asList(array)));
}
