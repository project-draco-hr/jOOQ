{
switch (dialect().family()) {
case MARIADB:
case MYSQL:
    log.info("SKIPPING","Common Table Expression tests");
  return;
}
Result<Record> result1=create().with("t","f1","f2").as(select(val(1),val("a"))).select().from(tableByName("t")).fetch();
assertEquals(1,result1.size());
assertEquals(2,result1.fields().length);
assertEquals("f1",result1.field(0).getName());
assertEquals("f2",result1.field(1).getName());
assertEquals(Integer.class,result1.field(0).getType());
assertEquals(String.class,result1.field(1).getType());
assertEquals(1,result1.getValue(0,0));
assertEquals("a",result1.getValue(0,1));
CommonTableExpression<Record2<Integer,String>> t1=name("t1").fields("f1","f2").as(select(val(1),val("a")));
CommonTableExpression<Record2<Integer,String>> t2=name("t2").fields("f3","f4").as(select(val(2),val("b")));
Result<?> result2=create().with(t1).with(t2).select(t1.field("f1").add(t2.field("f3")).as("add"),t1.field("f2").concat(t2.field("f4")).as("concat")).from(t1,t2).fetch();
assertEquals(1,result2.size());
assertEquals(2,result2.fields().length);
assertEquals("add",result2.field(0).getName());
assertEquals("concat",result2.field(1).getName());
assertEquals(Integer.class,result2.field(0).getType());
assertEquals(String.class,result2.field(1).getType());
assertEquals(3,result2.getValue(0,0));
assertEquals("ab",result2.getValue(0,1));
assertEquals(result2,create().with(t1,t2).select(t1.field("f1").add(t2.field("f3")).as("add"),t1.field("f2").concat(t2.field("f4")).as("concat")).from(t1,t2).fetch());
Table<Record2<Integer,String>> a1=t1.as("a1");
Table<Record2<Integer,String>> a2=t2.as("a2");
Result<?> result3=create().with(t1).with(t2).select(a1.field("f1").add(a2.field("f3")).as("add"),a1.field("f2").concat(a2.field("f4")).as("concat")).from(a1,a2).fetch();
assertEquals(1,result3.size());
assertEquals(2,result3.fields().length);
assertEquals("add",result3.field(0).getName());
assertEquals("concat",result3.field(1).getName());
assertEquals(Integer.class,result3.field(0).getType());
assertEquals(String.class,result3.field(1).getType());
assertEquals(3,result3.getValue(0,0));
assertEquals("ab",result3.getValue(0,1));
}
