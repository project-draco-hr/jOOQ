{
switch (configuration.family()) {
case DERBY:
{
      if (decimals == 0) {
        return DSL.when(argument.sub(DSL.floor(argument)).lessThan((T)Double.valueOf(0.5)),DSL.floor(argument)).otherwise(DSL.ceil(argument));
      }
 else {
        Field<BigDecimal> factor=DSL.val(BigDecimal.ONE.movePointRight(decimals));
        Field<T> mul=argument.mul(factor);
        return DSL.when(mul.sub(DSL.floor(mul)).lessThan((T)Double.valueOf(0.5)),DSL.floor(mul).div(factor)).otherwise(DSL.ceil(mul).div(factor));
      }
    }
case POSTGRES:
{
    if (decimals == 0) {
      return function("round",getDataType(),argument);
    }
 else {
      return function("round",getDataType(),argument.cast(BigDecimal.class),val(decimals));
    }
  }
default :
{
  if (decimals == 0) {
    return function("round",getDataType(),argument);
  }
 else {
    return function("round",getDataType(),argument,val(decimals));
  }
}
}
}
