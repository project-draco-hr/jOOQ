{
switch (configuration.getDialect()) {
case DERBY:
{
      if (decimals == 0) {
        return Factory.decode().when(argument.sub((Field<? extends Number>)argument.floor()).lessThan((T)Double.valueOf(0.5)),argument.floor()).otherwise(argument.ceil());
      }
 else {
        Field<BigDecimal> factor=Factory.val(BigDecimal.ONE.movePointRight(decimals));
        Field<T> mul=argument.mul(factor);
        return Factory.decode().when(mul.sub((Field<? extends Number>)mul.floor()).lessThan((T)Double.valueOf(0.5)),mul.floor().div(factor)).otherwise(mul.ceil().div(factor));
      }
    }
case ASE:
case INGRES:
case SQLSERVER:
case SYBASE:
{
    return function("round",getDataType(),argument,val(decimals));
  }
case POSTGRES:
{
  if (decimals == 0) {
    return function("round",getDataType(),argument);
  }
 else {
    return function("round",getDataType(),argument.cast(BigDecimal.class),val(decimals));
  }
}
default :
{
if (decimals == 0) {
  return function("round",getDataType(),argument);
}
 else {
  return function("round",getDataType(),argument,val(decimals));
}
}
}
}
