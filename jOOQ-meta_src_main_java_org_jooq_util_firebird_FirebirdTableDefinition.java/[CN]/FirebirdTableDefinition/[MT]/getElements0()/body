{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  Rdb$relationFields r=RDB$RELATION_FIELDS.as("r");
  Rdb$fields f=RDB$FIELDS.as("f");
  Rdb$characterSets c=RDB$CHARACTER_SETS.as("c");
  for (  Record record : create().select(r.RDB$FIELD_NAME.trim(),r.RDB$DESCRIPTION,r.RDB$DEFAULT_VALUE,r.RDB$NULL_FLAG,r.RDB$FIELD_POSITION,f.RDB$FIELD_LENGTH,f.RDB$FIELD_PRECISION,f.RDB$FIELD_SCALE,decode().value(f.RDB$FIELD_TYPE).when((short)261,"BLOB").when((short)14,"CHAR").when((short)40,"CSTRING").when((short)11,"D_FLOAT").when((short)27,"DOUBLE").when((short)10,"FLOAT").when((short)16,"INT64").when((short)8,"INTEGER").when((short)9,"QUAD").when((short)7,"SMALLINT").when((short)12,"DATE").when((short)13,"TIME").when((short)35,"TIMESTAMP").when((short)37,"VARCHAR").otherwise("UNKNOWN").as("FIELD_TYPE"),f.RDB$FIELD_SUB_TYPE,c.RDB$CHARACTER_SET_NAME).from(r).leftOuterJoin(f).on(r.RDB$FIELD_SOURCE.equal(f.RDB$FIELD_NAME)).leftOuterJoin(c).on(f.RDB$CHARACTER_SET_ID.equal(c.RDB$CHARACTER_SET_ID)).where(r.RDB$RELATION_NAME.equal(getName())).orderBy(r.RDB$FIELD_POSITION).fetch()) {
    DefaultDataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),getSchema(),record.getValueAsString("FIELD_TYPE"),record.getValue(f.RDB$FIELD_PRECISION),record.getValue(f.RDB$FIELD_PRECISION),record.getValue(f.RDB$FIELD_SCALE));
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getSchema(),getName()),record.getValue(r.RDB$FIELD_NAME.trim()),record.getValue(r.RDB$FIELD_POSITION),type,record.getValue(r.RDB$NULL_FLAG,(short)0) == 0,false,null);
    result.add(column);
  }
  return result;
}
