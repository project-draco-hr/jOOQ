{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  Rdb$relationFields r=RDB$RELATION_FIELDS.as("r");
  Rdb$fields f=RDB$FIELDS.as("f");
  for (  Record record : create().select(r.RDB$FIELD_NAME.trim(),r.RDB$DESCRIPTION,r.RDB$DEFAULT_VALUE,DSL.bitOr(r.RDB$NULL_FLAG.nvl((short)0),f.RDB$NULL_FLAG.nvl((short)0)).as(r.RDB$NULL_FLAG),r.RDB$DEFAULT_SOURCE,r.RDB$FIELD_POSITION,CHARACTER_LENGTH(f).as("CHARACTER_LENGTH"),f.RDB$FIELD_PRECISION,FIELD_SCALE(f).as("FIELD_SCALE"),FIELD_TYPE(f).as("FIELD_TYPE"),f.RDB$FIELD_SUB_TYPE).from(r).leftOuterJoin(f).on(r.RDB$FIELD_SOURCE.eq(f.RDB$FIELD_NAME)).where(r.RDB$RELATION_NAME.eq(getName())).orderBy(r.RDB$FIELD_POSITION).fetch()) {
    DefaultDataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),getSchema(),record.get("FIELD_TYPE",String.class),record.get("CHARACTER_LENGTH",short.class),record.get(f.RDB$FIELD_PRECISION),record.get("FIELD_SCALE",Integer.class),record.get(r.RDB$NULL_FLAG) == 0,record.get(r.RDB$DEFAULT_SOURCE));
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getSchema(),getName()),record.get(r.RDB$FIELD_NAME.trim()),record.get(r.RDB$FIELD_POSITION),type,false,null);
    result.add(column);
  }
  return result;
}
