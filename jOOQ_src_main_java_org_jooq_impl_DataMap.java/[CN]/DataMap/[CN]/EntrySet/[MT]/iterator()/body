{
  return new Iterator<Entry<Object,Object>>(){
    final Iterator<Entry<Object,Object>> internalIterator=internal().entrySet().iterator();
    final Iterator<Entry<Object,Object>> externalIterator=external(false).entrySet().iterator();
    @Override public final boolean hasNext(){
      return internalIterator.hasNext() || externalIterator.hasNext();
    }
    @Override public final Entry<Object,Object> next(){
      return internalIterator.hasNext() ? internalIterator.next() : externalIterator.next();
    }
    @Override public final void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
