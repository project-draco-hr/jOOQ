{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  for (  Record record : create().select(Columns.ORDINAL_POSITION,Columns.COLUMN_NAME,Columns.COLUMN_COMMENT,Columns.COLUMN_TYPE,Columns.DATA_TYPE,Columns.IS_NULLABLE,Columns.COLUMN_DEFAULT,Columns.CHARACTER_MAXIMUM_LENGTH,Columns.NUMERIC_PRECISION,Columns.NUMERIC_SCALE,Columns.EXTRA).from(COLUMNS).where(TABLE_SCHEMA.equal(getSchema().getName())).and(TABLE_NAME.equal(getName())).orderBy(ORDINAL_POSITION)) {
    String dataType=record.get(Columns.DATA_TYPE);
    if (getDatabase().supportsUnsignedTypes()) {
      if (asList("tinyint","smallint","mediumint","int","bigint").contains(dataType.toLowerCase())) {
        if (record.get(Columns.COLUMN_TYPE).toLowerCase().contains("unsigned")) {
          dataType+="unsigned";
        }
      }
    }
    DataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),getSchema(),dataType,record.get(Columns.CHARACTER_MAXIMUM_LENGTH),record.get(Columns.NUMERIC_PRECISION),record.get(Columns.NUMERIC_SCALE),record.get(Columns.IS_NULLABLE,boolean.class),record.get(Columns.COLUMN_DEFAULT),getName() + "_" + record.get(Columns.COLUMN_NAME));
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getSchema(),getName()),record.get(Columns.COLUMN_NAME),record.get(Columns.ORDINAL_POSITION,int.class),type,"auto_increment".equalsIgnoreCase(record.get(Columns.EXTRA)),record.get(Columns.COLUMN_COMMENT));
    result.add(column);
  }
  return result;
}
