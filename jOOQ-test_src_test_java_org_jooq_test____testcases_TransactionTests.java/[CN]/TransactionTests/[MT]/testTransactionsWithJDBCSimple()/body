{
  DSLContext create=create();
  TransactionalConnectionProvider provider=new TransactionalConnectionProvider(create.configuration().connectionProvider());
  create.configuration().set(provider);
  try {
    create.transaction(new Transactional<Integer>(){
      @Override public Integer run(      Configuration configuration){
        assertAutoCommit(configuration.connectionProvider(),false);
        assertEquals(1,DSL.using(configuration).insertInto(TAuthor(),TAuthor_ID(),TAuthor_LAST_NAME()).values(3,"Koontz").execute());
        throw new MyRuntimeException("No");
      }
    }
);
    fail();
  }
 catch (  MyRuntimeException expected) {
    assertEquals(1,provider.acquire.get());
    assertEquals(1,provider.release.get());
    assertEquals("No",expected.getMessage());
    assertEquals(2,create.fetchCount(TAuthor()));
    assertAutoCommit(create.configuration().connectionProvider(),true);
  }
  assertEquals(2,create.fetchCount(TAuthor()));
}
