{
  try {
    create().transaction(new Transactional<Integer>(){
      @Override public Integer run(      Configuration configuration) throws MyCheckedException {
        assertAutoCommit(configuration.connectionProvider(),false);
        assertEquals(1,DSL.using(configuration).insertInto(TAuthor(),TAuthor_ID(),TAuthor_LAST_NAME()).values(3,"Koontz").execute());
        throw new MyCheckedException("No");
      }
    }
);
    fail();
  }
 catch (  DataAccessException expected) {
    assertEquals(MyCheckedException.class,expected.getCause().getClass());
    assertEquals("No",expected.getCause().getMessage());
    assertEquals(2,create().fetchCount(TAuthor()));
    assertAutoCommit(create().configuration().connectionProvider(),true);
  }
  assertEquals(2,create().fetchCount(TAuthor()));
}
