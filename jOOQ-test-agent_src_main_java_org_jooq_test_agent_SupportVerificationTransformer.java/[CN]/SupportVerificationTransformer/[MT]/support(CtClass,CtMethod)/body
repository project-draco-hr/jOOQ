{
  try {
    String methodName=method.getName();
    CtClass[] methodParams=method.getParameterTypes();
    if (method.hasAnnotation(Support.class))     return (Support)method.getAnnotation(Support.class);
    Set<CtClass> set=new LinkedHashSet<CtClass>();
    set.add(clazz);
    while (true) {
      int before=set.size();
      for (      CtClass c : new ArrayList<CtClass>(set)) {
        set.addAll(Arrays.asList(c.getInterfaces()));
        if (c.getSuperclass() != null)         set.add(c.getSuperclass());
      }
      if (set.size() == before)       break;
    }
    for (    CtClass c : set) {
      try {
        CtMethod m=c.getDeclaredMethod(methodName,methodParams);
        if (m.hasAnnotation(Support.class))         return (Support)m.getAnnotation(Support.class);
      }
 catch (      Exception ignore) {
      }
    }
  }
 catch (  Exception ignore) {
  }
  return null;
}
