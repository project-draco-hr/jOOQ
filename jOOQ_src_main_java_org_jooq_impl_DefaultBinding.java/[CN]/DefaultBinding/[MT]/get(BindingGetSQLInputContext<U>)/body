{
  T result=null;
  if (type == Blob.class) {
    result=(T)ctx.input().readBlob();
  }
 else   if (type == Boolean.class) {
    result=(T)wasNull(ctx.input(),Boolean.valueOf(ctx.input().readBoolean()));
  }
 else   if (type == BigInteger.class) {
    BigDecimal d=ctx.input().readBigDecimal();
    result=(T)(d == null ? null : d.toBigInteger());
  }
 else   if (type == BigDecimal.class) {
    result=(T)ctx.input().readBigDecimal();
  }
 else   if (type == Byte.class) {
    result=(T)wasNull(ctx.input(),Byte.valueOf(ctx.input().readByte()));
  }
 else   if (type == byte[].class) {
    if (isLob) {
      Blob blob=null;
      try {
        blob=ctx.input().readBlob();
        result=(T)(blob == null ? null : blob.getBytes(1,(int)blob.length()));
      }
  finally {
        safeFree(blob);
      }
    }
 else {
      result=(T)ctx.input().readBytes();
    }
  }
 else   if (type == Clob.class) {
    result=(T)ctx.input().readClob();
  }
 else   if (type == Date.class) {
    result=(T)ctx.input().readDate();
  }
 else   if (type == Double.class) {
    result=(T)wasNull(ctx.input(),Double.valueOf(ctx.input().readDouble()));
  }
 else   if (type == Float.class) {
    result=(T)wasNull(ctx.input(),Float.valueOf(ctx.input().readFloat()));
  }
 else   if (type == Integer.class) {
    result=(T)wasNull(ctx.input(),Integer.valueOf(ctx.input().readInt()));
  }
 else   if (type == Long.class) {
    result=(T)wasNull(ctx.input(),Long.valueOf(ctx.input().readLong()));
  }
 else   if (type == Short.class) {
    result=(T)wasNull(ctx.input(),Short.valueOf(ctx.input().readShort()));
  }
 else   if (type == String.class) {
    result=(T)ctx.input().readString();
  }
 else   if (type == Time.class) {
    result=(T)ctx.input().readTime();
  }
 else   if (type == Timestamp.class) {
    result=(T)ctx.input().readTimestamp();
  }
 else   if (type == YearToMonth.class) {
    String string=ctx.input().readString();
    result=(T)(string == null ? null : YearToMonth.valueOf(string));
  }
 else   if (type == DayToSecond.class) {
    String string=ctx.input().readString();
    result=(T)(string == null ? null : DayToSecond.valueOf(string));
  }
 else   if (type == UByte.class) {
    String string=ctx.input().readString();
    result=(T)(string == null ? null : UByte.valueOf(string));
  }
 else   if (type == UShort.class) {
    String string=ctx.input().readString();
    result=(T)(string == null ? null : UShort.valueOf(string));
  }
 else   if (type == UInteger.class) {
    String string=ctx.input().readString();
    result=(T)(string == null ? null : UInteger.valueOf(string));
  }
 else   if (type == ULong.class) {
    String string=ctx.input().readString();
    result=(T)(string == null ? null : ULong.valueOf(string));
  }
 else   if (type == UUID.class) {
    result=(T)Convert.convert(ctx.input().readString(),UUID.class);
  }
 else   if (type.isArray()) {
    Array array=ctx.input().readArray();
    result=(T)(array == null ? null : array.getArray());
  }
 else   if (EnumType.class.isAssignableFrom(type)) {
    result=(T)getEnumType((Class<EnumType>)type,ctx.input().readString());
  }
 else   if (UDTRecord.class.isAssignableFrom(type)) {
    result=(T)ctx.input().readObject();
  }
 else {
    result=(T)unlob(ctx.input().readObject());
  }
  ctx.value(converter.from(result));
}
