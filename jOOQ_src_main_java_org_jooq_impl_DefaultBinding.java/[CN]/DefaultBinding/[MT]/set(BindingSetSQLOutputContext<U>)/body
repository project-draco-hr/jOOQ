{
  T value=converter.to(ctx.value());
  if (value == null) {
    ctx.output().writeObject(null);
  }
 else   if (type == Blob.class) {
    ctx.output().writeBlob((Blob)value);
  }
 else   if (type == Boolean.class) {
    ctx.output().writeBoolean((Boolean)value);
  }
 else   if (type == BigInteger.class) {
    ctx.output().writeBigDecimal(new BigDecimal((BigInteger)value));
  }
 else   if (type == BigDecimal.class) {
    ctx.output().writeBigDecimal((BigDecimal)value);
  }
 else   if (type == Byte.class) {
    ctx.output().writeByte((Byte)value);
  }
 else   if (type == byte[].class) {
    if (isLob) {
      Blob blob=null;
      try {
        blob=on("oracle.sql.BLOB").call("createTemporary",on(ctx.output()).call("getSTRUCT").call("getJavaSqlConnection").get(),false,on("oracle.sql.BLOB").get("DURATION_SESSION")).get();
        blob.setBytes(1,(byte[])value);
        ctx.output().writeBlob(blob);
      }
  finally {
        DefaultExecuteContext.register(blob);
      }
    }
 else {
      ctx.output().writeBytes((byte[])value);
    }
  }
 else   if (type == Clob.class) {
    ctx.output().writeClob((Clob)value);
  }
 else   if (type == Date.class) {
    ctx.output().writeDate((Date)value);
  }
 else   if (type == Double.class) {
    ctx.output().writeDouble((Double)value);
  }
 else   if (type == Float.class) {
    ctx.output().writeFloat((Float)value);
  }
 else   if (type == Integer.class) {
    ctx.output().writeInt((Integer)value);
  }
 else   if (type == Long.class) {
    ctx.output().writeLong((Long)value);
  }
 else   if (type == Short.class) {
    ctx.output().writeShort((Short)value);
  }
 else   if (type == String.class) {
    if (isLob) {
      Clob clob=null;
      try {
        clob=on("oracle.sql.CLOB").call("createTemporary",on(ctx.output()).call("getSTRUCT").call("getJavaSqlConnection").get(),false,on("oracle.sql.CLOB").get("DURATION_SESSION")).get();
        clob.setString(1,(String)value);
        ctx.output().writeClob(clob);
      }
  finally {
        DefaultExecuteContext.register(clob);
      }
    }
 else {
      ctx.output().writeString((String)value);
    }
  }
 else   if (type == Time.class) {
    ctx.output().writeTime((Time)value);
  }
 else   if (type == Timestamp.class) {
    ctx.output().writeTimestamp((Timestamp)value);
  }
 else   if (type == YearToMonth.class) {
    ctx.output().writeString(value.toString());
  }
 else   if (type == DayToSecond.class) {
    ctx.output().writeString(value.toString());
  }
 else   if (UNumber.class.isAssignableFrom(type)) {
    ctx.output().writeString(value.toString());
  }
 else   if (type == UUID.class) {
    ctx.output().writeString(value.toString());
  }
 else   if (EnumType.class.isAssignableFrom(type)) {
    ctx.output().writeString(((EnumType)value).getLiteral());
  }
 else   if (UDTRecord.class.isAssignableFrom(type)) {
    ctx.output().writeObject((UDTRecord<?>)value);
  }
 else {
    throw new UnsupportedOperationException("Type " + type + " is not supported");
  }
}
