{
  Class<T> type=converter.toType();
  if (string == null) {
    return null;
  }
 else   if (type == Blob.class) {
  }
 else   if (type == Boolean.class) {
    return (T)Convert.convert(string,Boolean.class);
  }
 else   if (type == BigInteger.class) {
    return (T)new BigInteger(string);
  }
 else   if (type == BigDecimal.class) {
    return (T)new BigDecimal(string);
  }
 else   if (type == Byte.class) {
    return (T)Byte.valueOf(string);
  }
 else   if (type == byte[].class) {
    return (T)PostgresUtils.toBytes(string);
  }
 else   if (type == Clob.class) {
  }
 else   if (type == Date.class) {
    return (T)Date.valueOf(string);
  }
 else   if (type == Double.class) {
    return (T)Double.valueOf(string);
  }
 else   if (type == Float.class) {
    return (T)Float.valueOf(string);
  }
 else   if (type == Integer.class) {
    return (T)Integer.valueOf(string);
  }
 else   if (type == Long.class) {
    return (T)Long.valueOf(string);
  }
 else   if (type == Short.class) {
    return (T)Short.valueOf(string);
  }
 else   if (type == String.class) {
    return (T)string;
  }
 else   if (type == Time.class) {
    return (T)Time.valueOf(string);
  }
 else   if (type == Timestamp.class) {
    return (T)Timestamp.valueOf(string);
  }
 else   if (type == UByte.class) {
    return (T)UByte.valueOf(string);
  }
 else   if (type == UShort.class) {
    return (T)UShort.valueOf(string);
  }
 else   if (type == UInteger.class) {
    return (T)UInteger.valueOf(string);
  }
 else   if (type == ULong.class) {
    return (T)ULong.valueOf(string);
  }
 else   if (type == UUID.class) {
    return (T)UUID.fromString(string);
  }
 else   if (type.isArray()) {
    return (T)pgNewArray(type,string);
  }
 else   if (EnumType.class.isAssignableFrom(type)) {
    return (T)getEnumType((Class<EnumType>)type,string);
  }
 else   if (Record.class.isAssignableFrom(type)) {
    return (T)pgNewRecord(type,null,string);
  }
 else   if (type == Object.class) {
    return (T)string;
  }
 else {
    Converter<Object,T> c=(Converter<Object,T>)converter;
    return c.from(pgFromString(c.fromType(),string));
  }
  throw new UnsupportedOperationException("Class " + type + " is not supported");
}
