{
  type=(Class<T>)wrapper(type);
  if (byte[].class != type && type.isArray()) {
    return (DataType<T>)getDataType(dialect,type.getComponentType()).getArrayDataType();
  }
 else {
    DataType<?> result=null;
    if (dialect != null) {
      result=TYPES_BY_TYPE[dialect.family().ordinal()].get(type);
    }
    if (result == null) {
      try {
        if (UDTRecord.class.isAssignableFrom(type)) {
          return (DataType<T>)((UDTRecord<?>)type.newInstance()).getUDT().getDataType();
        }
 else         if (EnumType.class.isAssignableFrom(type)) {
          return (DataType<T>)SQLDataType.VARCHAR.asEnumDataType((Class<EnumType>)type);
        }
      }
 catch (      Exception e) {
        throw new MappingException("Cannot create instance of " + type,e);
      }
    }
    if (result == null) {
      if (SQL_DATATYPES_BY_TYPE.get(type) != null) {
        return (DataType<T>)SQL_DATATYPES_BY_TYPE.get(type);
      }
 else       if (fallbackDataType != null) {
        return fallbackDataType;
      }
 else {
        throw new SQLDialectNotSupportedException("Type " + type + " is not supported in dialect "+ dialect);
      }
    }
    return (DataType<T>)result;
  }
}
