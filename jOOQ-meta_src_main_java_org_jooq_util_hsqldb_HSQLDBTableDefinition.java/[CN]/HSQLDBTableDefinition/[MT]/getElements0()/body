{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  for (  Record record : create().select(Columns.COLUMN_NAME,Columns.ORDINAL_POSITION,nvl(ElementTypes.COLLECTION_TYPE_IDENTIFIER,Columns.DATA_TYPE).as("datatype"),Columns.IDENTITY_GENERATION,Columns.COLUMN_DEFAULT,Columns.NUMERIC_PRECISION,Columns.NUMERIC_SCALE,Columns.UDT_NAME).from(COLUMNS).leftOuterJoin(ELEMENT_TYPES).on(Columns.TABLE_SCHEMA.equal(ElementTypes.OBJECT_SCHEMA)).and(Columns.TABLE_NAME.equal(ElementTypes.OBJECT_NAME)).and(Columns.DTD_IDENTIFIER.equal(ElementTypes.COLLECTION_TYPE_IDENTIFIER)).where(Columns.TABLE_SCHEMA.equal(getSchemaName())).and(Columns.TABLE_NAME.equal(getName())).orderBy(Columns.ORDINAL_POSITION).fetch()) {
    DataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),record.getValueAsString("datatype"),record.getValue(Columns.NUMERIC_PRECISION),record.getValue(Columns.NUMERIC_SCALE),record.getValue(Columns.UDT_NAME));
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getName()),record.getValue(Columns.COLUMN_NAME),record.getValueAsInteger(Columns.ORDINAL_POSITION),type,null != record.getValue(Columns.IDENTITY_GENERATION),null);
    result.add(column);
  }
  return result;
}
