{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  for (  Record record : create().select(COLUMNS.COLUMN_NAME,COLUMNS.ORDINAL_POSITION,nvl(ELEMENT_TYPES.COLLECTION_TYPE_IDENTIFIER,nvl2(COLUMNS.INTERVAL_TYPE,concat(COLUMNS.DATA_TYPE,val(" "),COLUMNS.INTERVAL_TYPE),COLUMNS.DATA_TYPE)).as("datatype"),COLUMNS.IDENTITY_GENERATION,COLUMNS.IS_NULLABLE,COLUMNS.COLUMN_DEFAULT,COLUMNS.CHARACTER_MAXIMUM_LENGTH,COLUMNS.NUMERIC_PRECISION,COLUMNS.NUMERIC_SCALE,COLUMNS.UDT_NAME).from(COLUMNS).leftOuterJoin(ELEMENT_TYPES).on(COLUMNS.TABLE_SCHEMA.equal(ELEMENT_TYPES.OBJECT_SCHEMA)).and(COLUMNS.TABLE_NAME.equal(ELEMENT_TYPES.OBJECT_NAME)).and(COLUMNS.DTD_IDENTIFIER.equal(ELEMENT_TYPES.COLLECTION_TYPE_IDENTIFIER)).where(COLUMNS.TABLE_SCHEMA.equal(getSchema().getName())).and(COLUMNS.TABLE_NAME.equal(getName())).orderBy(COLUMNS.ORDINAL_POSITION).fetch()) {
    DataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),getSchema(),record.get("datatype",String.class),record.get(COLUMNS.CHARACTER_MAXIMUM_LENGTH),record.get(COLUMNS.NUMERIC_PRECISION),record.get(COLUMNS.NUMERIC_SCALE),record.get(COLUMNS.IS_NULLABLE,boolean.class),record.get(COLUMNS.COLUMN_DEFAULT),record.get(COLUMNS.UDT_NAME));
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getSchema(),getName()),record.get(COLUMNS.COLUMN_NAME),record.get(COLUMNS.ORDINAL_POSITION,int.class),type,null != record.get(COLUMNS.IDENTITY_GENERATION),null);
    result.add(column);
  }
  return result;
}
