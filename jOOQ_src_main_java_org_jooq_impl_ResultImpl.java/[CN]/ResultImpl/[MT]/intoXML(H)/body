{
  Attributes empty=new AttributesImpl();
  handler.startDocument();
  handler.startPrefixMapping("","http://www.jooq.org/xsd/jooq-export-3.7.0.xsd");
  handler.startElement("","","result",empty);
  handler.startElement("","","fields",empty);
  for (  Field<?> field : fields.fields) {
    AttributesImpl attrs=new AttributesImpl();
    if (field instanceof TableField<?,?>) {
      Table<?> table=((TableField)field).getTable();
      if (table != null) {
        Schema schema=table.getSchema();
        if (schema != null) {
          attrs.addAttribute("","","schema","CDATA",schema.getName());
        }
        attrs.addAttribute("","","table","CDATA",table.getName());
      }
    }
    attrs.addAttribute("","","name","CDATA",field.getName());
    attrs.addAttribute("","","type","CDATA",field.getDataType().getTypeName().toUpperCase());
    handler.startElement("","","field",attrs);
    handler.endElement("","","field");
  }
  handler.endElement("","","fields");
  handler.startElement("","","records",empty);
  for (  Record record : this) {
    handler.startElement("","","record",empty);
    for (int index=0; index < fields.fields.length; index++) {
      Field<?> field=fields.fields[index];
      Object value=record.getValue(index);
      AttributesImpl attrs=new AttributesImpl();
      attrs.addAttribute("","","field","CDATA",field.getName());
      handler.startElement("","","value",attrs);
      if (value != null) {
        char[] chars=format0(value,false,false).toCharArray();
        handler.characters(chars,0,chars.length);
      }
      handler.endElement("","","value");
    }
    handler.endElement("","","record");
  }
  handler.endElement("","","records");
  handler.endPrefixMapping("");
  handler.endDocument();
  return handler;
}
