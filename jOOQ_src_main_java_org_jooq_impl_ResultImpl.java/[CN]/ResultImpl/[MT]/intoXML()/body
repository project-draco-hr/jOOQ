{
  final int size=getFields().size();
  try {
    DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
    DocumentBuilder builder=factory.newDocumentBuilder();
    Document document=builder.newDocument();
    Element eResult=document.createElement("result");
    eResult.setAttribute("xmlns","http://www.jooq.org/xsd/jooq-export-2.6.0.xsd");
    document.appendChild(eResult);
    Element eFields=document.createElement("fields");
    eResult.appendChild(eFields);
    for (    Field<?> field : getFields()) {
      Element eField=document.createElement("field");
      eField.setAttribute("name",field.getName());
      eField.setAttribute("type",field.getDataType().getTypeName().toUpperCase());
      eFields.appendChild(eField);
    }
    Element eRecords=document.createElement("records");
    eResult.appendChild(eRecords);
    for (    Record record : this) {
      Element eRecord=document.createElement("record");
      eRecords.appendChild(eRecord);
      for (int index=0; index < size; index++) {
        Field<?> field=getField(index);
        Object value=record.getValue(index);
        Element eValue=document.createElement("value");
        eValue.setAttribute("field",field.getName());
        eRecord.appendChild(eValue);
        if (value != null) {
          eValue.setTextContent(format0(value));
        }
      }
    }
    return document;
  }
 catch (  ParserConfigurationException ignore) {
    throw new RuntimeException(ignore);
  }
}
