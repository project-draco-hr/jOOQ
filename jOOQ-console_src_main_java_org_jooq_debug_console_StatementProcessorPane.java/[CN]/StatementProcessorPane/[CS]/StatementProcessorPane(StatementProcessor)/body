{
  super(new GridBagLayout());
  setOpaque(false);
  if (statementProcessor == null) {
    statementProcessor=new StatementProcessor(StatementProcessor.ProcessorExecutionType.STATIC,"");
  }
  processorTypeComboBox=new JComboBox(StatementProcessor.ProcessorExecutionType.values());
  processorTypeComboBox.setSelectedItem(statementProcessor.getType());
  processorTypeComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      adjustStates();
    }
  }
);
  add(processorTypeComboBox,new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));
  boolean isStatic=statementProcessor.getType() == StatementProcessor.ProcessorExecutionType.STATIC;
  processorTextField=new JTextField(isStatic ? "" : statementProcessor.getText(),14);
  add(processorTextField,new GridBagConstraints(1,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,0),0,0));
  SqlTextArea processorStaticSQLTextArea=new SqlTextArea();
  if (isStatic) {
    processorStaticSQLTextArea.setText(statementProcessor.getText());
    processorStaticSQLTextArea.setCaretPosition(0);
  }
  processorStaticScrollPane=new JScrollPane(processorStaticSQLTextArea);
  processorStaticScrollPane.setPreferredSize(new Dimension(100,100));
  add(processorStaticScrollPane,new GridBagConstraints(1,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,0),0,0));
  adjustStates();
}
