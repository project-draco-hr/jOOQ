{
switch (dialect().family()) {
case DERBY:
    log.info("SKIPPING","Tests for bitwise operations");
  return;
}
Field<Integer> bitCount=bitCount(3);
Record result=create().select(bitCount,bitNot(bitNot(3)),bitAnd(3,5),bitOr(3,5),bitXor(3,5),bitNot(bitNand(3,5)),bitNot(bitNor(3,5)),bitNot(bitXNor(3,5)),shl(333,3),shr(333,3)).fetchOne();
int index=0;
assertEquals(2,result.getValue(index++));
assertEquals(~(~3),result.getValue(index++));
assertEquals(3 & 5,result.getValue(index++));
assertEquals(3 | 5,result.getValue(index++));
assertEquals(3 ^ 5,result.getValue(index++));
assertEquals(~(~(3 & 5)),result.getValue(index++));
assertEquals(~(~(3 | 5)),result.getValue(index++));
assertEquals(~(~(3 ^ 5)),result.getValue(index++));
assertEquals(333 << 3,result.getValue(index++));
assertEquals(333 >> 3,result.getValue(index++));
}
