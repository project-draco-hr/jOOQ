{
class VelocityTemplate implements Template {
    private final String file;
    public VelocityTemplate(    String file){
      this.file=file;
    }
    @Override public QueryPart transform(    Object... input){
      URL url=this.getClass().getResource("/org/jooq/test/_/templates/");
      VelocityEngine ve=new VelocityEngine();
      ve.setProperty(RuntimeConstants.RESOURCE_LOADER,"file");
      ve.setProperty(RuntimeConstants.FILE_RESOURCE_LOADER_PATH,new File(url.getFile()).getAbsolutePath());
      ve.setProperty(RuntimeConstants.FILE_RESOURCE_LOADER_CACHE,"true");
      ve.init();
      VelocityContext context=new VelocityContext();
      context.put("p",input);
      StringWriter writer=new StringWriter();
      ve.getTemplate(file,"UTF-8").merge(context,writer);
      return DSL.queryPart(writer.toString(),input);
    }
  }
  create().resultQuery(new VelocityTemplate("authors-and-books.vm"),1,2,3).fetch();
}
