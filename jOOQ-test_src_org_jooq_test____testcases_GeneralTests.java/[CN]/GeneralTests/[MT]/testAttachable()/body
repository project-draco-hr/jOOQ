{
  jOOQAbstractTest.reset=false;
  ContextDSL create=create();
  S store1=create.newRecord(TBookStore());
  assertNotNull(store1);
  store1.setValue(TBookStore_NAME(),"Barnes and Noble");
  assertEquals(1,store1.store());
  S store2=create.newRecord(TBookStore());
  store2.setValue(TBookStore_NAME(),"Barnes and Noble");
  store2.attach(null);
  failStoreRefreshDelete(store2);
  store2.attach(create.configuration());
  store2.refresh();
  assertEquals(1,store2.delete());
  assertNull(create.fetchOne(TBookStore(),TBookStore_NAME().equal("Barnes and Noble")));
  create=create(new Settings().withAttachRecords(false));
  S store3=create.newRecord(TBookStore());
  store3.setValue(TBookStore_NAME(),"Barnes and Noble");
  failStoreRefreshDelete(store3);
  store3.attach(create.configuration());
  assertEquals(1,store3.store());
  S store4=create.newRecord(TBookStore());
  store4.setValue(TBookStore_NAME(),"Barnes and Noble");
  failStoreRefreshDelete(store4);
  store4=create.fetchOne(TBookStore(),TBookStore_NAME().equal("Barnes and Noble"));
  store4.setValue(TBookStore_NAME(),"ABC");
  failStoreRefreshDelete(store4);
  store4=create.fetchOne(TBookStore(),TBookStore_NAME().equal("Barnes and Noble"));
  store4.attach(create.configuration());
  assertEquals(1,store4.delete());
  assertNull(create.fetchOne(TBookStore(),TBookStore_NAME().equal("Barnes and Noble")));
  assertNull(create.fetchOne(TBookStore(),TBookStore_NAME().equal("ABC")));
}
