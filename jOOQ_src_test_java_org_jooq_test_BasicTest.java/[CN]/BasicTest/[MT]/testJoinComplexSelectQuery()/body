{
  SelectQuery<?> q=create.selectQuery();
  q.addFrom(TABLE1);
  q.addJoin(TABLE2,FIELD_ID1.equal(FIELD_ID2),FIELD_ID1.equal(1),FIELD_ID2.in(1,2,3));
  q.addConditions(FIELD_ID1.equal(5));
  assertEquals("select `TABLE1`.`ID1`, `TABLE1`.`NAME1`, `TABLE1`.`DATE1`, `TABLE2`.`ID2`, `TABLE2`.`NAME2`, `TABLE2`.`DATE2` from `TABLE1` join `TABLE2` on (`TABLE1`.`ID1` = `TABLE2`.`ID2` and `TABLE1`.`ID1` = 1 and `TABLE2`.`ID2` in (1, 2, 3)) where `TABLE1`.`ID1` = 5",r_refI().render(q));
  assertEquals("select `TABLE1`.`ID1`, `TABLE1`.`NAME1`, `TABLE1`.`DATE1`, `TABLE2`.`ID2`, `TABLE2`.`NAME2`, `TABLE2`.`DATE2` from `TABLE1` join `TABLE2` on (`TABLE1`.`ID1` = `TABLE2`.`ID2` and `TABLE1`.`ID1` = ? and `TABLE2`.`ID2` in (?, ?, ?)) where `TABLE1`.`ID1` = ?",r_ref().render(q));
  assertEquals(q,create.select().from(TABLE1).join(TABLE2).on(FIELD_ID1.equal(FIELD_ID2).and(FIELD_ID1.equal(1)).and(FIELD_ID2.in(1,2,3))).where(FIELD_ID1.equal(5)));
  assertEquals(q,create.select().from(TABLE1).join(TABLE2).on(FIELD_ID1.equal(FIELD_ID2)).and(FIELD_ID1.equal(1)).and(FIELD_ID2.in(1,2,3)).where(FIELD_ID1.equal(5)));
  q.addJoin(TABLE3,FIELD_ID2.equal(FIELD_ID3));
  assertEquals("select `TABLE1`.`ID1`, `TABLE1`.`NAME1`, `TABLE1`.`DATE1`, `TABLE2`.`ID2`, `TABLE2`.`NAME2`, `TABLE2`.`DATE2`, `TABLE3`.`ID3`, `TABLE3`.`NAME3`, `TABLE3`.`DATE3` from `TABLE1` join `TABLE2` on (`TABLE1`.`ID1` = `TABLE2`.`ID2` and `TABLE1`.`ID1` = 1 and `TABLE2`.`ID2` in (1, 2, 3)) join `TABLE3` on `TABLE2`.`ID2` = `TABLE3`.`ID3` where `TABLE1`.`ID1` = 5",r_refI().render(q));
  assertEquals("select `TABLE1`.`ID1`, `TABLE1`.`NAME1`, `TABLE1`.`DATE1`, `TABLE2`.`ID2`, `TABLE2`.`NAME2`, `TABLE2`.`DATE2`, `TABLE3`.`ID3`, `TABLE3`.`NAME3`, `TABLE3`.`DATE3` from `TABLE1` join `TABLE2` on (`TABLE1`.`ID1` = `TABLE2`.`ID2` and `TABLE1`.`ID1` = ? and `TABLE2`.`ID2` in (?, ?, ?)) join `TABLE3` on `TABLE2`.`ID2` = `TABLE3`.`ID3` where `TABLE1`.`ID1` = ?",r_ref().render(q));
  assertEquals(q,create.select().from(TABLE1).join(TABLE2).on(FIELD_ID1.equal(FIELD_ID2).and(FIELD_ID1.equal(1)).and(FIELD_ID2.in(1,2,3))).join(TABLE3).on(FIELD_ID2.equal(FIELD_ID3)).where(FIELD_ID1.equal(5)));
  context.checking(new Expectations(){
{
      oneOf(statement).setInt(1,1);
      oneOf(statement).setInt(2,1);
      oneOf(statement).setInt(3,2);
      oneOf(statement).setInt(4,3);
      oneOf(statement).setInt(5,5);
    }
  }
);
  int i=b_ref().visit(q).peekIndex();
  assertEquals(6,i);
  context.assertIsSatisfied();
}
