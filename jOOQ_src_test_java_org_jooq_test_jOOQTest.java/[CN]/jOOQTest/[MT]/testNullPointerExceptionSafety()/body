{
  assertEquals(FIELD_ID1.add((Integer)null),FIELD_ID1.add((Field<Integer>)null));
  assertEquals(FIELD_ID1.between((Integer)null,null),FIELD_ID1.between((Field<Integer>)null,null));
  assertEquals(FIELD_ID1.div((Integer)null),FIELD_ID1.div((Field<Integer>)null));
  assertEquals(FIELD_ID1.equal((Integer)null),FIELD_ID1.equal((Field<Integer>)null));
  assertEquals(FIELD_ID1.greaterOrEqual((Integer)null),FIELD_ID1.greaterOrEqual((Field<Integer>)null));
  assertEquals(FIELD_ID1.greaterThan((Integer)null),FIELD_ID1.greaterThan((Field<Integer>)null));
  assertEquals(FIELD_ID1.in((Integer)null),FIELD_ID1.in((Field<Integer>)null));
  assertEquals(FIELD_ID1.lessOrEqual((Integer)null),FIELD_ID1.lessOrEqual((Field<Integer>)null));
  assertEquals(FIELD_ID1.lessThan((Integer)null),FIELD_ID1.lessThan((Field<Integer>)null));
  assertEquals(FIELD_ID1.mod((Integer)null),FIELD_ID1.mod((Field<Integer>)null));
  assertEquals(FIELD_ID1.mul((Integer)null),FIELD_ID1.mul((Field<Integer>)null));
  assertEquals(FIELD_ID1.notEqual((Integer)null),FIELD_ID1.notEqual((Field<Integer>)null));
  assertEquals(FIELD_ID1.notIn((Integer)null),FIELD_ID1.notIn((Field<Integer>)null));
  assertEquals(FIELD_ID1.sub((Integer)null),FIELD_ID1.sub((Field<Integer>)null));
  assertEquals(Factory.abs((Integer)null),Factory.abs((Field<Integer>)null));
  assertEquals(Factory.acos((Integer)null),Factory.acos((Field<Integer>)null));
  assertEquals(Factory.asin((Integer)null),Factory.asin((Field<Integer>)null));
  assertEquals(Factory.atan((Integer)null),Factory.atan((Field<Integer>)null));
  assertEquals(Factory.atan2((Integer)null,(Integer)null),Factory.atan2((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.atan2((Integer)null,(Integer)null),Factory.atan2((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.atan2((Integer)null,(Integer)null),Factory.atan2((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitAnd((Integer)null,(Integer)null),Factory.bitAnd((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitAnd((Integer)null,(Integer)null),Factory.bitAnd((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.bitAnd((Integer)null,(Integer)null),Factory.bitAnd((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.bitCount((Integer)null),Factory.bitCount((Field<Integer>)null));
  assertEquals(Factory.bitLength((String)null),Factory.bitLength((Field<String>)null));
  assertEquals(Factory.bitNand((Integer)null,(Integer)null),Factory.bitNand((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitNand((Integer)null,(Integer)null),Factory.bitNand((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.bitNand((Integer)null,(Integer)null),Factory.bitNand((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.bitNor((Integer)null,(Integer)null),Factory.bitNor((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitNor((Integer)null,(Integer)null),Factory.bitNor((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.bitNor((Integer)null,(Integer)null),Factory.bitNor((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.bitOr((Integer)null,(Integer)null),Factory.bitOr((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitOr((Integer)null,(Integer)null),Factory.bitOr((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.bitOr((Integer)null,(Integer)null),Factory.bitOr((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.bitXNor((Integer)null,(Integer)null),Factory.bitXNor((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitXNor((Integer)null,(Integer)null),Factory.bitXNor((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.bitXNor((Integer)null,(Integer)null),Factory.bitXNor((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.bitXor((Integer)null,(Integer)null),Factory.bitXor((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.bitXor((Integer)null,(Integer)null),Factory.bitXor((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.bitXor((Integer)null,(Integer)null),Factory.bitXor((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.ceil((Integer)null),Factory.ceil((Field<Integer>)null));
  assertEquals(Factory.charLength((String)null),Factory.charLength((Field<String>)null));
  assertEquals(Factory.coalesce((Integer)null,(Integer)null),Factory.coalesce((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.coalesce((Integer)null,(Integer)null,(Integer)null),Factory.coalesce((Field<Integer>)null,(Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.coalesce((Integer)null,(Integer)null,(Integer[])null),Factory.coalesce((Field<Integer>)null,(Field<Integer>)null,(Field<?>[])null));
  assertEquals(Factory.coalesce((Integer)null,(Integer)null,(Integer)null,(Integer)null),Factory.coalesce((Field<Integer>)null,(Field<Integer>)null,(Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.concat((String)null,(String)null),Factory.concat((Field<String>)null,(Field<String>)null));
  assertEquals(Factory.cos((Integer)null),Factory.cos((Field<Integer>)null));
  assertEquals(Factory.cosh((Integer)null),Factory.cosh((Field<Integer>)null));
  assertEquals(Factory.cot((Integer)null),Factory.cot((Field<Integer>)null));
  assertEquals(Factory.coth((Integer)null),Factory.coth((Field<Integer>)null));
  assertEquals(Factory.decode((Integer)null,null,null),Factory.decode((Field<Integer>)null,null,null));
  assertEquals(Factory.decode((Integer)null,null,null),Factory.decode((Field<Integer>)null,null,null));
  assertEquals(Factory.deg((Integer)null),Factory.deg((Field<Integer>)null));
  assertEquals(Factory.exp((Integer)null),Factory.exp((Field<Integer>)null));
  assertEquals(Factory.extract((java.util.Date)null,DatePart.DAY),Factory.extract((Field<java.util.Date>)null,DatePart.DAY));
  assertEquals(Factory.year((java.util.Date)null),Factory.year((Field<java.util.Date>)null));
  assertEquals(Factory.month((java.util.Date)null),Factory.month((Field<java.util.Date>)null));
  assertEquals(Factory.day((java.util.Date)null),Factory.day((Field<java.util.Date>)null));
  assertEquals(Factory.hour((java.util.Date)null),Factory.hour((Field<java.util.Date>)null));
  assertEquals(Factory.minute((java.util.Date)null),Factory.minute((Field<java.util.Date>)null));
  assertEquals(Factory.second((java.util.Date)null),Factory.second((Field<java.util.Date>)null));
  assertEquals(Factory.floor((Integer)null),Factory.floor((Field<Integer>)null));
  assertEquals(Factory.greatest((Integer)null),Factory.greatest((Field<Integer>)null));
  assertEquals(Factory.greatest((Integer)null,(Integer[])null),Factory.greatest((Field<Integer>)null,(Field[])null));
  assertEquals(Factory.greatest((Integer)null,(Integer)null,(Integer)null),Factory.greatest((Field<Integer>)null,(Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.greatest((Integer)null,(Integer)null),Factory.greatest((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.lag((Field<Integer>)null,1,(Integer)null),Factory.lag((Field<Integer>)null,1,(Field<Integer>)null));
  assertEquals(Factory.lead((Field<Integer>)null,1,(Integer)null),Factory.lead((Field<Integer>)null,1,(Field<Integer>)null));
  assertEquals(Factory.least((Integer)null),Factory.least((Field<Integer>)null));
  assertEquals(Factory.least((Integer)null,(Integer)null),Factory.least((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.least((Integer)null,(Integer[])null),Factory.least((Field<Integer>)null,(Field[])null));
  assertEquals(Factory.least((Integer)null,(Integer)null,(Integer)null),Factory.least((Field<Integer>)null,(Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.length((String)null),Factory.length((Field<String>)null));
  assertEquals(Factory.ln((Integer)null),Factory.ln((Field<Integer>)null));
  assertEquals(Factory.log((Integer)null,2),Factory.log((Field<Integer>)null,2));
  assertEquals(Factory.lower((String)null),Factory.lower((Field<String>)null));
  assertEquals(Factory.ltrim((String)null),Factory.ltrim((Field<String>)null));
  assertEquals(Factory.nullif((Integer)null,(Integer)null),Factory.nullif((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.nullif((Integer)null,(Integer)null),Factory.nullif((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.nullif((Integer)null,(Integer)null),Factory.nullif((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.nvl((Integer)null,(Integer)null),Factory.nvl((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.nvl((Integer)null,(Integer)null),Factory.nvl((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.nvl((Integer)null,(Integer)null),Factory.nvl((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.nvl2((Field<Integer>)null,(Integer)null,(Integer)null),Factory.nvl2((Field<Integer>)null,(Field<Integer>)null,(Integer)null));
  assertEquals(Factory.nvl2((Field<Integer>)null,(Integer)null,(Integer)null),Factory.nvl2((Field<Integer>)null,(Integer)null,(Field<Integer>)null));
  assertEquals(Factory.nvl2((Field<Integer>)null,(Integer)null,(Integer)null),Factory.nvl2((Field<Integer>)null,(Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.octetLength((String)null),Factory.octetLength((Field<String>)null));
  assertEquals(Factory.position((String)null,(String)null),Factory.position((String)null,(Field<String>)null));
  assertEquals(Factory.position((String)null,(String)null),Factory.position((Field<String>)null,(String)null));
  assertEquals(Factory.position((String)null,(String)null),Factory.position((Field<String>)null,(Field<String>)null));
  assertEquals(Factory.power((Integer)null,(Integer)null),Factory.power((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.power((Integer)null,(Integer)null),Factory.power((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.power((Integer)null,(Integer)null),Factory.power((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.rad((Integer)null),Factory.rad((Field<Integer>)null));
  assertEquals(Factory.repeat((String)null,(Field<Integer>)null),Factory.repeat((Field<String>)null,(Field<Integer>)null));
  assertEquals(Factory.replace((Field<String>)null,(String)null),Factory.replace((Field<String>)null,(Field<String>)null));
  assertEquals(Factory.replace((Field<String>)null,(String)null,(String)null),Factory.replace((Field<String>)null,(Field<String>)null,(Field<String>)null));
  assertEquals(Factory.round((Integer)null),Factory.round((Field<Integer>)null));
  assertEquals(Factory.round((Integer)null,1),Factory.round((Field<Integer>)null,1));
  assertEquals(Factory.rtrim((String)null),Factory.rtrim((Field<String>)null));
  assertEquals(Factory.shl((Integer)null,(Integer)null),Factory.shl((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.shl((Integer)null,(Integer)null),Factory.shl((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.shl((Integer)null,(Integer)null),Factory.shl((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.shr((Integer)null,(Integer)null),Factory.shr((Integer)null,(Field<Integer>)null));
  assertEquals(Factory.shr((Integer)null,(Integer)null),Factory.shr((Field<Integer>)null,(Integer)null));
  assertEquals(Factory.shr((Integer)null,(Integer)null),Factory.shr((Field<Integer>)null,(Field<Integer>)null));
  assertEquals(Factory.sign((Integer)null),Factory.sign((Field<Integer>)null));
  assertEquals(Factory.sin((Integer)null),Factory.sin((Field<Integer>)null));
  assertEquals(Factory.sinh((Integer)null),Factory.sinh((Field<Integer>)null));
  assertEquals(Factory.sqrt((Integer)null),Factory.sqrt((Field<Integer>)null));
  assertEquals(Factory.tan((Integer)null),Factory.tan((Field<Integer>)null));
  assertEquals(Factory.tanh((Integer)null),Factory.tanh((Field<Integer>)null));
  assertEquals(Factory.trim((String)null),Factory.trim((Field<String>)null));
  assertEquals(Factory.upper((String)null),Factory.upper((Field<String>)null));
}
