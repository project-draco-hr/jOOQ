{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  Field<Integer> identity=field("c.is_identity",Integer.class);
  for (  Record record : create().select(COLUMNS.COLUMN_NAME,COLUMNS.ORDINAL_POSITION,COLUMNS.DATA_TYPE,COLUMNS.IS_NULLABLE,COLUMNS.CHARACTER_MAXIMUM_LENGTH,COLUMNS.NUMERIC_PRECISION,COLUMNS.NUMERIC_SCALE,identity).from(COLUMNS).join("sys.objects o").on("o.type in ('U', 'V')").and(COLUMNS.TABLE_NAME.equal(field("o.name",String.class))).join("sys.columns c").on("c.object_id = o.object_id").and(COLUMNS.COLUMN_NAME.equal(field("c.name",String.class))).where(COLUMNS.TABLE_SCHEMA.equal(getSchema().getName())).and(COLUMNS.TABLE_NAME.equal(getName())).orderBy(COLUMNS.ORDINAL_POSITION).fetch()) {
    DataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),getSchema(),record.getValue(COLUMNS.DATA_TYPE),record.getValue(COLUMNS.CHARACTER_MAXIMUM_LENGTH),record.getValue(COLUMNS.NUMERIC_PRECISION),record.getValue(COLUMNS.NUMERIC_SCALE),"");
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getSchema(),getName()),record.getValue(COLUMNS.COLUMN_NAME),record.getValue(COLUMNS.ORDINAL_POSITION,int.class),type,record.getValue(COLUMNS.IS_NULLABLE,boolean.class),1 == record.getValue(identity),null);
    result.add(column);
  }
  return result;
}
