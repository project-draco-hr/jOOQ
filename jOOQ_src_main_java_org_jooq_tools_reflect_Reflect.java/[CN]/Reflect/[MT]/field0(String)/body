{
  Class<?> type=type();
  try {
    return type.getField(name);
  }
 catch (  NoSuchFieldException e) {
    do {
      try {
        return accessible(type.getDeclaredField(name));
      }
 catch (      NoSuchFieldException ignore) {
      }
      type=type.getSuperclass();
    }
 while (type != null);
    throw new ReflectException(e);
  }
}
