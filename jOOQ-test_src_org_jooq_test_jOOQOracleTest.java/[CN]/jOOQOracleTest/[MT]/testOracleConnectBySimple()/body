{
  OracleFactory ora=new OracleFactory(create().getConnection(),create().getSchemaMapping());
  assertEquals(Arrays.asList(1,2,3,4,5,6,7,8,9),ora.select(rownum()).connectBy(level().lessThan(10)).fetch(rownum()));
  assertEquals(Arrays.asList(1,2,3,4,5,6,7,8,9),ora.select(rownum()).connectByNoCycle(level().lessThan(10)).fetch(rownum()));
  assertEquals(Arrays.asList(1,2,3,4,5,6,7,8,9),ora.select(rownum()).connectBy(level().lessThan(10)).and("1 = ?",1).startWith("? = ?",1,1).fetch(rownum()));
  assertEquals(Arrays.asList(1,2,3,4,5,6,7,8,9),ora.select(rownum()).connectByNoCycle(level().lessThan(10)).and("1 = ?",1).startWith("? = ?",1,1).fetch(rownum()));
  Result<Record> result=ora.select(rownum(),connectByIsCycle(),connectByIsLeaf()).connectByNoCycle(level().lessThan(4)).fetch();
  assertEquals(Integer.valueOf(1),result.getValue(0,rownum()));
  assertEquals(Integer.valueOf(2),result.getValue(1,rownum()));
  assertEquals(Integer.valueOf(3),result.getValue(2,rownum()));
  assertEquals(Boolean.FALSE,result.getValue(0,connectByIsLeaf()));
  assertEquals(Boolean.FALSE,result.getValue(1,connectByIsLeaf()));
  assertEquals(Boolean.TRUE,result.getValue(2,connectByIsLeaf()));
  assertEquals(Boolean.FALSE,result.getValue(0,connectByIsCycle()));
  assertEquals(Boolean.FALSE,result.getValue(1,connectByIsCycle()));
  assertEquals(Boolean.FALSE,result.getValue(2,connectByIsCycle()));
}
