{
  SQLDialect dialect=context.configuration().dialect();
  context.start(SELECT_SELECT).keyword("select").sql(" ");
  if (!StringUtils.isBlank(hint)) {
    context.sql(hint).sql(" ");
  }
  if (distinct) {
    context.keyword("distinct").sql(" ");
  }
  context.declareFields(true);
  if (context.subquery() && dialect == H2 && context.data(DATA_ROW_VALUE_EXPRESSION_PREDICATE_SUBQUERY) != null) {
    Object data=context.data(DATA_ROW_VALUE_EXPRESSION_PREDICATE_SUBQUERY);
    try {
      context.data(DATA_ROW_VALUE_EXPRESSION_PREDICATE_SUBQUERY,null);
      context.sql("(").visit(getSelect1()).sql(")");
    }
  finally {
      context.data(DATA_ROW_VALUE_EXPRESSION_PREDICATE_SUBQUERY,data);
    }
  }
 else {
    context.visit(getSelect1());
  }
  if (limitOffsetRownumber != null) {
    ParamType paramType=context.paramType();
    context.paramType(INLINED).sql(",").formatIndentStart().formatSeparator().visit(limitOffsetRownumber).formatIndentEnd().paramType(paramType);
  }
  context.declareFields(false).end(SELECT_SELECT);
  context.start(SELECT_FROM).declareTables(true);
  DefaultConfiguration c=new DefaultConfiguration(context.configuration().dialect());
  String renderedFrom=new DefaultRenderContext(c).render(getFrom());
  if (!renderedFrom.isEmpty()) {
    context.formatSeparator().keyword("from").sql(" ").visit(getFrom());
    if (grouping && getGroupBy().isEmpty() && asList().contains(dialect)) {
      context.sql(", (select 1 as x) as empty_grouping_dummy_table");
    }
  }
  context.declareTables(false).end(SELECT_FROM);
  context.start(SELECT_WHERE);
  if (!(getWhere().getWhere() instanceof TrueCondition)) {
    context.formatSeparator().keyword("where").sql(" ").visit(getWhere());
  }
  context.end(SELECT_WHERE);
  context.start(SELECT_START_WITH);
  if (!(getConnectByStartWith().getWhere() instanceof TrueCondition)) {
    context.formatSeparator().keyword("start with").sql(" ").visit(getConnectByStartWith());
  }
  context.end(SELECT_START_WITH);
  context.start(SELECT_CONNECT_BY);
  if (!(getConnectBy().getWhere() instanceof TrueCondition)) {
    context.formatSeparator().keyword("connect by");
    if (connectByNoCycle) {
      context.sql(" ").keyword("nocycle");
    }
    context.sql(" ").visit(getConnectBy());
  }
  context.end(SELECT_CONNECT_BY);
  context.start(SELECT_GROUP_BY);
  if (grouping) {
    context.formatSeparator().keyword("group by").sql(" ");
    if (getGroupBy().isEmpty()) {
      if (asList().contains(dialect)) {
        context.sql("empty_grouping_dummy_table.x");
      }
 else       if (asList(CUBRID,DERBY,FIREBIRD,HSQLDB,MARIADB,MYSQL,POSTGRES,SQLITE).contains(dialect)) {
        context.sql("1");
      }
 else {
        context.sql("()");
      }
    }
 else {
      context.visit(getGroupBy());
    }
  }
  context.end(SELECT_GROUP_BY);
  context.start(SELECT_HAVING);
  if (!(getHaving().getWhere() instanceof TrueCondition)) {
    context.formatSeparator().keyword("having").sql(" ").visit(getHaving());
  }
  context.end(SELECT_HAVING);
  context.start(SELECT_WINDOW);
  if (!getWindow().isEmpty()) {
    context.formatSeparator().keyword("window").sql(" ").declareWindows(true).visit(getWindow()).declareWindows(false);
  }
  context.end(SELECT_WINDOW);
  context.start(SELECT_ORDER_BY);
  if (!getOrderBy().isEmpty()) {
    context.formatSeparator().keyword("order").sql(orderBySiblings ? " " : "").keyword(orderBySiblings ? "siblings" : "").sql(" ").keyword("by").sql(" ").visit(getOrderBy());
  }
 else   if (getLimit().isApplicable() && asList().contains(dialect)) {
    context.formatSeparator().keyword("order by").sql(" 1");
  }
  context.end(SELECT_ORDER_BY);
}
