{
  SQLDialect dialect=context.dialect();
  SQLDialect family=context.family();
  Object renderTrailingLimit=context.data(DATA_RENDER_TRAILING_LIMIT_IF_APPLICABLE);
  Object localDataMap=context.data(DATA_LOCALLY_SCOPED_DATA_MAP);
  try {
    if (renderTrailingLimit != null)     context.data().remove(DATA_RENDER_TRAILING_LIMIT_IF_APPLICABLE);
    context.data(DATA_LOCALLY_SCOPED_DATA_MAP,new HashMap<Object,Object>());
    if (into != null && context.data(DATA_OMIT_INTO_CLAUSE) == null && asList(CUBRID,DERBY,FIREBIRD,H2,MARIADB,MYSQL,POSTGRES,SQLITE).contains(family)) {
      context.data(DATA_OMIT_INTO_CLAUSE,true);
      context.visit(DSL.createTable(into).as(this));
      context.data().remove(DATA_OMIT_INTO_CLAUSE);
      return;
    }
    if (with != null)     context.visit(with).formatSeparator();
    pushWindow(context);
    Boolean wrapDerivedTables=(Boolean)context.data(DATA_WRAP_DERIVED_TABLES_IN_PARENTHESES);
    if (TRUE.equals(wrapDerivedTables)) {
      context.sql('(').formatIndentStart().formatNewLine().data(DATA_WRAP_DERIVED_TABLES_IN_PARENTHESES,null);
    }
switch (dialect) {
default :
{
        toSQLReferenceLimitDefault(context);
        break;
      }
  }
  if (forUpdate && !asList(CUBRID).contains(family)) {
    context.formatSeparator().keyword("for update");
    if (!forUpdateOf.isEmpty()) {
      boolean unqualified=asList(DERBY,FIREBIRD,H2,HSQLDB).contains(context.family());
      boolean qualify=context.qualify();
      if (unqualified)       context.qualify(false);
      context.sql(' ').keyword("of").sql(' ').visit(forUpdateOf);
      if (unqualified)       context.qualify(qualify);
    }
 else     if (!forUpdateOfTables.isEmpty()) {
      context.sql(' ').keyword("of").sql(' ');
switch (family) {
case DERBY:
{
          forUpdateOfTables.toSQLFields(context);
          break;
        }
default :
      Tools.tableNames(context,forUpdateOfTables);
    break;
}
}
if (family == FIREBIRD) {
context.sql(' ').keyword("with lock");
}
if (forUpdateMode != null) {
context.sql(' ');
context.keyword(forUpdateMode.toSQL());
if (forUpdateMode == ForUpdateMode.WAIT) {
  context.sql(' ');
  context.sql(forUpdateWait);
}
}
}
 else if (forShare) {
switch (dialect) {
case MARIADB:
case MYSQL:
context.formatSeparator().keyword("lock in share mode");
break;
default :
context.formatSeparator().keyword("for share");
break;
}
}
if (!StringUtils.isBlank(option)) {
context.formatSeparator().sql(option);
}
if (TRUE.equals(wrapDerivedTables)) {
context.formatIndentEnd().formatNewLine().sql(')').data(DATA_WRAP_DERIVED_TABLES_IN_PARENTHESES,true);
}
}
  finally {
context.data(DATA_LOCALLY_SCOPED_DATA_MAP,localDataMap);
if (renderTrailingLimit != null) context.data(DATA_RENDER_TRAILING_LIMIT_IF_APPLICABLE,renderTrailingLimit);
}
}
