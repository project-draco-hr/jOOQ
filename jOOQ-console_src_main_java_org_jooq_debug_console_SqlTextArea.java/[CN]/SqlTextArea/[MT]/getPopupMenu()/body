{
  boolean isEditable=isEditable();
  JPopupMenu popupMenu=new JPopupMenu();
  final Clipboard clipboard=Toolkit.getDefaultToolkit().getSystemClipboard();
  JMenuItem copyClipboardMenuItem=new JMenuItem("Copy");
  copyClipboardMenuItem.setEnabled(getSelectionStart() < getSelectionEnd());
  copyClipboardMenuItem.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      copyAsRtf();
    }
  }
);
  popupMenu.add(copyClipboardMenuItem);
  JMenuItem pasteClipboardMenuItem=new JMenuItem("Paste");
  pasteClipboardMenuItem.setEnabled(false);
  if (isEditable && clipboard.isDataFlavorAvailable(DataFlavor.stringFlavor)) {
    try {
      final String data=(String)clipboard.getData(DataFlavor.stringFlavor);
      if (data != null && data.length() > 0) {
        pasteClipboardMenuItem.addActionListener(new ActionListener(){
          @Override public void actionPerformed(          ActionEvent e){
            replaceSelection(data);
          }
        }
);
        pasteClipboardMenuItem.setEnabled(true);
      }
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
  }
  popupMenu.add(pasteClipboardMenuItem);
  popupMenu.addSeparator();
  JMenuItem formatMenuItem=new JMenuItem("Format");
  formatMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F,KeyEvent.CTRL_MASK | KeyEvent.SHIFT_MASK));
  formatMenuItem.setEnabled(isEditable && getSelectionStart() < getSelectionEnd());
  formatMenuItem.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      formatSelection();
    }
  }
);
  popupMenu.add(formatMenuItem);
  if (popupMenu.getComponentCount() > 0) {
    return popupMenu;
  }
  return null;
}
