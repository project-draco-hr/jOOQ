{
  for (  Record record : create().select(ReferentialConstraints.CONSTRAINT_SCHEMA,ReferentialConstraints.CONSTRAINT_NAME,ReferentialConstraints.TABLE_NAME,ReferentialConstraints.REFERENCED_TABLE_NAME,ReferentialConstraints.UNIQUE_CONSTRAINT_NAME,ReferentialConstraints.UNIQUE_CONSTRAINT_SCHEMA,KeyColumnUsage.COLUMN_NAME).from(REFERENTIAL_CONSTRAINTS).join(KEY_COLUMN_USAGE).on(ReferentialConstraints.CONSTRAINT_SCHEMA.equal(KeyColumnUsage.CONSTRAINT_SCHEMA)).and(ReferentialConstraints.CONSTRAINT_NAME.equal(KeyColumnUsage.CONSTRAINT_NAME)).where(ReferentialConstraints.CONSTRAINT_SCHEMA.in(getInputSchemata())).orderBy(KeyColumnUsage.CONSTRAINT_SCHEMA.asc(),KeyColumnUsage.CONSTRAINT_NAME.asc(),KeyColumnUsage.ORDINAL_POSITION.asc()).fetch()) {
    SchemaDefinition foreignKeySchema=getSchema(record.get(ReferentialConstraints.CONSTRAINT_SCHEMA));
    SchemaDefinition uniqueKeySchema=getSchema(record.get(ReferentialConstraints.UNIQUE_CONSTRAINT_SCHEMA));
    String foreignKey=record.get(ReferentialConstraints.CONSTRAINT_NAME);
    String foreignKeyColumn=record.get(KeyColumnUsage.COLUMN_NAME);
    String foreignKeyTableName=record.get(ReferentialConstraints.TABLE_NAME);
    String referencedKey=record.get(ReferentialConstraints.UNIQUE_CONSTRAINT_NAME);
    String referencedTableName=record.get(ReferentialConstraints.REFERENCED_TABLE_NAME);
    TableDefinition foreignKeyTable=getTable(foreignKeySchema,foreignKeyTableName);
    if (foreignKeyTable != null) {
      ColumnDefinition column=foreignKeyTable.getColumn(foreignKeyColumn);
      String key=getKeyName(referencedTableName,referencedKey);
      relations.addForeignKey(foreignKey,key,column,uniqueKeySchema);
    }
  }
}
