{
  List<ColumnDefinition> result=new ArrayList<ColumnDefinition>();
  Routines r=ROUTINES;
  Parameters p=PARAMETERS;
  PgNamespace pg_n=PG_NAMESPACE;
  PgProc pg_p=PG_PROC;
  Columns c=COLUMNS;
  for (  Record record : create().select(p.PARAMETER_NAME,rowNumber().over(partitionBy(p.SPECIFIC_NAME).orderBy(p.ORDINAL_POSITION)).as(p.ORDINAL_POSITION),p.DATA_TYPE,p.CHARACTER_MAXIMUM_LENGTH,p.NUMERIC_PRECISION,p.NUMERIC_SCALE,inline("true").as(c.IS_NULLABLE),inline(null,String.class).as(c.COLUMN_DEFAULT),p.UDT_SCHEMA,p.UDT_NAME).from(r).join(p).on(row(r.SPECIFIC_CATALOG,r.SPECIFIC_SCHEMA,r.SPECIFIC_NAME).eq(p.SPECIFIC_CATALOG,p.SPECIFIC_SCHEMA,p.SPECIFIC_NAME)).join(pg_n).on(r.SPECIFIC_SCHEMA.eq(pg_n.NSPNAME)).join(pg_p).on(pg_p.PRONAMESPACE.eq(oid(pg_n))).and(pg_p.PRONAME.eq(r.ROUTINE_NAME)).where(r.SPECIFIC_NAME.eq(specificName)).and(p.PARAMETER_MODE.ne("IN")).and(pg_p.PRORETSET).unionAll(select(nvl(c.COLUMN_NAME,getName()).as(c.COLUMN_NAME),nvl(c.ORDINAL_POSITION,DSL.<Integer>inline(1)).as(c.ORDINAL_POSITION),nvl(c.DATA_TYPE,r.DATA_TYPE).as(c.DATA_TYPE),nvl(c.CHARACTER_MAXIMUM_LENGTH,r.CHARACTER_MAXIMUM_LENGTH).as(c.CHARACTER_MAXIMUM_LENGTH),nvl(c.NUMERIC_PRECISION,r.NUMERIC_PRECISION).as(c.NUMERIC_PRECISION),nvl(c.NUMERIC_SCALE,r.NUMERIC_SCALE).as(c.NUMERIC_SCALE),nvl(c.IS_NULLABLE,"true").as(c.IS_NULLABLE),nvl(c.COLUMN_DEFAULT,inline((String)null)).as(c.COLUMN_DEFAULT),nvl(c.UDT_SCHEMA,inline((String)null)).as(c.UDT_SCHEMA),nvl(c.UDT_NAME,r.UDT_NAME).as(c.UDT_NAME)).from(r).leftOuterJoin(c).on(row(r.TYPE_UDT_CATALOG,r.TYPE_UDT_SCHEMA,r.TYPE_UDT_NAME).eq(c.TABLE_CATALOG,c.TABLE_SCHEMA,c.TABLE_NAME)).join(pg_n).on(r.SPECIFIC_SCHEMA.eq(pg_n.NSPNAME)).join(pg_p).on(pg_p.PRONAMESPACE.eq(oid(pg_n))).and(pg_p.PRONAME.concat("_").concat(oid(pg_p)).eq(r.SPECIFIC_NAME)).where(r.SPECIFIC_NAME.eq(specificName)).and(row(r.SPECIFIC_CATALOG,r.SPECIFIC_SCHEMA,r.SPECIFIC_NAME).notIn(select(p.SPECIFIC_CATALOG,p.SPECIFIC_SCHEMA,p.SPECIFIC_NAME).from(p).where(p.PARAMETER_MODE.eq("OUT")))).and(pg_p.PRORETSET)).orderBy(2)) {
    SchemaDefinition typeSchema=null;
    String schemaName=record.get(p.UDT_SCHEMA);
    if (schemaName != null)     typeSchema=getDatabase().getSchema(schemaName);
    DataTypeDefinition type=new DefaultDataTypeDefinition(getDatabase(),typeSchema,record.get(p.DATA_TYPE),record.get(p.CHARACTER_MAXIMUM_LENGTH),record.get(p.NUMERIC_PRECISION),record.get(p.NUMERIC_SCALE),record.get(c.IS_NULLABLE,boolean.class),record.get(c.COLUMN_DEFAULT) != null,record.get(p.UDT_NAME));
    ColumnDefinition column=new DefaultColumnDefinition(getDatabase().getTable(getSchema(),getName()),record.get(p.PARAMETER_NAME),record.get(p.ORDINAL_POSITION,int.class),type,defaultString(record.get(c.COLUMN_DEFAULT)).startsWith("nextval"),null);
    result.add(column);
  }
  return result;
}
