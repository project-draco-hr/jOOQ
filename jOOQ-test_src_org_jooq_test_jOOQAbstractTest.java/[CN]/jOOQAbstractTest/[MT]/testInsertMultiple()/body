{
  reset=false;
  create().insertInto(TAuthor(),TAuthor_ID(),TAuthor_LAST_NAME()).values(val(37),"D??rrenmatt").values(Arrays.<Object>asList(88,"Schmitt")).values(val(93),val("K??stner")).execute();
  Result<A> authors=create().selectFrom(TAuthor()).where(TAuthor_ID().greaterThan(30)).orderBy(TAuthor_ID()).fetch();
  assertEquals(3,authors.size());
  assertEquals(Integer.valueOf(37),authors.getValue(0,TAuthor_ID()));
  assertEquals(Integer.valueOf(88),authors.getValue(1,TAuthor_ID()));
  assertEquals(Integer.valueOf(93),authors.getValue(2,TAuthor_ID()));
  assertEquals("D??rrenmatt",authors.getValue(0,TAuthor_LAST_NAME()));
  assertEquals("Schmitt",authors.getValue(1,TAuthor_LAST_NAME()));
  assertEquals("K??stner",authors.getValue(2,TAuthor_LAST_NAME()));
  create().insertInto(TAuthor()).set(TAuthor_ID(),val(137)).set(TAuthor_LAST_NAME(),"D??rrenmatt 2").newRecord().set(TAuthor_ID(),188).set(TAuthor_LAST_NAME(),"Schmitt 2").newRecord().set(TAuthor_ID(),val(193)).set(TAuthor_LAST_NAME(),"K??stner 2").execute();
  authors=create().selectFrom(TAuthor()).where(TAuthor_ID().greaterThan(130)).orderBy(TAuthor_ID()).fetch();
  assertEquals(3,authors.size());
  assertEquals(Integer.valueOf(137),authors.getValue(0,TAuthor_ID()));
  assertEquals(Integer.valueOf(188),authors.getValue(1,TAuthor_ID()));
  assertEquals(Integer.valueOf(193),authors.getValue(2,TAuthor_ID()));
  assertEquals("D??rrenmatt 2",authors.getValue(0,TAuthor_LAST_NAME()));
  assertEquals("Schmitt 2",authors.getValue(1,TAuthor_LAST_NAME()));
  assertEquals("K??stner 2",authors.getValue(2,TAuthor_LAST_NAME()));
}
