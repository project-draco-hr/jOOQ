{
  try {
    String configuration=System.getProperty("org.jooq.configuration");
    if (configuration == null) {
      log.error("No system property 'org.jooq.configuration' found");
      log.error("-----------");
      log.error("Please be sure property is set; example: -Dorg.jooq.configuration=/org/jooq/configuration/${env_var:USERNAME}/db2/library.xml");
      throw new Error();
    }
    InputStream in=GenerationTool.class.getResourceAsStream(configuration);
    if (in == null) {
      log.error("Cannot find " + configuration);
      log.error("-----------");
      log.error("Please be sure it is located on the classpath and qualified as a classpath location.");
      log.error("If it is located at the current working directory, try adding a '/' to the path");
      throw new Error();
    }
    Configuration c=GenerationTool.load(in);
    Jdbc jdbc=c.getJdbc();
    String driver=jdbc.getDriver();
    jdbcURL=jdbc.getUrl() + getSchemaSuffix();
    jdbcSchema=jdbc.getSchema() + getSchemaSuffix();
    jdbcUser=jdbcUser != null ? jdbcUser : jdbc.getUser() != null ? jdbc.getUser() : getProperty(jdbc.getProperties(),"user");
    jdbcPassword=jdbcPassword != null ? jdbcPassword : jdbc.getPassword() != null ? jdbc.getPassword() : getProperty(jdbc.getProperties(),"password");
    Class.forName(driver);
    if (StringUtils.isBlank(jdbcUser)) {
      Properties p=new Properties();
      if (getClass().getSimpleName().toLowerCase().contains("ingres")) {
        p.setProperty("timezone","EUROPE-CENTRAL");
      }
      return DriverManager.getConnection(getJdbcURL(),p);
    }
 else {
      return DriverManager.getConnection(getJdbcURL(),jdbcUser,jdbcPassword);
    }
  }
 catch (  Exception e) {
    throw new Error(e);
  }
}
