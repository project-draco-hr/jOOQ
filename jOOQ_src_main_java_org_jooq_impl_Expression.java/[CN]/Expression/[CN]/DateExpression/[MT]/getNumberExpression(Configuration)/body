{
switch (configuration.dialect().family()) {
case ASE:
case FIREBIRD:
case SQLSERVER:
case SYBASE:
{
      if (operator == ADD) {
        return field("{dateadd}(day, {0}, {1})",getDataType(),rhsAsNumber(),lhs);
      }
 else {
        return field("{dateadd}(day, {0}, {1})",getDataType(),rhsAsNumber().neg(),lhs);
      }
    }
case DB2:
case HSQLDB:
{
    if (operator == ADD) {
      return lhs.add(field("{0} day",rhsAsNumber()));
    }
 else {
      return lhs.sub(field("{0} day",rhsAsNumber()));
    }
  }
case DERBY:
{
  Field<T> result;
  if (operator == ADD) {
    result=field("{fn {timestampadd}({sql_tsi_day}, {0}, {1}) }",getDataType(),rhsAsNumber(),lhs);
  }
 else {
    result=field("{fn {timestampadd}({sql_tsi_day}, {0}, {1}) }",getDataType(),rhsAsNumber().neg(),lhs);
  }
  return castNonTimestamps(configuration,result);
}
case CUBRID:
case MYSQL:
{
if (operator == ADD) {
  return field("{date_add}({0}, {interval} {1} {day})",getDataType(),lhs,rhsAsNumber());
}
 else {
  return field("{date_add}({0}, {interval} {1} {day})",getDataType(),lhs,rhsAsNumber().neg());
}
}
case INGRES:
{
if (operator == ADD) {
return lhs.add(field("{date}({0} || ' days')",Object.class,rhsAsNumber()));
}
 else {
return lhs.sub(field("{date}({0} || ' days')",Object.class,rhsAsNumber()));
}
}
case POSTGRES:
{
if (operator == ADD) {
return lhs.add(rhsAsNumber().concat(" day").cast(DayToSecond.class));
}
 else {
return lhs.sub(rhsAsNumber().concat(" day").cast(DayToSecond.class));
}
}
case SQLITE:
if (operator == ADD) {
return field("{datetime}({0}, {1})",getDataType(),lhs,rhsAsNumber().concat(inline(" day")));
}
 else {
return field("{datetime}({0}, {1})",getDataType(),lhs,rhsAsNumber().neg().concat(inline(" day")));
}
case H2:
case ORACLE:
default :
return new DefaultExpression();
}
}
