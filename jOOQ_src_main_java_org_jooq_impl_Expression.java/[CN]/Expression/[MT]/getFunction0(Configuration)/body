{
  SQLDialect family=configuration.dialect().family();
  if (BIT_AND == operator && asList(H2,HSQLDB).contains(family)) {
    return function("bitand",getDataType(),getArguments());
  }
 else   if (BIT_AND == operator && FIREBIRD == family) {
    return function("bin_and",getDataType(),getArguments());
  }
 else   if (BIT_XOR == operator && asList(H2,HSQLDB).contains(family)) {
    return function("bitxor",getDataType(),getArguments());
  }
 else   if (BIT_XOR == operator && FIREBIRD == family) {
    return function("bin_xor",getDataType(),getArguments());
  }
 else   if (BIT_OR == operator && asList(H2,HSQLDB).contains(family)) {
    return function("bitor",getDataType(),getArguments());
  }
 else   if (BIT_OR == operator && FIREBIRD == family) {
    return function("bin_or",getDataType(),getArguments());
  }
 else   if (BIT_XOR == operator && asList(SQLITE).contains(family)) {
    return (Field<T>)bitAnd(bitNot(bitAnd(lhsAsNumber(),rhsAsNumber())),bitOr(lhsAsNumber(),rhsAsNumber()));
  }
 else   if (SHL == operator && asList(H2,HSQLDB).contains(family)) {
    return lhs.mul(DSL.power(two(),rhsAsNumber()));
  }
 else   if (SHR == operator && asList(H2,HSQLDB).contains(family)) {
    return lhs.div(DSL.power(two(),rhsAsNumber()));
  }
 else   if (SHL == operator && FIREBIRD == family) {
    return function("bin_shl",getDataType(),getArguments());
  }
 else   if (SHR == operator && FIREBIRD == family) {
    return function("bin_shr",getDataType(),getArguments());
  }
 else   if (BIT_NAND == operator) {
    return (Field<T>)bitNot(bitAnd(lhsAsNumber(),rhsAsNumber()));
  }
 else   if (BIT_NOR == operator) {
    return (Field<T>)bitNot(bitOr(lhsAsNumber(),rhsAsNumber()));
  }
 else   if (BIT_XNOR == operator) {
    return (Field<T>)bitNot(bitXor(lhsAsNumber(),rhsAsNumber()));
  }
 else   if (asList(ADD,SUBTRACT).contains(operator) && lhs.getDataType().isDateTime() && (rhs.get(0).getDataType().isNumeric() || rhs.get(0).getDataType().isInterval())) {
    return new DateExpression();
  }
 else {
    return new DefaultExpression();
  }
}
