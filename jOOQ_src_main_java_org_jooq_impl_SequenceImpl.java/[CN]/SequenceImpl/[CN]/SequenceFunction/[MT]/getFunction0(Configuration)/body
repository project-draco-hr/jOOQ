{
  SQLDialect family=configuration.family();
switch (family) {
case POSTGRES:
{
      String field=method + "('" + getQualifiedName(configuration)+ "')";
      return DSL.field(field,getDataType());
    }
case H2:
{
    String field=method + "(" + getQualifiedName(configuration,true)+ ")";
    return DSL.field(field,getDataType());
  }
case FIREBIRD:
case DERBY:
case HSQLDB:
{
  if ("nextval".equals(method)) {
    String field="next value for " + getQualifiedName(configuration);
    return DSL.field(field,getDataType());
  }
 else   if (family == FIREBIRD) {
    return DSL.field("gen_id(" + getQualifiedName(configuration) + ", 0)",getDataType());
  }
 else {
    throw new SQLDialectNotSupportedException("The sequence's current value functionality is not supported for the " + family + " dialect.");
  }
}
case CUBRID:
{
String field=getQualifiedName(configuration) + ".";
if ("nextval".equals(method)) {
  field+="next_value";
}
 else {
  field+="current_value";
}
return DSL.field(field,getDataType());
}
default :
{
String field=getQualifiedName(configuration) + "." + method;
return DSL.field(field,getDataType());
}
}
}
