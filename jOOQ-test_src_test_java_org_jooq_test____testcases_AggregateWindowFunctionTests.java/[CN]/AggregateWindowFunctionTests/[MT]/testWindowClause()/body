{
switch (dialect()) {
case FIREBIRD:
case H2:
case HSQLDB:
case MARIADB:
case MYSQL:
case SQLITE:
    log.info("SKIPPING","Window function tests");
  return;
}
Name a=name("a");
Name b=name("b");
TableField<B,Integer> aField=TBook_ID();
TableField<B,Integer> bField=TBook_AUTHOR_ID();
WindowSpecification aSpec=partitionBy(aField);
WindowSpecification bSpec=partitionBy(bField);
WindowDefinition aDef=a.as(aSpec);
WindowDefinition bDef=b.as(bSpec);
Result<?> result=create().select(count().over().partitionBy(aField),count().over(a),count().over("a"),count().over(aSpec),count().over(aDef),count().over().partitionBy(bField),count().over(b),count().over("b"),count().over(bSpec),count().over(bDef)).from(TBook()).window(aDef,bDef).orderBy(aField).fetch();
assertEquals(asList(1,1,1,1),result.getValues(0));
assertEquals(asList(1,1,1,1),result.getValues(1));
assertEquals(asList(1,1,1,1),result.getValues(2));
assertEquals(asList(1,1,1,1),result.getValues(3));
assertEquals(asList(1,1,1,1),result.getValues(4));
assertEquals(asList(2,2,2,2),result.getValues(5));
assertEquals(asList(2,2,2,2),result.getValues(6));
assertEquals(asList(2,2,2,2),result.getValues(7));
assertEquals(asList(2,2,2,2),result.getValues(8));
assertEquals(asList(2,2,2,2),result.getValues(9));
}
