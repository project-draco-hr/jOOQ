{
  DSLContext create=create();
  InsertQuery<R> insert=create.insertQuery(getTable());
  addChangedValues(storeFields,insert);
  if (!insert.isExecutable()) {
    if (log.isDebugEnabled())     log.debug("Query is not executable",insert);
    return 0;
  }
  BigInteger version=addRecordVersion(insert);
  Timestamp timestamp=addRecordTimestamp(insert);
  Collection<Field<?>> key=setReturningIfNeeded(insert);
  int result=insert.execute();
  if (result > 0) {
    setRecordVersionAndTimestamp(version,timestamp);
    if (asList(DERBY,H2,MARIADB,MYSQL).contains(configuration().family()) && this instanceof UpdatableRecord) {
      ((UpdatableRecord<?>)this).refresh();
    }
 else {
      getReturningIfNeeded(insert,key);
      for (      Field<?> storeField : storeFields)       changed(storeField,false);
    }
    fetched=true;
  }
  return result;
}
