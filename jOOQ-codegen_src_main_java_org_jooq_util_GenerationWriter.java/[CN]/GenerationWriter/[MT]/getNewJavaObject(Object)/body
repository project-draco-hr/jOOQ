{
  if (value == null) {
    return "null";
  }
  Class<?> type=value.getClass();
  if (type == Blob.class) {
  }
 else   if (type == Boolean.class) {
    return Boolean.toString(getIsTrue(String.valueOf(value)));
  }
 else   if (type == BigInteger.class) {
    return "new java.math.BigInteger(\"" + value + "\")";
  }
 else   if (type == BigDecimal.class) {
    return "new java.math.BigDecimal(\"" + value + "\")";
  }
 else   if (type == Byte.class) {
    return "(byte) " + value;
  }
 else   if (type == byte[].class) {
  }
 else   if (type == Clob.class) {
  }
 else   if (type == Date.class) {
    return "new java.sql.Date(" + ((Date)value).getTime() + "L)";
  }
 else   if (type == Double.class) {
    return Double.toString((Double)value);
  }
 else   if (type == Float.class) {
    return Float.toString((Float)value) + "f";
  }
 else   if (type == Integer.class) {
    return Integer.toString((Integer)value);
  }
 else   if (type == Long.class) {
    return Long.toString((Long)value) + "L";
  }
 else   if (type == Short.class) {
    return "(short) " + value;
  }
 else   if (type == String.class) {
    return "\"" + value.toString().replace("\"","\\\"") + "\"";
  }
 else   if (type == Time.class) {
    return "new java.sql.Time(" + ((Time)value).getTime() + "L)";
  }
 else   if (type == Timestamp.class) {
    return "new java.sql.Timestamp(" + ((Timestamp)value).getTime() + "L)";
  }
 else   if (MasterDataType.class.isAssignableFrom(type)) {
  }
 else   if (EnumType.class.isAssignableFrom(type)) {
  }
 else   if (UDTRecord.class.isAssignableFrom(type)) {
  }
 else {
  }
  throw new UnsupportedOperationException("Class " + type + " is not supported");
}
