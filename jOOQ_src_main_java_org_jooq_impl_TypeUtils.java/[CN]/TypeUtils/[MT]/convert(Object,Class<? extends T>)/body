{
  if (from == null) {
    if (toClass.isPrimitive()) {
      if (toClass == char.class) {
        return (T)Character.valueOf((char)0);
      }
 else {
        return convert(0,toClass);
      }
    }
 else {
      return null;
    }
  }
 else {
    final Class<?> fromClass=from.getClass();
    if (toClass == fromClass) {
      return (T)from;
    }
 else     if (fromClass == byte[].class) {
      return convert(new String((byte[])from),toClass);
    }
 else     if (fromClass.isArray()) {
      return (T)convertArray((Object[])from,toClass);
    }
 else     if (toClass == String.class) {
      return (T)from.toString();
    }
 else     if (toClass == Object.class) {
      return (T)from;
    }
 else     if (toClass == Byte.class || toClass == byte.class) {
      return (T)Byte.valueOf(new BigDecimal(from.toString().trim()).byteValue());
    }
 else     if (toClass == Short.class || toClass == short.class) {
      return (T)Short.valueOf(new BigDecimal(from.toString().trim()).shortValue());
    }
 else     if (toClass == Integer.class || toClass == int.class) {
      return (T)Integer.valueOf(new BigDecimal(from.toString().trim()).intValue());
    }
 else     if (toClass == Long.class || toClass == long.class) {
      if (java.util.Date.class.isAssignableFrom(fromClass)) {
        return (T)Long.valueOf(((java.util.Date)from).getTime());
      }
 else {
        return (T)Long.valueOf(new BigDecimal(from.toString().trim()).longValue());
      }
    }
 else     if (toClass == Float.class || toClass == float.class) {
      return (T)Float.valueOf(from.toString().trim());
    }
 else     if (toClass == Double.class || toClass == double.class) {
      return (T)Double.valueOf(from.toString().trim());
    }
 else     if (toClass == BigDecimal.class) {
      return (T)new BigDecimal(from.toString().trim());
    }
 else     if (toClass == BigInteger.class) {
      return (T)new BigDecimal(from.toString().trim()).toBigInteger();
    }
 else     if (toClass == Boolean.class || toClass == boolean.class) {
      String s=from.toString().toLowerCase().trim();
      if (TRUE_VALUES.contains(s)) {
        return (T)Boolean.TRUE;
      }
 else       if (FALSE_VALUES.contains(s)) {
        return (T)Boolean.FALSE;
      }
 else {
        return null;
      }
    }
 else     if (toClass == Character.class || toClass == char.class) {
      if (from.toString().length() != 1) {
        throw fail(from,toClass);
      }
      return (T)Character.valueOf(from.toString().charAt(0));
    }
 else     if (java.util.Date.class.isAssignableFrom(fromClass)) {
      return (T)toDate(((java.util.Date)from).getTime(),toClass);
    }
 else     if ((fromClass == Long.class || fromClass == long.class) && java.util.Date.class.isAssignableFrom(toClass)) {
      return (T)toDate((Long)from,toClass);
    }
  }
  throw fail(from,toClass);
}
