{
  Result<?> result1=create(new OnlyAuthorIDEqual1()).select(TBook_ID()).from(TBook()).orderBy(TBook_ID()).fetch();
  assertEquals(2,result1.size());
  assertEquals(asList(1,2),result1.getValues(TBook_ID()));
  Result<?> result2=create(new OnlyAuthorIDEqual1()).select(TBook_ID()).from(TBook()).where(TBook_ID().in(BOOK_IDS)).orderBy(TBook_ID()).fetch();
  assertEquals(2,result2.size());
  assertEquals(asList(1,2),result2.getValues(TBook_ID()));
  Result<?> result3=create(new OnlyAuthorIDEqual1()).select(TBook_ID()).from(TBook().join(TAuthor()).on(TBook_AUTHOR_ID().eq(TAuthor_ID()))).orderBy(TBook_ID()).fetch();
  assertEquals(2,result3.size());
  assertEquals(asList(1,2),result3.getValues(TBook_ID()));
  Result<?> result4=create(new OnlyAuthorIDEqual1()).select(TAuthor_ID()).from(TAuthor()).where(TAuthor_ID().eq(1)).union(select(TAuthor_ID()).from(TAuthor()).where(TAuthor_ID().ne(1))).union(select(TAuthor_ID()).from(TAuthor())).fetch();
  assertEquals(1,result4.size());
  assertEquals(1,(int)result4.getValue(0,TAuthor_ID()));
  Result<?> result5=create(new OnlyAuthorIDEqual1()).select(inline(1).as("value")).where(inline(2).in(select(TAuthor_ID()).from(TAuthor()).where(TAuthor_ID().eq(2)))).union(select(inline(2)).whereExists(selectOne().from(TAuthor()).where(TAuthor_ID().eq(2)))).union(select(inline(3)).from(selectFrom(TAuthor()).where(TAuthor_ID().eq(2)))).fetch();
  assertEquals(0,result5.size());
}
